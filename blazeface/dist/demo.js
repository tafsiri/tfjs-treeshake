!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("path"),require("fs"),require("worker_threads"),require("perf_hooks")):"function"==typeof define&&define.amd?define(["path","fs","worker_threads","perf_hooks"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Fe,e.Oe,e.worker_threads,e.perf_hooks)}(this,(function(e,t,n,r){"use strict";function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=a(e),o=a(t),i=a(n),u=a(r);class p{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(t instanceof Promise)throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function l(){return d}let c,d=null;function m(){if(null==c){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}c=e}return c}function h(e,t){const n=function(){const e=m();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const f=h("kernelRegistry",()=>new Map),y=h("gradRegistry",()=>new Map);function g(e,t){const n=v(e,t);return f.get(n)}function b(e){return y.get(e)}function w(e){const t=f.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function _(e){const{kernelName:t,backendName:n}=e,r=v(t,n);f.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),f.set(r,e)}function v(e,t){return`${t}_${e}`}function x(e,t,n){return Math.max(e,Math.min(t,n))}function k(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function N(e,t,n=""){k(E(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function I(e){k(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function S(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||O(e)&&!n)for(let r=0;r<e.length;++r)S(e[r],t,n);else t.push(e);return t}function T(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function E(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function A(e){return e%1==0}function M(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function F(e,t){const n=t.length;return k((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),k(e.every(e=>A(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function O(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function C(e){return"string"==typeof e||e instanceof String}function R(e){return Array.isArray(e)?R(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":"number"==typeof e?"float32":C(e)?"string":function(e){return"boolean"==typeof e}(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=S(e)),l().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function L(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return function e(t,n,r){const a=new Array;if(1===n.length){const e=n[0];for(let n=0;n<e;n++)a[n]=r[t+n]}else{const s=n[0],o=n.slice(1),i=o.reduce((e,t)=>e*t);for(let n=0;n<s;n++)a[n]=e(t+n*i,o,r)}return a}(0,e,t)}function z(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function V(){return l().platform.now()}function W(e){e.forEach(t=>{k(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function j(e,t="utf-8"){return t=t||"utf-8",l().platform.decode(e,t)}class H{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new q)}profileKernel(e,t,n){let r;const a=this.backendTimer.time(()=>{r=n()});for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{U(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function U(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class q{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?M(r+"ms",9):r.error,i=M(e,25),u=t.rank,p=t.size,l=M(t.shape.toString(),14);let c="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;c+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${l}\t%c${p}\t%c${c}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function G(e,t,n,r){const a=P(t),s=function(e,t,n,r){const a=T(t),s=r[r.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?Y(e):e;if(i>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],K(u[t+e],0,n).length)}return o}(e,t,n,a),o=t.length,i=function e(t,n,r,a,s,o=!0){const i="complex64"===r?2:1,u=n[0],p=n.length;if(0===p){if("complex64"===r){return[K(Y(t)[0],0,r)]}return"bool"===r?[X(t[0])]:[t[0].toString()]}if(1===p){if(u>20){const e=3*i;let n=Array.from(t.slice(0,e)),a=Array.from(t.slice((u-3)*i,u*i));return"complex64"===r&&(n=Y(n),a=Y(a)),["["+n.map((e,t)=>K(e,s[t],r)).join(", ")+", ..., "+a.map((e,t)=>K(e,s[u-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?Y(t):Array.from(t)).map((e,t)=>K(e,s[t],r)).join(", ")+"]"]}const l=n.slice(1),c=a.slice(1),d=a[0]*i,m=[];if(u>20){for(let n=0;n<3;n++){const a=n*d,o=a+d;m.push(...e(t.slice(a,o),l,r,c,s,!1))}m.push("...");for(let n=u-3;n<u;n++){const a=n*d,o=a+d;m.push(...e(t.slice(a,o),l,r,c,s,n===u-1))}}else for(let n=0;n<u;n++){const a=n*d,o=a+d;m.push(...e(t.slice(a,o),l,r,c,s,n===u-1))}const h=2===p?",":"";m[0]="["+m[0]+h;for(let e=1;e<m.length-1;e++)m[e]=" "+m[e]+h;let f=",\n";for(let e=2;e<p;e++)f+="\n";return m[m.length-1]=" "+m[m.length-1]+"]"+(o?"":f),m}(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+o),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(e=>"    "+e).join("\n")),u.join("\n")}function K(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":C(e)?`'${e}'`:"bool"===n?X(e):parseFloat(e.toFixed(7)).toString(),M(r,t)}function X(e){return 0===e?"false":"true"}function Y(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class J{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=T(e),null!=n){const e=n.length;k(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||function(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}(t,this.size),this.strides=P(e)}set(e,...t){0===t.length&&(t=[0]),k(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Q().makeTensor(this.values,this.shape,this.dtype)}}let Q=null,Z=null;class ee{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=T(e),this.strides=P(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Z.buffer(this.shape,this.dtype,e)}bufferSync(){return Z.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return L(this.shape,e)}arraySync(){return L(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=Q().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>j(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Q().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>j(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Q().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Q().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Z.print(this,e)}clone(){return this.throwIfDisposed(),Z.clone(this)}toString(e=!1){return G(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Z.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Q().makeVariable(this,e,t,n)}}Object.defineProperty(ee,Symbol.hasInstance,{value:e=>!!e&&null!=e.dataId&&null!=e.shape&&null!=e.dtype});class te extends ee{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!E(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Q().disposeTensor(this),this.dataId=e.dataId,Q().incRef(this,null)}dispose(){Q().disposeVariable(this),this.isDisposedInternal=!0}}var ne,re,ae,se,oe;Object.defineProperty(te,Symbol.hasInstance,{value:e=>e instanceof ee&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ne||(ne={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(re||(re={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ae||(ae={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(se||(se={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(oe||(oe={}));const ie={float32:se,int32:re,bool:ae,complex64:oe};function ue(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ie[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function pe(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof ee)return void n.push(t);if(a=t,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=t;for(const t in s){const a=s[t];r.has(a)||(r.add(a),e(a,n,r))}}(e,t,new Set),t}class le{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ce{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new le}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new H(this.backendInstance),!0}setupRegisteredKernels(){w(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){w(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(Promise.resolve(n)===n){const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ce.nextTensorId++}nextVariableId(){return ce.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return me.runKernelFunc(t=>t.cast(e,"float32"),t,null,"Cast",n)}}),[],{}),t}runKernel(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,a,s,o){let i,u=[];const p=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const l=this.state.numBytes,c=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const m=g(r,this.backendName);let h,f;if(null!=m)d=()=>{const e=this.backend.numDataIds();h=m.kernelFunc({inputs:t,attrs:a,backend:this.backend});const n=Array.isArray(h)?h:[h];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const i=n.map(({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n));if(p){let e=this.getTensorsForGradient(r,t,i);if(null==e){null==o&&(o=[]);const t=i.filter((e,t)=>o[t]);e=(s||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return i};else{const t=e=>{p&&(u=e.map(e=>this.keep(this.clone(e))))};d=()=>{const n=this.backend.numDataIds();h=this.tidy(()=>e(this.backend,t));const a=Array.isArray(h)?h:[h];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(r,t,()=>d()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),i=f.outputs):i=d()}),p&&this.addTapeNode(r,t,i,n,u,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-l,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(e=>null!=t[e]?t[e].shape:null),outputShapes:i.map(e=>e.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(h)?i:i[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=b(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(k(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const o=n.filter((e,t)=>a[t]);return s.concat(o)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&C(e[0])&&(a=e.map(e=>function(e,t="utf-8"){return t=t||"utf-8",l().platform.encode(e,t)}(e)));const s=r.write(a,t,n),o=new ee(t,n,s,this.nextTensorId());if(this.incRef(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a=new ee(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new te(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*D(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof te||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=b(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=z(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=pe(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(k(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));k(a instanceof ee,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=function(e,t){const n=z(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}(T(e),"float32");return me.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n(()=>i[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!E(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),he);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return k(B(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;k(t.every(e=>e instanceof ee),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc((r,a)=>(n=e(...t,a),k(n.value instanceof ee,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),k(B(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];k(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),k(s.every(e=>e instanceof ee),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return s.forEach((e,t)=>{o[t]=()=>e}),o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=V(),n=await this.backend.time(e);return n.wallMs=V()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new le;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function de(){const e=m();if(null==e._tfengine){const t=new p(e);e._tfengine=new ce(t)}var t;return t=e._tfengine.ENV,console.log("setEnvironmentGlobal",t),d=t,function(e){Q=e}(()=>e._tfengine),e._tfengine}ce.nextTensorId=0,ce.nextVariableId=0;const me=de();function he(e,t){const n={a:e,b:t};return me.runKernelFunc((n,r)=>{const a=n.add(e,t);return r([e,t]),a},n,null,"Add")}const fe=l();function ye(e,t){let n=e;if(O(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||O(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&l().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!O(t))return void k(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);k(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),k(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const a=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],a,r.concat(n))}(e,r,[]),r}function ge(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function be(e,t,n,r="numeric"){if(e instanceof ee)return ge(r,e.dtype,t,n),e;let a=R(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),ge(r,a,t,n),null==e||!O(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=ye(e,a);O(e)||Array.isArray(e)||(e=[e]);const o="string"!==a?$(e,a):S(e,[],!0);return me.makeTensor(o,s,a)}function we(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,r)=>be(e,`${t}[${r}]`,n),r)}function _e(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const a=(...e)=>{me.startScope(n);try{const t=r(...e);return t instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),me.endScope(t),t}catch(e){throw me.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}fe.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),fe.registerFlag("IS_BROWSER",()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope),fe.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),fe.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),fe.registerFlag("PROD",()=>!1),fe.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>fe.getBool("DEBUG")),fe.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),fe.registerFlag("IS_TEST",()=>!1);const ve=_e({complex_:function(e,t){const n=be(e,"real","complex"),r=be(t,"imag","complex");N(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return me.runKernelFunc(e=>e.complex(n,r),a,null,"Complex")}});function xe(e,t,n,r){if(null==r&&(r=R(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!O(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){W(t);const e=T(t),r=T(n);k(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==T(t.slice(e));k(n[e]===t[e]||!a,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return O(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?$(e,r):S(e,[],!0),me.makeTensor(e,t,r)}function ke(e,t,n){return xe(e,t,ye(e,n),n)}const Ne={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};const Ie="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Se(e){return Ie?Buffer.byteLength(e):new Blob([e]).size}function Te(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Ee(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Se(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Se(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ae(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class Me{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Me.instance&&(Me.instance=new Me),Me.instance}static registerSaveRouter(e){Me.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Me.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Me.getHandlers(e,"save")}static getLoadHandlers(e,t){return Me.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Me.getInstance().loadRouters:Me.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}function Fe(){if(!l().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Oe(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class De{constructor(e){if(this.indexedDB=Fe(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Oe(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Ee(t),s=a.transaction("model_info_store","readwrite");let o=s.objectStore("model_info_store");const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction("models_store","readwrite");const i=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore("model_info_store");const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}De.URL_SCHEME="indexeddb://";const Ce=e=>{return l().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(De.URL_SCHEME)?(t=e.slice(De.URL_SCHEME.length),new De(t)):null;var t};Me.registerSaveRouter(Ce),Me.registerLoadRouter(Ce);class Re{constructor(){this.indexedDB=Fe()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Oe(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),s=a.objectStore("model_info_store").getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(De.URL_SCHEME)?t.slice(De.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Oe(r),r.onsuccess=()=>{const a=r.result,s=a.transaction("model_info_store","readwrite"),o=s.objectStore("model_info_store"),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}const Be="tensorflowjs_models",Pe="info",$e="model_topology",Le="weight_specs",ze="weight_data",Ve="model_metadata";function We(e){return{info:[Be,e,Pe].join("/"),topology:[Be,e,$e].join("/"),weightSpecs:[Be,e,Le].join("/"),weightData:[Be,e,ze].join("/"),modelMetadata:[Be,e,Ve].join("/")}}function je(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class He{constructor(e){if(!l().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=We(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ee(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ie)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ie){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}He.URL_SCHEME="localstorage://";const Ue=e=>{return l().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(He.URL_SCHEME)?(t=e.slice(He.URL_SCHEME.length),new He(t)):null;var t};Me.registerSaveRouter(Ue),Me.registerLoadRouter(Ue);class qe{constructor(){k(l().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),k("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Be+"/",n="/"+Pe;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[je(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=We(e=(t=e).startsWith(He.URL_SCHEME)?t.slice(He.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}function Ge(e,t,n,r){!function(e){k(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){k(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),k(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),k(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(s=>(s.then(s=>{const o=n+ ++a/e.length*(r-n);return t(o),s}),s)))}class Ke{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(k("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=l().platform.fetch,k(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&k(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Ee(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,o=t.format,i=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,p;if(null!=r){const e=await this.loadWeights(r);[u,p]=e}return{modelTopology:n,weightSpecs:u,weightData:p,userDefinedMetadata:i,generatedBy:a,convertedBy:s,format:o}}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));return[s,Te(await async function(e,t){null==t&&(t={});const n=null==t.fetchFunc?l().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await Ge(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await Ge(a,t.onProgress,.5,1)}(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Xe(e){return null!=e.match(Ke.URL_SCHEME_REGEX)}Ke.URL_SCHEME_REGEX=/^https?:\/\//;const Ye=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Xe(e)):Xe(e),n)return Je(e,t)}return null};function Je(e,t){return new Ke(e,t)}function Qe(e,t){return Je(e,t)}Me.registerSaveRouter(Ye),Me.registerLoadRouter(Ye);class Ze{constructor(){this.managers={}}static getInstance(){return null==Ze.instance&&(Ze.instance=new Ze),Ze.instance}static registerManager(e,t){k(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),k(e.length>0,()=>"scheme must not be an empty string.");const n=Ze.getInstance();k(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}const et=_e({cast_:function(e,t){const n=be(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return me.runKernelFunc(e=>e.cast(n,t),r,null,"Cast",a)}});const tt=_e({reshape_:function(e,t){const n=be(e,"x","reshape",null);t=function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}(t,n.size),k(n.size===T(t),()=>"new shape and old shape must have the same number of elements.");const r={x:n},a={shape:t};return me.runKernelFunc((e,r)=>(r([n]),e.reshape(n,t)),r,null,"Reshape",a)}});const nt=_e({transpose_:function(e,t){const n=be(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),k(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{k(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return me.runKernelFunc(e=>e.transpose(n,t),r,null,"Transpose",a)}});let rt;const at=_e({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=g("FromPixels",me.backendName)){const n={pixels:e},r={numChannels:t};return me.runKernel("FromPixels",n,r)}const[i,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let p,l;if(o?p=e.getContext("2d").getImageData(0,0,i,u).data:r||n?p=e.data:(s||a)&&(null==rt&&(rt=document.createElement("canvas").getContext("2d")),rt.canvas.width=i,rt.canvas.height=u,rt.drawImage(e,0,0,i,u),p=rt.getImageData(0,0,i,u).data),4===t)l=new Int32Array(p);else{const e=i*u;l=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)l[n*t+e]=p[4*n+e]}return function(e,t,n){if(I(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ye(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return xe(e,t,r,n)}(l,[u,i,t],"int32")}});function st(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ot(e,t,n){return n<=e?n:n-(t-1)}function it(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ut(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function pt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=x(0,o,u-1),o}function lt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?x(0,o,u):x(-1,o,u-1),o}function ct(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function dt(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function mt(e,t,n){let r,a;return r="number"==typeof t?[t,...new Array(e.rank-1).fill(0)]:t.length<e.rank?t.concat(new Array(e.rank-t.length).fill(0)):t.slice(),r.forEach(e=>{k(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(e.rank).fill(-1):"number"==typeof n?[n,...new Array(e.rank-1).fill(-1)]:n.length<e.rank?n.concat(new Array(e.rank-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(k(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function ht(e,t){return me.tidy(e,t)}function ft(e){return me.keep(e)}const yt=_e({add_:function(e,t){let n=be(e,"a","add"),r=be(t,"b","add");[n,r]=ue(n,r);const a={a:n,b:r};return me.runKernelFunc((e,t)=>{const a=e.add(n,r);return t([n,r]),a},a,null,"Add")}});const gt=_e({floorDiv_:function(e,t){let n=be(e,"a","floorDiv"),r=be(t,"b","floorDiv");[n,r]=ue(n,r);const a={a:n,b:r};return me.runKernelFunc((e,t)=>{const a=e.floorDiv(n,r);return t([n,r]),a},a,null,"FloorDiv")}});const bt=_e({div_:function(e,t){let n=be(e,"a","div"),r=be(t,"b","div");if([n,r]=ue(n,r),"int32"===n.dtype&&"int32"===r.dtype)return gt(n,r);const a={a:n,b:r};return me.runKernelFunc((e,t)=>{const a=e.realDivide(n,r);return t([n,r]),a},a,null,"Div",{})}});const wt=_e({mul_:function(e,t){let n=be(e,"a","mul"),r=be(t,"b","mul");[n,r]=ue(n,r);const a={a:n,b:r};return me.runKernelFunc((e,t)=>{const a=e.multiply(n,r);return t([n,r]),a},a,null,"Multiply")}});function _t(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function vt(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function xt(e,t){return function(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}(e,t.map(e=>1),t)}function kt(e,t,n){k(_t(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function Nt(e,t){if(_t(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function It(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function St(e,t,n,r,a,s,o="channelsLast"){const[i,u]=Et(t);let p;if("channelsLast"===o)p=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);p=[i,u,e[1],e[1]]}return Tt(e,p,n,r,a,s,!1,o)}function Tt(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,p,l,c]=[-1,-1,-1,-1];if("channelsLast"===i)[u,p,l,c]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,c,p,l]=e}const[d,m,,h]=t,[f,y]=Et(n),[g,b]=Et(r),w=At(d,g),_=At(m,b),{padInfo:v,outHeight:x,outWidth:N}=function(e,t,n,r,a,s,o,i,u){let p,l,c;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=function(e,t,n,r=1){const a=At(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}(e,t,n));const s=e[0],o=e[1],i=Mt((s-t+2*r)/n+1,a);k(A(i),()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`);const u=Mt((o-t+2*r)/n+1,a);return k(A(u),()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`),[i,u]}([t,n],s,r,e,i);l=a[0],c=a[1]}else if("same"===e){l=Math.ceil(t/r),c=Math.ceil(n/a);const e=Math.max(0,(l-1)*r+s-t),i=Math.max(0,(c-1)*a+o-n),u=Math.floor(e/2),d=e-u,m=Math.floor(i/2);p={top:u,bottom:d,left:m,right:i-m,type:"SAME"}}else if("valid"===e)p={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/r),c=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const d="channelsLast"===u?e[1][0]:e[2][0],m="channelsLast"===u?e[1][1]:e[2][1],h="channelsLast"===u?e[2][0]:e[3][0],f="channelsLast"===u?e[2][1]:e[3][1];p={top:d,bottom:m,left:h,right:f,type:0===d&&0===m&&0===h&&0===f?"VALID":"EXPLICIT"},l=Mt((t-s+d+m)/r+1,i),c=Mt((n-o+h+f)/a+1,i)}}return{padInfo:p,outHeight:l,outWidth:c}}(a,p,l,f,y,w,_,s,i),I=o?h*c:h;let S;return"channelsFirst"===i?S=[u,I,x,N]:"channelsLast"===i&&(S=[u,x,N,I]),{batchSize:u,dataFormat:i,inHeight:p,inWidth:l,inChannels:c,outHeight:x,outWidth:N,outChannels:I,padInfo:v,strideHeight:f,strideWidth:y,filterHeight:d,filterWidth:m,effectiveFilterHeight:w,effectiveFilterWidth:_,dilationHeight:g,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Et(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function At(e,t){return t<=1?e:e+(e-1)*(t-1)}function Mt(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Ft(e){const[t,n,r]=Et(e);return 1===t&&1===n&&1===r}function Ot(e,t){return Ft(e)||Ft(t)}function Dt(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function Ct(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Rt=_e({concat_:function(e,t=0){k(e.length>=1,()=>"Pass at least one tensor to concat");let n=we(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)});const r=F(t,n[0].shape)[0],a=Ct(n.map(e=>e.shape),r);if(0===T(a))return ke([],a);if(n=n.filter(e=>e.size>0),1===n.length)return n[0];!function(e,t){const n=e[0].length;e.forEach((e,t)=>{k(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),k(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)k(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}(n.map(e=>e.shape),r);const s=n,o={axis:t};return me.runKernelFunc((e,t)=>{const a=e.concat(n,r);return t(n),a},s,null,"Concat",o)}});const Bt=_e({sigmoid_:function(e){const t=be(e,"x","sigmoid"),n={x:t};return me.runKernelFunc((e,n)=>{const r=e.sigmoid(t);return n([r]),r},n,null,"Sigmoid")}});const Pt=_e({slice_:function(e,t,n){const r=be(e,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const[a,s]=mt(r,t,n);!function(e,t,n){k(e.rank===t.length,()=>`Error in slice${e.rank}D: Length of begin ${t} must match the rank of the array (${e.rank}).`),k(e.rank===n.length,()=>`Error in slice${e.rank}D: Length of size ${n} must match the rank of the array (${e.rank}).`);for(let r=0;r<e.rank;++r)k(t[r]+n[r]<=e.shape[r],()=>`Error in slice${e.rank}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}(r,a,s);const o={x:r},i={begin:t,size:n};return me.runKernelFunc((e,t)=>(t([r]),e.slice(r,a,s)),o,null,"Slice",i)}});const $t=_e({clone_:function(e){const t=be(e,"x","clone",null),n={x:t};return me.runKernelFunc(()=>me.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n,null,"Identity")}});function Lt(e,t="float32",n){return t=t||"float32",W(e),new J(e,t,n)}const zt=_e({concat2d_:function(e,t){return Rt(e,t)}});const Vt=_e({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=be(e,"x","conv2d"),u=be(t,"filter","conv2d");let p=i,l=!1;3===i.rank&&(l=!0,p=tt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),k(4===p.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),k(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=o&&k(A(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const c="NHWC"===a?p.shape[3]:p.shape[1];k(c===u.shape[2],()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${u.shape[2]}.`),k(Ot(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const d={x:p,filter:u},m={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},h=me.runKernelFunc((e,t)=>{const i=Dt(a),l=Tt(p.shape,u.shape,n,s,r,o,!1,i),c=e.conv2d(p,u,l);return t([p,u]),c},d,null,"Conv2D",m);return l?tt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Wt=_e({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){k(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,u=t,p=!1;3===t.rank&&(p=!0,u=tt(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),k(4===i.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."),k(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),k(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const l="NHWC"===s?i[3]:i[1],c="NHWC"===s?u.shape[3]:u.shape[1];k(l===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`),k(c===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`),null!=o&&k(A(a),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const d={dy:u,filter:n},m={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},h=me.runKernelFunc((e,t)=>{const p=Dt(s),l=Tt(i,n.shape,r,1,a,o,!1,p),c=e.conv2dDerInput(u,n,l);return t([u,n]),c},d,null,"Conv2DBackpropInput",m);return p?tt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const jt=_e({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=be(e,"x","depthwiseConv2d"),u=be(t,"filter","depthwiseConv2d");let p=i,l=!1;3===i.rank&&(l=!0,p=tt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),k(4===p.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),k(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),k(p.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=o&&k(A(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const c={x:p,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},m=me.runKernelFunc((e,t)=>{null==s&&(s=[1,1]),k(Ot(n,s),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const a=Tt(p.shape,u.shape,n,s,r,o,!0),i=e.depthwiseConv2D(p,u,a);return t([p,u]),i},c,null,"DepthwiseConv2dNative",d);return l?tt(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});function Ht(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function Ut(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const qt=_e({elu_:function(e){const t=be(e,"x","elu"),n={x:t};return me.runKernelFunc((e,n)=>{const r=e.elu(t);return n([r]),r},n,null,"Elu")}});const Gt=_e({expandDims_:function(e,t=0){const n=be(e,"x","expandDims",null);k(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return t<0&&(k(-(n.rank+1)<=t,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),t=n.rank+t+1),r.splice(t,0,1),tt(n,r)}});function Kt(e,t){if((O(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&O(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return xe(e,[],[],t)}function Xt(e){return me.customGrad(e)}const Yt=_e({sub_:function(e,t){let n=be(e,"a","sub"),r=be(t,"b","sub");[n,r]=ue(n,r);const a={a:n,b:r};return me.runKernelFunc((e,t)=>{const a=e.subtract(n,r);return t([n,r]),a},a,null,"Sub")}});const Jt=_e({sum_:function(e,t=null,n=!1){let r=be(e,"x","sum");"bool"===r.dtype&&(r=et(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return me.runKernelFunc((e,a)=>{a([r]);const s=F(t,r.shape),o=Nt(s,r.rank);let i=s,u=r;null!=o&&(u=nt(r,o),i=It(i.length,r.rank));let p=e.sum(u,i);if(n){const e=xt(p.shape,s);p=tt(p,e)}return p},a,null,"Sum",s)}});const Qt=_e({maxPool_:function(e,t,n,r,a){const s=be(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=tt(s,[1,s.shape[0],s.shape[1],s.shape[2]])),k(4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),k(Ot(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=a&&k(A(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:o},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a},l=me.runKernelFunc((e,s)=>{const i=St(o.shape,t,n,1,r,a);let u;return u=1===i.filterWidth&&1===i.filterHeight&&E(i.inShape,i.outShape)?o.clone():e.maxPool(o,i),s([o,u]),u},u,null,"MaxPool",p);return i?tt(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Zt=_e({pad_:function(e,t,n=0){const r=be(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return me.runKernelFunc((e,a)=>(a([r]),e.pad(r,t,n)),s,null,"PadV2",a)}});const en=_e({prelu_:function(e,t){const n=be(e,"x","prelu"),r=be(t,"alpha","prelu"),a={x:n,alpha:r};return me.runKernelFunc((e,t)=>{const a=e.prelu(n,r);return t([n,r]),a},a,null,"Prelu")}});function tn(e,t){I(e);const n=ye(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return xe(e,null,n,t)}const nn=_e({relu_:function(e){const t=be(e,"x","relu"),n={x:t};return me.runKernelFunc((e,n)=>(n([t]),"bool"===t.dtype?et(t,"int32"):e.relu(t)),n,null,"Relu")}});const rn=_e({relu6_:function(e){const t=be(e,"x","relu6"),n={x:t};return me.runKernelFunc((e,n)=>(n([t]),"bool"===t.dtype?et(t,"int32"):e.relu6(t)),n,null,"Relu6")}});const an=_e({squeeze_:function(e,t){const n=be(e,"x","squeeze");return tt(n,function(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:F(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}});const sn=_e({stack_:function(e,t=0){const n=we(e,"tensors","stack");if(k(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return Gt(n[0],t);const r=n[0].rank,a=n[0].shape,s=n[0].dtype;k(t<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(e=>{N(a,e.shape,"All tensors passed to stack must have matching shapes"),k(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=n.map(e=>Gt(e,t));return Rt(o,t)}});const on=_e({step_:function(e,t=0){const n=be(e,"x","step"),r={x:n},a={alpha:t};return me.runKernelFunc(e=>e.step(n,t),r,null,"Step",a)}});const un=_e({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){null==r&&(r=new Array(t.length));let p=be(e,"x","stridedSlice");const l={x:p},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return me.runKernelFunc(e=>{const l=st(o);if(l.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const c=p.rank-t.length,d=st(i),m=p.shape.slice();if(d.forEach(e=>{t[e]=0,n[e]=1,m.splice(e,0,1)}),p=tt(p,m),l.length&&c>0){const e=l[0],o=c+1;t=function(e,t,n,r,a){const s=[...a],o=it(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=ot(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}(a,e,o,t,p.shape),n=function(e,t,n,r,a){const s=[...a],o=it(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=ot(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=x(0,s[e],a[e])}return s}(s,e,o,n,p.shape),r=function(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}(r,e,o,p.shape)}else for(let e=0;e<p.rank;e++)t[e]=pt(a,t,r,p.shape,e,o),n[e]=lt(s,n,r,p.shape,e,o),r[e]=ut(r,e,o);const h=st(u);h.forEach(e=>{n[e]=t[e]+1,r[e]=1});const f=function(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}(t,n,r),y=f.filter((e,t)=>-1===h.indexOf(t));if(r.every(e=>1===e))return tt(Pt(p,t,f),y);const g=e.stridedSlice(p,t,n,r);return tt(g,y)},l,null,"StridedSlice",c)}});function pn(e,t,n){if(I(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ye(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return xe(e,t,r,n)}const ln=_e({unstack_:function(e,t=0){const n=be(e,"x","unstack");k(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),t<0&&(t+=n.shape.length);const r={value:n},a={axis:t};return me.runKernelFunc(e=>e.unstack(n,t),r,null,"Unpack",a)}});const cn=_e({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=tt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=tt(t,[1,t.shape[0],t.shape[1],t.shape[2]])),k(4===i.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),k(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),k(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const p="NHWC"===s?i.shape[3]:i.shape[1],l="NHWC"===s?u.shape[3]:u.shape[1];k(p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`),k(l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),null!=o&&k(A(a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const c={x:i,dy:u},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:o};return me.runKernelFunc(e=>{const t=Dt(s),p=Tt(i.shape,n,r,1,a,o,!1,t);return e.conv2dDerFilter(i,u,p)},c,null,"Conv2DBackpropFilter",d)}});function dn(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return wt(e,on(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function mn(e,t){let n=t;const r=function(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}(e.shape,t.shape);return r.length>0&&(n=Jt(n,r)),tt(n,e.shape)}function hn(e,t,n){if("linear"===t)return e;if("relu"===t)return nn(e);if("elu"===t)return qt(e);if("relu6"===t)return rn(e);if("prelu"===t)return en(e,n);throw new Error(`Unknown fused activation ${t}.`)}const fn=(e,t)=>!(e>0)||"linear"===t;const yn=_e({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:p}){if(u=u||"linear",!1===fn(me.state.gradientDepth,u)){let l=Vt(e,t,n,r,a,s,o);return null!=i&&(l=yt(l,i)),hn(l,u,p)}const l=be(e,"x","conv2d"),c=be(t,"filter","conv2d");let d=l,m=!1;3===l.rank&&(m=!0,d=tt(l,[1,l.shape[0],l.shape[1],l.shape[2]])),k(4===d.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+d.rank+"."),k(4===c.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+c.rank+"."),null!=o&&k(A(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),k(d.shape[3]===c.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${c.shape[2]}.`),k(Ot(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),k("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const h=Tt(d.shape,c.shape,n,s,r,o);let f,y;null!=i&&(f=be(i,"bias","fused conv2d"),[f]=ue(f,l),Ut(h.outShape,f.shape)),null!=p&&(y=be(p,"prelu weights","fused conv2d"));const g=(e,t)=>{const[a,o,i,p]=t,l=dn(e,i,u);k(Ft(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const c=[Wt(o.shape,l,a,n,r),cn(o,l,a.shape,n,r)];if(null!=p){const e=mn(p,l);c.push(e)}return c},b=e=>e.fusedConv2d({input:d,filter:c,convInfo:h,bias:f,activation:u,preluActivationWeights:y}),w={x:d,filter:c,bias:f,preluActivationWeights:y},_={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u};if(null==i){return Xt((e,t,n)=>{let r=me.runKernelFunc(b,w,null,"FusedConv2D",_);return n([t,e,r]),m&&(r=tt(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:g}})(d,c)}return Xt((e,t,n,r)=>{let a=me.runKernelFunc(b,w,null,"FusedConv2D",_);return r([t,e,a,n]),m&&(a=tt(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:g}})(d,c,f)}});const gn=_e({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r){let a=e;3===e.rank&&(a=tt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let s=t;3===s.rank&&(s=tt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const o={x:a,dy:s};return me.runKernelFunc(e=>e.depthwiseConv2DDerFilter(a,s,r),o,null,"DepthwiseConv2dNativeBackpropFilter")}});const bn=_e({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r){let a=t,s=!1;3===t.rank&&(s=!0,a=tt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const o={dy:a},i=me.runKernelFunc(e=>e.depthwiseConv2DDerInput(a,n,r),o,null,"DepthwiseConv2dNativeBackpropInput");return s?tt(i,[i.shape[1],i.shape[2],i.shape[3]]):i}});const wn=_e({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:p}){if(!1===fn(me.state.gradientDepth,u)){let l=jt(e,t,n,r,a,s,o);return null!=i&&(l=yt(l,i)),hn(l,u,p)}const l=be(e,"x","depthwiseConv2d"),c=be(t,"filter","depthwiseConv2d");let d=l,m=!1;3===l.rank&&(m=!0,d=tt(l,[1,l.shape[0],l.shape[1],l.shape[2]])),k(4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),k(4===c.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),k(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),null==s&&(s=[1,1]),k(Ot(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=o&&k(A(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`);const h=Tt(d.shape,c.shape,n,s,r,o,!0);let f,y;null!=i&&(f=be(i,"bias","fused conv2d"),[f]=ue(f,l),Ut(h.outShape,f.shape)),null!=p&&(y=be(p,"prelu weights","fused depthwiseConv2d"));const g=(e,t)=>{k(Ft(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[n,r,a,o]=t,i=dn(e,a,u),p=bn(r.shape,i,n,h),l=gn(r,i,n.shape,h);if(null!=o){return[p,l,mn(f,i)]}return[p,l]},b=e=>e.fusedDepthwiseConv2D({input:d,filter:c,convInfo:h,bias:f,activation:u,preluActivationWeights:y}),w={x:d,filter:c,bias:f,preluActivationWeights:y},_={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u};if(null==i){return Xt((e,t,n)=>{let r=me.runKernelFunc(b,w,null,"FusedDepthwiseConv2D",_);return n([t,e,r]),m&&(r=tt(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:g}})(d,c)}return Xt((e,t,n,r)=>{let a=me.runKernelFunc(b,w,null,"FusedDepthwiseConv2D",_);return r([t,e,a,n]),m&&(a=tt(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:g}})(d,c,f)}});const _n=_e({cropAndResize_:function(e,t,n,r,a,s){const o=be(e,"image","cropAndResize"),i=be(t,"boxes","cropAndResize","float32"),u=be(n,"boxInd","cropAndResize","int32");a=a||"bilinear",s=s||0;const p=i.shape[0];k(4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),k(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${i.shape}.`),k(1===u.rank&&u.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${i.shape}.`),k(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),k(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),k("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:o,boxes:i,boxInd:u},c={method:a,extrapolationValue:s,cropSize:r};return me.runKernelFunc(e=>e.cropAndResize(o,i,u,r,a,s),l,null,"CropAndResize",c)}});const vn=_e({flipLeftRight_:function(e){const t=be(e,"image","flipLeftRight","float32");k(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return me.runKernel("FlipLeftRight",n,{})}});const xn=_e({rotateWithOffset_:function(e,t,n=0,r=.5){const a=be(e,"image","rotateWithOffset","float32");k(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},o={radians:t,fillValue:n,center:r};return me.runKernel("RotateWithOffset",s,o)}});function kn(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),k(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),k(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),k(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),k(1===t.rank,()=>"scores must be a 1D tensor"),k(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was `+t.shape[0]),k(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Nn=_e({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=be(e,"boxes","nonMaxSuppression"),o=be(t,"scores","nonMaxSuppression"),i=kn(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return me.runKernelFunc(e=>e.nonMaxSuppression(s,o,n,r,a),{boxes:s,scores:o},null,"NonMaxSuppressionV3",u)}});function In(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||Sn)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Sn(e,t){return e>t?1:e<t?-1:0}function Tn(e,t,n,r,a,s,o=!1,i=!1,u=!1){const p=[];for(let e=0;e<t.length;e++)t[e]>a&&p.push({score:t[e],boxIndex:e,suppressBeginIndex:0});p.sort(Mn);const l=s>0?-.5/s:0,c=[],d=[];for(;c.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let n=c.length-1;n>=o;--n){const o=En(e,s,c[n]);if(o>=r){i=!0;break}if(t.score=t.score*An(r,l,o),t.score<=a)break}t.suppressBeginIndex=c.length,i||(t.score===n?(c.push(s),d.push(t.score)):t.score>a&&In(p,t,Mn))}const m=c.length,h=n-m;i&&h>0&&(c.push(...new Array(h).fill(0)),d.push(...new Array(h).fill(0)));const f={selectedIndices:tn(c,"int32")};return o&&(f.selectedScores=tn(d,"float32")),u&&(f.validOutputs=Kt(m,"int32")),f}function En(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),p=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),c=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),m=(i-s)*(u-o),h=(c-p)*(d-l);if(m<=0||h<=0)return 0;const f=Math.max(s,p),y=Math.max(o,l),g=Math.min(i,c),b=Math.min(u,d),w=Math.max(g-f,0)*Math.max(b-y,0);return w/(m+h-w)}function An(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Mn(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Fn=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=be(e,"boxes","nonMaxSuppressionAsync"),o=be(t,"scores","nonMaxSuppressionAsync"),i=kn(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),p=function(e,t,n,r,a){return Tn(e,t,n,r,a,0).selectedIndices}(u[0],u[1],n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),p};const On=_e({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=be(e,"boxes","nonMaxSuppression"),i=be(t,"scores","nonMaxSuppression"),u=kn(o,i,n,r,a,s),p={boxes:o,scores:i},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},c=me.runKernel("NonMaxSuppressionV5",p,l);return{selectedIndices:c[0],selectedScores:c[1]}}});const Dn=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=be(e,"boxes","nonMaxSuppressionAsync"),i=be(t,"scores","nonMaxSuppressionAsync"),u=kn(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const p=await Promise.all([o.data(),i.data()]),l=function(e,t,n,r,a,s){return Tn(e,t,n,r,a,s,!0)}(p[0],p[1],n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),l};const Cn=_e({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=be(e,"boxes","nonMaxSuppression"),i=be(t,"scores","nonMaxSuppression"),u=kn(o,i,n,r,a,null),p={boxes:o,scores:i},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},c=me.runKernel("NonMaxSuppressionV4",p,l);return{selectedIndices:c[0],validOutputs:c[1]}}});const Rn=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=be(e,"boxes","nonMaxSuppressionAsync"),i=be(t,"scores","nonMaxSuppressionAsync"),u=kn(o,i,n,r,a,null),p=u.maxOutputSize,l=u.iouThreshold,c=u.scoreThreshold,[d,m]=await Promise.all([o.data(),i.data()]),h=function(e,t,n,r,a,s){return Tn(e,t,n,r,a,0,!1,s,!0)}(d,m,p,l,c,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),h};const Bn=_e({resizeBilinear_:function(e,t,n=!1){const r=be(e,"images","resizeBilinear");k(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),k(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+".");let a=r,s=!1;3===r.rank&&(s=!0,a=tt(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[o,i]=t,u={images:a},p={alignCorners:n,size:t},l=me.runKernelFunc((e,t)=>(t([a]),e.resizeBilinear(a,o,i,n)),u,null,"ResizeBilinear",p);return s?tt(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Pn={flipLeftRight:vn,resizeNearestNeighbor:_e({resizeNearestNeighbor_:function(e,t,n=!1){const r=be(e,"images","resizeNearestNeighbor");k(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),k(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),k("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let a=r,s=!1;3===r.rank&&(s=!0,a=tt(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[o,i]=t,u={images:a},p={alignCorners:n,size:t},l=me.runKernelFunc((e,t)=>(t([a]),e.resizeNearestNeighbor(a,o,i,n)),u,null,"ResizeNearestNeighbor",p);return s?tt(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),resizeBilinear:Bn,rotateWithOffset:xn,cropAndResize:_n,nonMaxSuppression:Nn,nonMaxSuppressionAsync:Fn,nonMaxSuppressionWithScore:On,nonMaxSuppressionWithScoreAsync:Dn,nonMaxSuppressionPadded:Cn,nonMaxSuppressionPaddedAsync:Rn};class $n{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}function Ln(e){throw new Error(`'${e}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}class zn{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(l().get("IS_BROWSER")){l().setPlatform("browser",new zn);try{Ze.registerManager(He.URL_SCHEME,new qe)}catch(e){}try{Ze.registerManager(De.URL_SCHEME,new Re)}catch(e){}}const Vn=()=>require("node-fetch");let Wn;class jn{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=l().global.fetch?l().global.fetch(e,t):(null==Wn&&(Wn=Vn()),Wn(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}l().get("IS_NODE")&&l().setPlatform("node",new jn),console.log("calling getOrMakeEngine"),de();var Hn,Un;Z={buffer:Lt,cast:et,clone:$t,print:function(e,t=!1){console.log(e.toString(t))}},function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Hn||(Hn={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Un||(Un={}));const qn={};function Gn(e){return qn[e]}function Kn(e,t,n,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,s=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return Xn(t.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type){return t.inputNames.slice(e,s).map(e=>Xn(e,n,r))}const o=Xn(t.inputNames.slice(e)[0],n,r),i=o.dataSync();return"number"===a.type?i[0]:L(o.shape,i)}const s=t.attrParams[e];return s&&s.value}function Xn(e,t,n){const[r,a]=Qn(e),s=n.currentContextIds.find(e=>!!t[Jn(r,e)]);return void 0!==s?t[Jn(r,s)][a]:void 0}function Yn(e,t){const[n,r]=Qn(e);return[Jn(n,t&&t.currentContextId),r]}function Jn(e,t){return t?`${e}-${t}`:e}function Qn(e){const t=e.split(":");if(1===t.length)return[e,0];return[t[0],Number(t[t.length-1])]}function Zn(e,t,n){let r=Kn("pad",e,t,n);if("explicit"===r){r=Kn("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function er(e){return e.kept?e:$t(e)}var tr=Object.freeze({__proto__:null,json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var nr=Object.freeze({__proto__:null,json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var rr=Object.freeze({__proto__:null,json:[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]});var ar=Object.freeze({__proto__:null,json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]});var sr=Object.freeze({__proto__:null,json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]});var or=Object.freeze({__proto__:null,json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var ir=Object.freeze({__proto__:null,json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]});var ur=Object.freeze({__proto__:null,json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]});var pr=Object.freeze({__proto__:null,json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]});var lr=Object.freeze({__proto__:null,json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var cr=Object.freeze({__proto__:null,json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var dr=Object.freeze({__proto__:null,json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]});var mr=Object.freeze({__proto__:null,json:[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]});var hr=Object.freeze({__proto__:null,json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]});var fr=Object.freeze({__proto__:null,json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]});var yr=Object.freeze({__proto__:null,json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]});class gr{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[tr,nr,rr,ar,sr,or,ir,lr,pr,ur,cr,dr,mr,hr,fr,yr].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")&&r.push(e[t.name]),"Const"===t.op&&a.push(e[t.name]),e),{});let o=[];const i=[];let u={},p={};null!=t&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));const l=Object.keys(s);l.forEach(e=>{const t=s[e];t.inputNames.forEach(e=>{const[n]=Yn(e);t.inputs.push(s[n]),s[n].children.push(t)})}),0===Object.keys(p).length?l.forEach(e=>{const t=s[e];0===t.children.length&&i.push(t)}):Object.keys(p).forEach(e=>{const[t]=Yn(e),n=s[t];null!=n&&(n.signatureKey=p[e],i.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{const[t]=Yn(e),n=s[t];n&&(n.signatureKey=u[e],o.push(n))}):o=r;let c={};return null!=e.library&&null!=e.library.function&&(c=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{})),{nodes:s,inputs:o,outputs:i,weights:a,placeholders:r,signature:t,functions:c}}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=Gn(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=wr(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=wr(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Ar(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ar(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=vr(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=vr(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Er(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Er(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=_r(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_r(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Fr(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Fr(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Tr(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Tr(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Mr(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Mr(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Nr(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Nr(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Ir(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ir(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=kr(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=kr(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=Yn(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:xr(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n});Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach(e=>{const[n]=Yn(e);t.inputs.push(r[n]),r[n].children.push(t)})});const o=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Yn(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function br(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=l().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function wr(e,t,n,r=!1){const a=e[t];return null!=a?br(a.s,r):n}function _r(e,t,n){const r=e[t];return r?r.b:n}function vr(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function xr(e){switch("string"==typeof e&&(e=Hn[e]),e){case Hn.DT_FLOAT:return"float32";case Hn.DT_INT32:case Hn.DT_INT64:case Hn.DT_INT8:case Hn.DT_UINT8:return"int32";case Hn.DT_BOOL:return"bool";case Hn.DT_DOUBLE:return"float32";case Hn.DT_STRING:return"string";default:return null}}function kr(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Nr(e,t,n){const r=e[t];return r&&r.type?xr(r.type):n}function Ir(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>xr(e)):n}function Sr(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function Tr(e,t,n){const r=e[t];return r&&r.shape?Sr(r.shape):n}function Er(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function Ar(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>br(e,r)):n}function Mr(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>Sr(e)):n}function Fr(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Or{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Xn(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Xn(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return vr(this.node.rawAttrs,e,t);if(null!=n.s)return wr(this.node.rawAttrs,e,t);if(null!=n.b)return _r(this.node.rawAttrs,e,t);if(null!=n.shape)return Tr(this.node.rawAttrs,e,t);if(null!=n.type)return Nr(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Er(this.node.rawAttrs,e,t);if(null!=n.list.s)return Ar(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Mr(this.node.rawAttrs,e,t);if(null!=n.list.b)return Fr(this.node.rawAttrs,e,t);if(null!=n.list.type)return Ir(this.node.rawAttrs,e,t)}return t}}const Dr={conv2d:yn,depthwiseConv2d:wn};function Cr(e,t,n=""){k(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),()=>n+` Shapes ${e} and ${t} must match`)}class Rr{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Kt(0),ft(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Cr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ft(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ke([],[0].concat(this.elementShape));const n=this.readMany(e);return Cr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),sn(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ke([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Cr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Rt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ln(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];ht(()=>{t=tt(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=tt(Pt(t,o,i),this.elementShape)}return s});const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class Br{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Cr(t,e.shape,"TensorList shape mismatch: "),ft(e)}),this.idTensor=Kt(0),this.maxNumElements=r,ft(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Br([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return Cr(e,this.elementShape,"TensorList shape mismatch: "),ht(()=>{const t=this.tensors.map(t=>tt(t,e));return sn(t,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return Cr(n.shape,e,"TensorList shape mismatch: "),tt(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Cr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ft(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return Cr(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Cr(this.elementShape,t.shape,"TensorList shape mismatch: "),ft(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return Cr(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?ke([],[0].concat(this.elementShape)):ht(()=>{const t=e.map(e=>tt(this.tensors[e],n));return sn(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return Cr(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?ke([],[0].concat(this.elementShape)):ht(()=>{const e=this.tensors.map(e=>tt(e,t));return Rt(e,0)})}}const Pr=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Kn("thenBranch",e,t,n),a=Kn("elseBranch",e,t,n),s=Kn("cond",e,t,n),o=Kn("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Kn("body",e,t,n),a=Kn("cond",e,t,n),s=Kn("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map(e=>e.id);let u=await o[0].data();o.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()});let p=s;for(;u[0];){const e=p;p=await n.functionMap[r].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);const t=p.map(e=>e.id);e.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return p}case"LoopCond":return[er(Kn("pred",e,t,n))];case"Switch":{const r=Kn("pred",e,t,n);let a=Kn("data",e,t,n);return a.kept||(a=er(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==Xn(e,t,n));if(r){return[er(Xn(r,t,n))]}return}case"Enter":{const r=Kn("frameName",e,t,n),a=Kn("tensor",e,t,n);return n.enterFrame(r),[er(a)]}case"Exit":{const r=Kn("tensor",e,t,n);return n.exitFrame(),[er(r)]}case"NextIteration":{const r=Kn("tensor",e,t,n);return n.nextIteration(),[er(r)]}case"TensorArrayV3":{const r=Kn("size",e,t,n),a=Kn("dtype",e,t,n),s=Kn("elementShape",e,t,n),o=Kn("dynamicSize",e,t,n),i=Kn("clearAfterRead",e,t,n),u=Kn("identicalElementShapes",e,t,n),p=Kn("name",e,t,n),l=new Rr(p,a,r,s,u,o,i);return n.addTensorArray(l),[l.idTensor,Kt(1)]}case"TensorArrayWriteV3":{const r=Kn("tensorArrayId",e,t,n),a=Kn("index",e,t,n),s=Kn("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=Kn("tensorArrayId",e,t,n),a=Kn("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Kn("tensorArrayId",e,t,n),a=Kn("indices",e,t,n),s=Kn("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Kn("tensorArrayId",e,t,n),a=Kn("indices",e,t,n),s=Kn("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=Kn("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Kn("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Kn("tensorArrayId",e,t,n),a=Kn("tensor",e,t,n),s=Kn("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=Kn("tensorArrayId",e,t,n);return[Kt(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Kn("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Kn("tensorListId",e,t,n),a=Kn("index",e,t,n),s=Kn("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=Kn("tensorListId",e,t,n),a=Kn("index",e,t,n),s=Kn("elementShape",e,t,n),o=Kn("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Kn("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Br([],n,e.dtype,r),o=ln(e,0);return t.forEach((e,t)=>{s.setItem(e,o[t])}),s}(Kn("tensor",e,t,n),r,Kn("elementShape",e,t,n),Kn("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":{const r=function(e,t,n){return new Br([],e,t,n)}(Kn("elementShape",e,t,n),Kn("elementDType",e,t,n),Kn("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListGather":{const r=Kn("tensorListId",e,t,n),a=Kn("indices",e,t,n),s=Kn("elementShape",e,t,n),o=Kn("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=Kn("tensorListId",e,t,n),a=Kn("elementShape",e,t,n),s=Kn("elementDType",e,t,n),o=Kn("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Cr(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=ln(e);return new Br(a,t,r)}(Kn("tensor",e,t,n),Kn("elementShape",e,t,n),Kn("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Kn("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Kn("dtype",e,t,n),o=Kn("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=Kn("tensorListId",e,t,n),a=Kn("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Kn("tensorListId",e,t,n),a=Kn("elementShape",e,t,n),s=Kn("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Kn("tensor",e,t,n),a=Kn("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=0===r?0:e.size/r,o=ht(()=>{const o=[];e=tt(e,[1,r,s]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],s];o[r]=tt(Pt(e,i,u),n)}return e.dispose(),o}),i=new Br([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)i.setItem(e,o[e]);return i}(r,Kn("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function $r(e,t,n){const[r,a]=Kn("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i="fusedbatchnorm"===r,u=Kn("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const p=Kn("strides",e,t,n),l=Zn(e,t,n),c=Kn("dataFormat",e,t,n).toUpperCase(),d=Kn("dilations",e,t,n),[m,h]=Kn("args",e,t,n);return{stride:p,pad:l,dataFormat:c,dilations:d,biasArg:m,preluArg:h,activationFunc:a}}function Lr(e,t,n){return{boxes:Kn("boxes",e,t,n),scores:Kn("scores",e,t,n),maxOutputSize:Kn("maxOutputSize",e,t,n),iouThreshold:Kn("iouThreshold",e,t,n),scoreThreshold:Kn("scoreThreshold",e,t,n),softNmsSigma:Kn("softNmsSigma",e,t,n)}}function zr(e,t,n){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return ht(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[yt(Kn("a",e,t,n),Kn("b",e,t,n))];case"AddN":return[(void 0)(Kn("tensors",e,t,n))];case"FloorMod":case"Mod":case"Mul":return[(void 0)(Kn("a",e,t,n),Kn("b",e,t,n))];case"RealDiv":case"Div":case"DivNoNan":case"FloorDiv":case"Sub":case"Minimum":case"Maximum":case"Pow":case"SquaredDifference":return[(void 0)(Kn("a",e,t,n),Kn("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return ht(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":case"Acos":case"Acosh":case"Asin":case"Asinh":case"Atan":return[(void 0)(Kn("x",e,t,n))];case"Atan2":return[(void 0)(Kn("x",e,t,n),Kn("y",e,t,n))];case"Atanh":case"Ceil":return[(void 0)(Kn("x",e,t,n))];case"Complex":return[(void 0)(Kn("real",e,t,n),Kn("imag",e,t,n))];case"Cos":case"Cosh":case"Elu":case"Erf":case"Exp":case"Expm1":case"Floor":case"Log":case"Log1p":case"Imag":case"Neg":case"Reciprocal":case"Real":return[(void 0)(Kn("x",e,t,n))];case"Relu":return[nn(Kn("x",e,t,n))];case"Round":case"Selu":case"Sigmoid":case"Sin":case"Sign":case"Sinh":case"Softplus":case"Sqrt":case"Square":case"Tanh":case"Tan":return[(void 0)(Kn("x",e,t,n))];case"Relu6":case"ClipByValue":return[(void 0)(Kn("x",e,t,n),Kn("clipValueMin",e,t,n),Kn("clipValueMax",e,t,n))];case"Rsqrt":return[(void 0)(Xn(e.inputNames[0],t,n))];case"Prod":return[(void 0)(Kn("x",e,t,n),Kn("axes",e,t,n))];case"LeakyRelu":case"Prelu":return[(void 0)(Kn("x",e,t,n),Kn("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return Pr(e,t,n);case"convolution":return ht(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Kn("stride",e,t,n),a=Kn("pad",e,t,n),s=Kn("dataFormat",e,t,n).toUpperCase(),o=Kn("dilation",e,t,n);return[(void 0)(Kn("x",e,t,n),Kn("filter",e,t,n),r,a,s,o)]}case"Conv2D":{const r=Kn("strides",e,t,n),a=Zn(e,t,n),s=Kn("dataFormat",e,t,n).toUpperCase(),o=Kn("dilations",e,t,n);return[(void 0)(Kn("x",e,t,n),Kn("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:p}=$r(e,t,n);return[Dr.conv2d({x:Kn("x",e,t,n),filter:Kn("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:p,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:p}=$r(e,t,n);return[Dr.depthwiseConv2d({x:Kn("x",e,t,n),filter:Kn("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:p,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Kn("outputShape",e,t,n),a=Kn("strides",e,t,n),s=Zn(e,t,n);return[(void 0)(Kn("x",e,t,n),Kn("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Kn("strides",e,t,n),a=Zn(e,t,n),s=Kn("dilations",e,t,n),o=Kn("dataFormat",e,t,n).toUpperCase();return[jt(Kn("input",e,t,n),Kn("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const r=Kn("strides",e,t,n),a=Kn("pad",e,t,n),s=Kn("dataFormat",e,t,n).toUpperCase(),o=Kn("dilations",e,t,n);return[(void 0)(Kn("x",e,t,n),Kn("filter",e,t,n),[r[1],r[2],r[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Kn("strides",e,t,n),a=Kn("pad",e,t,n),s=Kn("kernelSize",e,t,n);return[(void 0)(Kn("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Kn("strides",e,t,n),a=Kn("pad",e,t,n),s=Kn("kernelSize",e,t,n);return[Qt(Kn("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Kn("strides",e,t,n),a=Kn("pad",e,t,n),s=Kn("kernelSize",e,t,n),o=Kn("includeBatchInIndex",e,t,n),{result:i,indexes:u}=(void 0)(Kn("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,o);return[i,u]}case"AvgPool3D":{const r=Kn("strides",e,t,n),a=Kn("pad",e,t,n),s=Kn("kernelSize",e,t,n);return[(void 0)(Kn("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Kn("strides",e,t,n),a=Kn("pad",e,t,n),s=Kn("kernelSize",e,t,n);return[(void 0)(Kn("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Kn("strides",e,t,n),a=Kn("pad",e,t,n),s=Kn("dilations",e,t,n),o=r[1],i=r[2],u=s[1],p=s[2];return[(void 0)(Kn("x",e,t,n),Kn("filter",e,t,n),[o,i],a,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return ht(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Kn("shape",e,t,n),a=Kn("dtype",e,t,n);return[(void 0)(r,Kn("value",e,t,n),a)]}case"LinSpace":return[(void 0)(Kn("start",e,t,n),Kn("stop",e,t,n),Kn("num",e,t,n))];case"Multinomial":return[(void 0)(Kn("logits",e,t,n),Kn("numSamples",e,t,n),Kn("seed",e,t,n))];case"OneHot":return[(void 0)(Kn("indices",e,t,n),Kn("depth",e,t,n),Kn("onValue",e,t,n),Kn("offValue",e,t,n))];case"Ones":return[(void 0)(Kn("shape",e,t,n),Kn("dtype",e,t,n))];case"OnesLike":return[(void 0)(Kn("x",e,t,n))];case"RandomUniform":return[(void 0)(Kn("shape",e,t,n),Kn("minval",e,t,n),Kn("maxval",e,t,n),Kn("dtype",e,t,n))];case"Range":return[(void 0)(Kn("start",e,t,n),Kn("stop",e,t,n),Kn("step",e,t,n),Kn("dtype",e,t,n))];case"TruncatedNormal":{const r=Kn("shape",e,t,n),a=Kn("mean",e,t,n),s=Kn("stdDev",e,t,n),o=Kn("seed",e,t,n);return[(void 0)(r,a,s,Kn("dtype",e,t,n),o)]}case"Zeros":return[(void 0)(Kn("shape",e,t,n),Kn("dtype",e,t,n))];case"ZerosLike":return[(void 0)(Kn("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=Lr(e,t,n),p=await(void 0)(r,a,s,o,i,u);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=Lr(e,t,n),u=Kn("padToMaxOutputSize",e,t,n),p=await(void 0)(r,a,s,o,i,u);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=Lr(e,t,n);return[await(void 0)(r,a,s,o,i)]}case"Where":{const r=(void 0)(Kn("condition",e,t,n),"bool"),a=[await(void 0)(r)];return r.dispose(),a}case"ListDiff":return(void 0)(Kn("x",e,t,n),Kn("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return ht(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=(void 0)(Kn("x",e,t,n),Kn("k",e,t,n),Kn("sorted",e,t,n));return[r.values,r.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return ht(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Kn("images",e,t,n),a=Kn("size",e,t,n),s=Kn("alignCorners",e,t,n);return[(void 0)(r,[a[0],a[1]],s)]}case"ResizeNearestNeighbor":{const r=Kn("images",e,t,n),a=Kn("size",e,t,n),s=Kn("alignCorners",e,t,n);return[(void 0)(r,[a[0],a[1]],s)]}case"CropAndResize":return[(void 0)(Kn("image",e,t,n),Kn("boxes",e,t,n),Kn("boxInd",e,t,n),Kn("cropSize",e,t,n),Kn("method",e,t,n),Kn("extrapolationValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return ht(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Kn("default",e,t,n);return[Xn(e.name,t,n)||r];case"Placeholder":return[Xn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[er(Kn("x",e,t,n))];case"IdentityN":return Kn("x",e,t,n).map(e=>er(e));case"Snapshot":return[er(Kn("x",e,t,n))];case"Shape":return[tn(Kn("x",e,t,n).shape,"int32")];case"ShapeN":return Kn("x",e,t,n).map(e=>tn(e.shape));case"Size":return[(void 0)(Kn("x",e,t,n).size,"int32")];case"Rank":return[(void 0)(Kn("x",e,t,n).rank,"int32")];case"NoOp":return[(void 0)(1)];case"Print":const a=Kn("x",e,t,n),s=Kn("data",e,t,n),o=Kn("message",e,t,n),i=Kn("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return ht(()=>((e,t,n)=>{switch(e.op){case"Equal":case"NotEqual":case"Greater":case"GreaterEqual":case"Less":case"LessEqual":case"LogicalAnd":return[(void 0)(Kn("a",e,t,n),Kn("b",e,t,n))];case"LogicalNot":return[(void 0)(Kn("a",e,t,n))];case"LogicalOr":return[(void 0)(Kn("a",e,t,n),Kn("b",e,t,n))];case"Select":case"SelectV2":return[(void 0)(Kn("condition",e,t,n),Kn("a",e,t,n),Kn("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return ht(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[(void 0)(Kn("a",e,t,n),Kn("b",e,t,n),Kn("transposeA",e,t,n),Kn("transposeB",e,t,n))];case"Transpose":return[(void 0)(Kn("x",e,t,n),Kn("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Kn("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i=Kn("numArgs",e,t,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,p]=Kn("args",e,t,n);return[Dr.matMul({a:Kn("a",e,t,n),b:Kn("b",e,t,n),transposeA:Kn("transposeA",e,t,n),transposeB:Kn("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:p})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return ht(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[(void 0)(Kn("x",e,t,n),Kn("mean",e,t,n),Kn("variance",e,t,n),Kn("offset",e,t,n),Kn("scale",e,t,n),Kn("epsilon",e,t,n))];case"LRN":return[(void 0)(Kn("x",e,t,n),Kn("radius",e,t,n),Kn("bias",e,t,n),Kn("alpha",e,t,n),Kn("beta",e,t,n))];case"Softmax":case"LogSoftmax":return[(void 0)(Kn("x",e,t,n))];case"SparseToDense":return[(void 0)(Kn("sparseIndices",e,t,n),Kn("outputShape",e,t,n),Kn("sparseValues",e,t,n),Kn("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return ht(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Kn("axis",e,t,n),a=Kn("keepDims",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"Mean":{const r=Kn("axis",e,t,n),a=Kn("keepDims",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"Min":{const r=Kn("axis",e,t,n),a=Kn("keepDims",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"Sum":{const r=Kn("axis",e,t,n),a=Kn("keepDims",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"All":{const r=Kn("axis",e,t,n),a=Kn("keepDims",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"Any":{const r=Kn("axis",e,t,n),a=Kn("keepDims",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"ArgMax":{const r=Kn("axis",e,t,n);return[(void 0)(Kn("x",e,t,n),r)]}case"ArgMin":{const r=Kn("axis",e,t,n);return[(void 0)(Kn("x",e,t,n),r)]}case"Prod":{const r=Kn("axis",e,t,n),a=Kn("keepDims",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"Cumsum":{const r=Kn("axis",e,t,n),a=Kn("exclusive",e,t,n),s=Kn("reverse",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return ht(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Kn("n",e,t,n),a=Kn("axis",e,t,n);let s=Kn("tensors",e,t,n);return s=s.slice(0,r),[Rt(s,a)]}case"GatherV2":case"Gather":{const r=Kn("axis",e,t,n);return[(void 0)(Kn("x",e,t,n),(void 0)(Kn("indices",e,t,n),"int32"),r)]}case"ReverseV2":case"Reverse":{const r=Kn("axis",e,t,n);return[(void 0)(Kn("x",e,t,n),r)]}case"Slice":{const r=Kn("begin",e,t,n),a=Kn("size",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"StridedSlice":{const r=Kn("begin",e,t,n),a=Kn("end",e,t,n),s=Kn("strides",e,t,n),o=Kn("beginMask",e,t,n),i=Kn("endMask",e,t,n),u=Kn("ellipsisMask",e,t,n),p=Kn("newAxisMask",e,t,n),l=Kn("shrinkAxisMask",e,t,n),c=Kn("x",e,t,n);return[un(c,r,a,s,o,i,u,p,l)]}case"Pack":return ht(()=>{const r=Kn("axis",e,t,n),a=Kn("tensors",e,t,n),s=a[0].shape,o=an(a[0]).shape,i=a.map(e=>{const t=E(e.shape,s);if(!t&&!E(an(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:tt(e,s)});return[sn(i,r)]});case"Unpack":{const r=Kn("axis",e,t,n);return(void 0)(Kn("tensor",e,t,n),r)}case"Tile":{const r=Kn("reps",e,t,n);return[(void 0)(Kn("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Kn("axis",e,t,n),a=Kn("numOrSizeSplits",e,t,n);return(void 0)(Kn("x",e,t,n),a,r)}case"ScatterNd":return[(void 0)(Kn("indices",e,t,n),Kn("values",e,t,n),Kn("shape",e,t,n))];case"GatherNd":return[(void 0)(Kn("x",e,t,n),Kn("indices",e,t,n))];case"SparseToDense":{const r=Kn("sparseIndices",e,t,n),a=Kn("outputShape",e,t,n),s=Kn("sparseValues",e,t,n),o=Kn("defaultValue",e,t,n);return[(void 0)(r,s,a,s.dtype===o.dtype?o:(void 0)(o,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return ht(()=>((e,t,n)=>{switch(e.op){case"FFT":case"IFFT":case"RFFT":case"IRFFT":return[(void 0)(Kn("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return ht(()=>((e,t,n)=>{switch(e.op){case"Cast":return[(void 0)(Kn("x",e,t,n),Kn("dtype",e,t,n))];case"ExpandDims":{const r=Kn("axis",e,t,n);return[(void 0)(Kn("x",e,t,n),r)]}case"Squeeze":{const r=Kn("axis",e,t,n);return[an(Kn("x",e,t,n),r)]}case"Reshape":return[tt(Kn("x",e,t,n),Kn("shape",e,t,n))];case"PadV2":case"Pad":return[Zt(Kn("x",e,t,n),Kn("padding",e,t,n),Kn("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Kn("blockShape",e,t,n),a=Kn("paddings",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Kn("blockShape",e,t,n),a=Kn("crops",e,t,n);return[(void 0)(Kn("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Kn("blockSize",e,t,n),a=Kn("dataFormat",e,t,n).toUpperCase();return[(void 0)(Kn("x",e,t,n),r,a)]}case"BroadcastTo":return[(void 0)(Kn("x",e,t,n),Kn("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"custom":const r=Gn(e.op);if(r&&r.customExecutor)return r.customExecutor(new Or(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return r instanceof Promise?r.then(e=>[].concat(e)):[].concat(r)}class Vr{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Wr(e,t,n){const r=new Set,a=[];let s=null,o=null;const i=new Set,u=Object.keys(e).map(e=>Qn(e)[0]),p=[...t];for(;p.length>0;){const e=p.pop();(Ur(e)||qr(e))&&null==s&&(s=e,o=s.children.map(e=>e.name).filter(e=>r.has(e))),r.add(e.name),null==n[e.name]&&(-1===u.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{i.has(e.name)||(i.add(e.name),p.push(e))}):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:s,syncInputs:o}}const jr=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Hr=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function Ur(e){return jr.indexOf(e.op)>=0}function qr(e){return Hr.indexOf(e.op)>=0}class Gr{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new Gr(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Wr(e,t,this.weightMap),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[];Object.keys(a).map(e=>Qn(e)[0]).map(t=>e.nodes[t]).forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)});const o=new Set,i=[];for(;s.length>0;){const e=s.pop();o.add(e.name),t[e.name]||i.push(e),e.children.forEach(e=>{!o.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>o.has(e.name))&&s.push(e)})}return i}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[Qn(e)[0]]),a=t.map(e=>this.graph.nodes[Qn(e)[0]]),s=this.getCompilationKey(r,a);let o=this.compiledMap.get(s);null==o&&(o=this.compile(e,a),this.compiledMap.set(s,o));const i={},u={};return ht(()=>{const n=new Vr(this.weightMap,i,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=Qn(t),s=[];s[a]=e[t],r[n]=s});const a=this.getFrozenTensorIds(r),s={};for(let e=0;e<o.length;e++){const i=o[e];if(!r[i.name]){const e=zr(i,r,n);if(e instanceof Promise)throw new Error(`The execution of the op '${i.op}' returned a promise. Please use model.executeAsync() instead.`);r[i.name]=e,this.checkTensorForDisposal(i.name,i,r,n,a,t,s)}}return null==this.parent&&n.dispose(a),t.map(e=>Xn(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=function(e,t,n){return t[Jn(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!a.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new Vr(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(e,s,t,n),i=t.map(e=>Xn(e,o,s)),u=i.map(e=>e.id),p=Object.keys(e).map(t=>e[t].id),l=new Set([...u,...p,...this.weightIds]);return Object.keys(o).forEach(e=>{o[e].forEach(e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(l),i}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[Qn(e)[0]]),o=n.map(e=>this.graph.nodes[Qn(e)[0]]),{usedNodes:i,missingInputs:u,dynamicNode:p,syncInputs:l}=Wr(e,o,this.weightMap),c=[...s,...this.graph.weights].map(e=>({node:e,contexts:t.currentContext})),d=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Qn(t),a=[];a[r]=e[t],d[n]=a});const m={},h=this.getFrozenTensorIds(d),f={};for(;c.length>0;){const e=this.processStack(s,c,t,d,f,h,n,m,i);await Promise.all(e)}null!=p||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter(e=>!Ur(e)&&!Xn(e.name,d,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${l}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,r,a,s,o,i,u){const p=[];for(;t.length>0;){const l=t.pop();n.currentContext=l.contexts;let c="";if("Enter"===l.node.op&&Kn("isConstant",l.node,r,n)&&([c]=Yn(l.node.name,n)),-1===e.indexOf(l.node)){const e=zr(l.node,r,n);c||([c]=Yn(l.node.name,n));const d=n.currentContext;e instanceof Promise?p.push(e.then(e=>(r[c]=e,n.currentContext=d,this.checkTensorForDisposal(c,l.node,r,n,s,o,i),this.processChildNodes(l.node,t,n,r,a,u),e))):(r[c]=e,this.checkTensorForDisposal(c,l.node,r,n,s,o,i),this.processChildNodes(l.node,t,n,r,a,u))}else this.processChildNodes(l.node,t,n,r,a,u)}return p}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[o]=Yn(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!Xn(e,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!Xn(e,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=Qn(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;k(e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t),()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&k(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Qn(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e},{})}checkOutputs(e){e.forEach(e=>{const[t]=Qn(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class Kr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={})}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Qe(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,Me.getLoadHandlers(t,n));if(0===r.length)r.push(Qe(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,o=s.dtype,i=s.shape,u=T(i);let p;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=Ne[n.dtype],l=e.slice(a,a+u*i),c="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];p[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ae()),p=r(c)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];p[e]=Math.round(t*n.scale+n.min)}}a+=u*i}else if("string"===o){const t=T(s.shape);p=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));p.push(n),a+=t}}else{const r=Ne[o],s=e.slice(a,a+u*r);if("float32"===o)p=new Float32Array(s);else if("int32"===o)p=new Int32Array(s);else if("bool"===o)p=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{p=new Float32Array(s);const e=new Float32Array(p.length/2),r=new Float32Array(p.length/2);for(let t=0;t<e.length;t++)e[t]=p[2*t],r[t]=p[2*t+1];const a=ke(e,i,"float32"),o=ke(r,i,"float32");n[t]=ve(a,o)}}a+=u*r}"complex64"!==o&&(n[t]=ke(p,i,o))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);return this.executor=new Gr(gr.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),!0}async save(e,t){if("string"==typeof e){const t=(n=e,Me.getSaveHandlers(n));if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof ee||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose()}}function Xr(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const Yr={kernelName:"Cast",backendName:"wasm",kernelFunc:Xr};const Jr={kernelName:"Reshape",backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n;return{dataId:r.dataId,shape:a,dtype:r.dtype}}};let Qr;const Zr={kernelName:"ResizeBilinear",backendName:"wasm",setupFunc:function(e){Qr=e.wasm.cwrap("ResizeBilinear",null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,size:o}=r,[i,u]=o,[p,l,c,d]=a.shape,m=[p,i,u,d];let h,f=t.dataIdMap.get(a.dataId);"float32"!==f.dtype&&(h=Xr({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(h.dataId));const y=f.id,g=t.makeOutput(m,"float32");if(0===T(a.shape))return g;const b=t.dataIdMap.get(g.dataId).id;return Qr(y,p,l,c,d,i,u,s?1:0,b),null!=h&&t.disposeData(h.dataId),g}};var ea,ta;function na(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:o}=a,{a:i,b:u}=o,p=s.dataIdMap.get(i.dataId).id,l=s.dataIdMap.get(u.dataId).id,c=null!=n?n:i.dtype,d=Ut(i.shape,u.shape),m=s.makeOutput(d,c);if(0===T(d))return m;const h=new Uint8Array(new Int32Array(i.shape).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer),y=s.dataIdMap.get(m.dataId).id,g=()=>r(p,h,i.shape.length,l,f,u.shape.length,ea[i.dtype],y);if(t&&"float32"===i.dtype)return g(),m;const b=Ht(i.shape,d),w=Ht(u.shape,d),_=b.every((e,t)=>e===t),v=w.every((e,t)=>e===t);if(_&&v)return g(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${i.dtype} ${e}.`)}}}!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(ea||(ea={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu"}(ta||(ta={}));const ra=na("Div",!0),aa=na("Sub",!0),sa=na("Multiply",!0);let oa;const ia={kernelName:"FusedConv2D",backendName:"wasm",setupFunc:function(e){oa=e.wasm.cwrap("FusedConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:p,dilations:l,dataFormat:c,dimRoundingMode:d,activation:m}=n,h=Tt(a.shape,s.shape,u,l,p,d),f=ta[m];if(null==f)throw new Error(m+" activation not yet supported for FusedConv2D in the wasm backend.");const y=r.dataIdMap.get(a.dataId).id,g=r.dataIdMap.get(s.dataId).id,b=h.outChannels;let w=0;if(null!=o){const e=r.dataIdMap.get(o.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);w=e.id}const _=h.filterHeight,v=h.filterWidth,x=h.padInfo.top,k=h.padInfo.right,N=h.padInfo.bottom,I=h.padInfo.left,S=h.dilationHeight,T=h.dilationWidth,E=h.strideHeight,A=h.strideWidth,M=h.inChannels,F="SAME"===h.padInfo.type?1:0,O=h.batchSize,D=h.inHeight,C=h.inWidth;if("NHWC"!==c)throw new Error("wasm backend FusedConv2D does not support dataFormat:'"+c+"'. Please use 'NHWC'.");const R=r.makeOutput(h.outShape,"float32"),B=r.dataIdMap.get(R.dataId).id,P=null==i?0:r.dataIdMap.get(i.dataId).id;return oa(y,O,D,C,g,_,v,w,x,k,N,I,F,S,T,E,A,M,b,f,P,B),R}};let ua;const pa={kernelName:"DepthwiseConv2dNative",backendName:"wasm",setupFunc:function(e){ua=e.wasm.cwrap("DepthwiseConv2dNative",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,o=r.dataIdMap.get(a.dataId).id,i=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:c}=n,d=null==p?[1,1]:p,m=Tt(a.shape,s.shape,u,d,l,c,!0),h=m.filterHeight,f=m.filterWidth,y=m.padInfo.top,g=m.padInfo.right,b=m.padInfo.bottom,w=m.padInfo.left,_=m.dilationHeight,v=m.dilationWidth,x=m.strideHeight,k=m.strideWidth,N=m.inChannels,I=m.outChannels,S="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'"+m.dataFormat+"'. Please use 'channelsLast'.");const T=r.makeOutput(m.outShape,"float32"),E=r.dataIdMap.get(T.dataId).id;return ua(o,a.shape[0],a.shape[1],a.shape[2],i,h,f,y,g,b,w,S,_,v,x,k,N,I,E),T}},la=na("Add",!0);const ca=function(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),o=n.dataIdMap.get(s.dataId).id;return 0===T(s.shape)||t(a,o),s}}}("Relu");let da;const ma={kernelName:"PadV2",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),l=r.map(e=>e[0]),c=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(l).buffer),m=new Uint8Array(new Int32Array(c).buffer);return da(o,p,t.shape.length,ea[t.dtype],d,m,a,u),i},setupFunc:function(e){da=e.wasm.cwrap("PadV2",null,["number","array","number","number","array","array","number","number"])}};let ha;const fa={kernelName:"MaxPool",backendName:"wasm",setupFunc:function(e){ha=e.wasm.cwrap("MaxPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:i,pad:u,dimRoundingMode:p}=n,l=St(a.shape,o,i,1,u,p),c=l.filterHeight,d=l.filterWidth,m=l.padInfo.top,h=l.padInfo.right,f=l.padInfo.bottom,y=l.padInfo.left,g=l.dilationHeight,b=l.dilationWidth,w=l.strideHeight,_=l.strideWidth,v=l.inChannels,x=l.outChannels;if("channelsLast"!==l.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+l.dataFormat+"'. Please use 'channelsLast'.");const k=r.makeOutput(l.outShape,"float32"),N=r.dataIdMap.get(k.dataId).id;return ha(s,a.shape[0],a.shape[1],a.shape[2],c,d,m,h,f,y,g,b,w,_,v,x,N),k}};const ya={kernelName:"Slice",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,o]=mt(t,n,r),i=ct(t.shape,s,o),u=a.typedArrayFromHeap(t),p=a.makeOutput(o,t.dtype),l=a.typedArrayFromHeap(p),c=P(t.shape);if(i){const e=dt(s,c);return l.set(u.subarray(e,e+T(o))),p}const d=t.shape.length;return 2===d?function(e,t,n,r,a){let s=0;const o=r[0],i=r[1],u=o+a[0];for(let r=o;r<u;r++){const o=r*t+i;n.set(e.subarray(o,o+a[1]),s),s+=a[1]}}(u,c[0],l,s,o):3===d?function(e,t,n,r,a,s){let o=0;const i=a[0],u=a[1],p=a[2],l=i+s[0],c=u+s[1];for(let a=i;a<l;a++)for(let i=u;i<c;i++){const u=a*t+i*n+p;r.set(e.subarray(u,u+s[2]),o),o+=s[2]}}(u,c[0],c[1],l,s,o):4===d?function(e,t,n,r,a,s,o){let i=0;const u=s[0],p=s[1],l=s[2],c=u+o[0],d=p+o[1],m=l+o[2],h=s[3];for(let s=u;s<c;s++)for(let u=p;u<d;u++)for(let p=l;p<m;p++){const l=s*t+u*n+p*r+h;a.set(e.subarray(l,l+o[3]),i),i+=o[3]}}(u,c[0],c[1],c[2],l,s,o):function(e,t,n,r,a){const s=Lt(a,t.dtype,n),o=Lt(t.shape,t.dtype,e);for(let e=0;e<s.size;++e){const t=s.indexToLoc(e).map((e,t)=>e+r[t]);n[e]=o.get(...t)}}(u,t,l,s,o),p}};const ga={kernelName:"Concat",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=F(e.attrs.axis,t[0].shape)[0],a=Ct(t.map(e=>e.shape),r),s=n.makeOutput(a,t[0].dtype),o=T(t[0].shape.slice(0,r));let i=0;const u=t.map(e=>{const t=T(e.shape.slice(r));return i+=t,t}),p=t.map(e=>n.typedArrayFromHeap(e)),l=n.typedArrayFromHeap(s);for(let e=0;e<o;e++){let t=e*i;for(let n=0;n<p.length;n++){const r=u[n],a=e*r,s=p[n].subarray(a,a+r);l.set(s,t),t+=r}}return s}};const ba={kernelName:"Identity",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}};let wa;const _a={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){wa=e.wasm.cwrap("Sigmoid",null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===T(a.shape)||wa(r,s),a}};let va;const xa={kernelName:"NonMaxSuppressionV3",backendName:"wasm",setupFunc:function(e){va=e.wasm.cwrap("NonMaxSuppressionV3","number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o}=r,{boxes:i,scores:u}=n,p=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(u.dataId).id,c=va(p,l,s,a,o),{pSelectedIndices:d,selectedSize:m,pSelectedScores:h,pValidOutputs:f}=function(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:o}}(t,c);return t.wasm._free(h),t.wasm._free(f),t.makeOutput([m],"int32",d)}};_(Yr),_(Jr),_(Zr),_(ra),_(aa),_(sa),_(ia),_(pa),_(la),_(ca),_(ma),_(fa),_(ya),_(ga),_(ba),_(_a),_(xa),ee.prototype.toFloat=function(){return this.throwIfDisposed(),et(this,"float32")},ee.prototype.expandDims=function(e){return this.throwIfDisposed(),Gt(this,e)},ee.prototype.resizeBilinear=function(e,t){return this.throwIfDisposed(),Bn(this,e,t)},ee.prototype.squeeze=function(e){return this.throwIfDisposed(),an(this,e)},ee.prototype.reshape=function(e){return this.throwIfDisposed(),tt(this,e)},ee.prototype.div=function(e){return this.throwIfDisposed(),bt(this,e)};const ka=e=>({startEndTensor:e,startPoint:Pt(e,[0,0],[-1,2]),endPoint:Pt(e,[0,2],[-1,2])}),Na={strides:[8,16],anchors:[2,6]};function Ia(e,t){let n,r,a;if(e.topLeft instanceof ee&&e.bottomRight instanceof ee){const[s,o]=ht(()=>[Rt([Yt(t-1,e.topLeft.slice(0,1)),e.topLeft.slice(1,1)]),Rt([Yt(t-1,e.bottomRight.slice(0,1)),e.bottomRight.slice(1,1)])]);n=s,r=o,null!=e.landmarks&&(a=ht(()=>{const n=Yt(tn([t-1,0]),e.landmarks),r=tn([1,-1]);return wt(n,r)}))}else{const[s,o]=e.topLeft,[i,u]=e.bottomRight;n=[t-1-s,o],r=[t-1-i,u],null!=e.landmarks&&(a=e.landmarks.map(e=>[t-1-e[0],e[1]]))}const s={topLeft:n,bottomRight:r};return null!=a&&(s.landmarks=a),null!=e.probability&&(s.probability=e.probability instanceof ee?e.probability.clone():e.probability),s}function Sa(e,t){return ht(()=>{let n;return n=e.hasOwnProperty("box")?e.box:e,((e,t)=>{const n=wt(e.startPoint,t),r=wt(e.endPoint,t),a=zt([n,r],1);return ka(a)})(n,t).startEndTensor.squeeze()})}class Ta{constructor(e,t,n,r,a,s){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){const r=[];for(let a=0;a<n.strides.length;a++){const s=n.strides[a],o=Math.floor((t+s-1)/s),i=Math.floor((e+s-1)/s),u=n.anchors[a];for(let e=0;e<o;e++){const t=s*(e+.5);for(let e=0;e<i;e++){const n=s*(e+.5);for(let e=0;e<u;e++)r.push([n,t])}}}return r}(t,n,Na),this.anchors=pn(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=tn([t,n]),this.iouThreshold=a,this.scoreThreshold=s}async getBoundingBoxes(e,t,n=!0){const[r,a,s]=ht(()=>{const t=e.resizeBilinear([this.width,this.height]),n=wt(Yt(t.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),a=function(e,t,n){const r=Pt(e,[0,1],[-1,2]),a=yt(r,t),s=Pt(e,[0,3],[-1,2]),o=bt(s,n),i=bt(a,n),u=bt(o,2),p=Yt(i,u),l=yt(i,u),c=wt(p,n),d=wt(l,n);return zt([c,d],1)}(r,this.anchors,this.inputSize),s=Pt(r,[0,0],[-1,1]);return[r,a,Bt(s).squeeze()]}),o=console.warn;console.warn=()=>{};const i=Pn.nonMaxSuppression(a,s,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=o;const u=await i.array();i.dispose();let p=u.map(e=>Pt(a,[e,0],[1,-1]));t||(p=await Promise.all(p.map(async e=>{const t=await e.array();return e.dispose(),t})));const l=e.shape[1],c=e.shape[2];let d;d=t?bt([c,l],this.inputSize):[c/this.inputSizeData[0],l/this.inputSizeData[1]];const m=[];for(let e=0;e<p.length;e++){const a=p[e],o=ht(()=>{const o=ka(a instanceof ee?a:pn(a));if(!n)return o;const i=u[e];let p;return p=t?this.anchors.slice([i,0],[1,2]):this.anchorsData[i],{box:o,landmarks:Pt(r,[i,5],[1,-1]).squeeze().reshape([6,-1]),probability:Pt(s,[i],[1]),anchor:p}});m.push(o)}return a.dispose(),s.dispose(),r.dispose(),{boxes:m,scaleFactor:d}}async estimateFaces(e,t=!1,n=!1,r=!0){const[,a]=function(e){return e instanceof ee?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),s=ht(()=>(e instanceof ee||(e=at(e)),e.toFloat().expandDims(0))),{boxes:o,scaleFactor:i}=await this.getBoundingBoxes(s,t,r);return s.dispose(),t?o.map(e=>{const t=Sa(e,i);let s={topLeft:t.slice([0],[2]),bottomRight:t.slice([2],[2])};if(r){const{landmarks:t,probability:n,anchor:r}=e,a=t.add(r).mul(i);s.landmarks=a,s.probability=n}return n&&(s=Ia(s,a)),s}):Promise.all(o.map(async e=>{const t=Sa(e,i);let s;if(r){const[n,r,a]=await Promise.all([e.landmarks,t,e.probability].map(async e=>e.array())),o=e.anchor,[u,p]=i,l=n.map(e=>[(e[0]+o[0])*u,(e[1]+o[1])*p]);s={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:l,probability:a},(e=>{e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()})(e.box),e.landmarks.dispose(),e.probability.dispose()}else{const e=await t.array();s={topLeft:e.slice(0,2),bottomRight:e.slice(2)}}return t.dispose(),n&&(s=Ia(s,a)),s}))}}async function Ea({maxFaces:e=10,inputWidth:t=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:a=.75}={}){const s=await async function(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new Kr(e,t);return await n.load(),n}("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new Ta(s,t,n,e,r,a)}var Aa,Ma;let Fa;var Oa;(Oa=Aa||(Aa={}))[Oa.float32=0]="float32",Oa[Oa.int32=1]="int32",Oa[Oa.bool=2]="bool",Oa[Oa.string=3]="string",Oa[Oa.complex64=4]="complex64",function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu"}(Ma||(Ma={}));const Da={kernelName:"_FusedMatMul",backendName:"wasm",setupFunc:function(e){Fa=e.wasm.cwrap("_FusedMatMul",null,["number","array","number","number","array","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:p,activation:l}=r,c=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id;let m=0;if(null!=o){const e=n.dataIdMap.get(o.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);m=e.id}const h=null==i?0:n.dataIdMap.get(i.dataId).id,f=Ma[l];if(null==f)throw new Error(l+" activation not yet supported for FusedConv2D in the wasm backend.");const y=u?a.shape[2]:a.shape[1],g=p?s.shape[1]:s.shape[2],b=a.shape[0],w=n.makeOutput([b,y,g],a.dtype),_=n.dataIdMap.get(w.dataId).id,v=new Uint8Array(new Int32Array(a.shape).buffer),x=new Uint8Array(new Int32Array(s.shape).buffer);return Fa(c,v,a.shape.length,d,x,s.shape.length,u,p,f,m,h,_),w}};function Ca(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),o=n.dataIdMap.get(s.dataId).id;return 0===T(s.shape)||t(a,o),s}}}const Ra=Ca("Abs");function Ba(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:o}=a,{a:i,b:u}=o,p=s.dataIdMap.get(i.dataId).id,l=s.dataIdMap.get(u.dataId).id,c=null!=n?n:i.dtype,d=Ut(i.shape,u.shape),m=s.makeOutput(d,c);if(0===T(d))return m;const h=new Uint8Array(new Int32Array(i.shape).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer),y=s.dataIdMap.get(m.dataId).id,g=()=>r(p,h,i.shape.length,l,f,u.shape.length,Aa[i.dtype],y);if(t&&"float32"===i.dtype)return g(),m;const b=Ht(i.shape,d),w=Ht(u.shape,d),_=b.every((e,t)=>e===t),v=w.every((e,t)=>e===t);if(_&&v)return g(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${i.dtype} ${e}.`)}}}const Pa=Ba("Add",!0);let $a;const La={kernelName:"AddN",backendName:"wasm",setupFunc:function(e){$a=e.wasm.cwrap("AddN",null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===T(r.shape))return r;const a=t.map(e=>n.dataIdMap.get(e.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),o=n.dataIdMap.get(r.dataId).id;return $a(s,a.length,Aa[r.dtype],o),r}};function za(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const Va={kernelName:"Identity",backendName:"wasm",kernelFunc:za};let Wa;function ja(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let o=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(o=!1);const i=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(o){const e=za({inputs:t,backend:n});return e.shape=i,e}const p=n.makeOutput(i,u.dtype),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(p.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer);return Wa(l,m,u.shape.length,Aa[u.dtype],c,d,s.length),p}const Ha={kernelName:"Transpose",backendName:"wasm",kernelFunc:ja,setupFunc:function(e){Wa=e.wasm.cwrap("Transpose",null,["number","array","number","number","number","array","number"])}};function Ua(e,t,n){const r=e.shape,a=e.shape.length,s=F(t,r);let o=s;const i=Nt(o,a);let u=null,p=!1;if(null!=i){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[i[e]];o=It(o.length,a),u=ja({inputs:{x:e},attrs:{perm:i},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(p=!0)}return{transposed:u,originalAxes:s,axes:o,inputWasTransposed:p}}let qa;const Ga={kernelName:"ArgMax",backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,o=t.dataIdMap.get(s.dataId).id;let i=o,u=s;const{transposed:p,axes:l,inputWasTransposed:c}=Ua(s,a,t);if(c){const e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,i=e)}const d=u.shape.slice(0,-1),m=t.makeOutput(d,"int32"),h=t.dataIdMap.get(m.dataId).id,f=T(m.shape),y=u.shape[l[0]];return qa(i,Aa[u.dtype],f,y,h),c&&t.disposeData(p.dataId),m},setupFunc:function(e){qa=e.wasm.cwrap("ArgMax",null,["number","number","number","number","number"])}};let Ka;const Xa={kernelName:"AvgPool",backendName:"wasm",setupFunc:function(e){Ka=e.wasm.cwrap("AvgPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:i,pad:u,dimRoundingMode:p}=n,l=St(a.shape,o,i,1,u,p),c=l.filterHeight,d=l.filterWidth,m=l.padInfo.top,h=l.padInfo.right,f=l.padInfo.bottom,y=l.padInfo.left,g=l.strideHeight,b=l.strideWidth,w=l.inChannels;if("channelsLast"!==l.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+l.dataFormat+"'. Please use 'channelsLast'.");if(1!==l.dilationWidth||1!==l.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);const _=r.makeOutput(l.outShape,"float32"),v=r.dataIdMap.get(_.dataId).id;return Ka(s,a.shape[0],a.shape[1],a.shape[2],c,d,m,h,f,y,g,b,w,v),_}};let Ya;const Ja={kernelName:"BatchMatMul",backendName:"wasm",setupFunc:function(e){Ya=e.wasm.cwrap("BatchMatMul",null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const{transposeA:o,transposeB:i}=r,u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,l=o?a.shape[2]:a.shape[1],c=i?s.shape[1]:s.shape[2],d=a.shape[0],m=n.makeOutput([d,l,c],a.dtype),h=n.dataIdMap.get(m.dataId).id,f=new Uint8Array(new Int32Array(a.shape).buffer),y=new Uint8Array(new Int32Array(s.shape).buffer);return Ya(u,f,a.shape.length,p,y,s.shape.length,o,i,h),m}};function Qa(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const Za={kernelName:"Cast",backendName:"wasm",kernelFunc:Qa};let es;const ts={kernelName:"ClipByValue",backendName:"wasm",setupFunc:function(e){es=e.wasm.cwrap("ClipByValue",null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r,i=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,"float32"),p=n.dataIdMap.get(u.dataId).id;return es(i,s,o,p),u}},ns={kernelName:"Concat",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=F(e.attrs.axis,t[0].shape)[0],a=Ct(t.map(e=>e.shape),r),s=n.makeOutput(a,t[0].dtype),o=T(t[0].shape.slice(0,r));let i=0;const u=t.map(e=>{const t=T(e.shape.slice(r));return i+=t,t}),p=t.map(e=>n.typedArrayFromHeap(e)),l=n.typedArrayFromHeap(s);for(let e=0;e<o;e++){let t=e*i;for(let n=0;n<p.length;n++){const r=u[n],a=e*r,s=p[n].subarray(a,a+r);l.set(s,t),t+=r}}return s}};let rs;const as={kernelName:"Conv2D",backendName:"wasm",setupFunc:function(e){rs=e.wasm.cwrap("Conv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,o=r.dataIdMap.get(a.dataId).id,i=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:c,dataFormat:d}=n,m=Dt(d),h=Tt(a.shape,s.shape,u,p,l,c,!1,m),f=h.filterHeight,y=h.filterWidth,g=h.padInfo.top,b=h.padInfo.right,w=h.padInfo.bottom,_=h.padInfo.left,v=h.dilationHeight,x=h.dilationWidth,k=h.strideHeight,N=h.strideWidth,I=h.inChannels,S=h.outChannels,T="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error("wasm backend Conv2D does not support dataFormat:'"+h.dataFormat+"'. Please use 'channelsLast'.");const E=r.makeOutput(h.outShape,"float32"),A=r.dataIdMap.get(E.dataId).id;return rs(o,a.shape[0],a.shape[1],a.shape[2],i,f,y,g,b,w,_,T,v,x,k,N,I,S,A),E}};let ss;const os={kernelName:"Conv2DBackpropInput",backendName:"wasm",setupFunc:function(e){ss=e.wasm.cwrap("Conv2DBackpropInput",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:o,pad:i,dataFormat:u,dimRoundingMode:p,inputShape:l}=r,c=Dt(u),d=Tt(l,s.shape,o,1,i,p,!1,c),{batchSize:m,filterHeight:h,filterWidth:f,inChannels:y,inHeight:g,inWidth:b,outChannels:w,outHeight:_,outWidth:v,strideHeight:x,strideWidth:k}=d,N=h-1-d.padInfo.top,I=f-1-d.padInfo.left,S="channelsLast"===d.dataFormat,T=P(d.inShape),E=P(a.shape),[A,M,F]=P(s.shape),O=T[0],D=S?T[1]:T[2],C=S?T[2]:1,R=S?1:T[1],B=E[0],$=S?E[1]:E[2],L=S?E[2]:1,z=S?1:E[1],V=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(V.dataId).id,j=t.dataIdMap.get(a.dataId).id,H=t.dataIdMap.get(s.dataId).id;return ss(j,H,m,h,f,g,b,y,_,v,w,x,k,N,I,A,M,F,O,D,C,R,B,$,L,z,W),V}},is=Ca("Cos");var us;let ps,ls,cs,ds,ms,hs,fs,ys,gs,bs,ws,_s,vs,xs,ks,Ns,Is,Ss,Ts,Es,As,Ms,Fs,Os,Ds,Cs;function Rs(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:o}}function Bs(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n;return{dataId:r.dataId,shape:a,dtype:r.dtype}}function Ps(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,o]=mt(t,n,r),i=ct(t.shape,s,o),u=a.typedArrayFromHeap(t),p=a.makeOutput(o,t.dtype),l=a.typedArrayFromHeap(p),c=P(t.shape);if(i){const e=dt(s,c);return l.set(u.subarray(e,e+T(o))),p}const d=t.shape.length;return 2===d?function(e,t,n,r,a){let s=0;const o=r[0],i=r[1],u=o+a[0];for(let r=o;r<u;r++){const o=r*t+i;n.set(e.subarray(o,o+a[1]),s),s+=a[1]}}(u,c[0],l,s,o):3===d?function(e,t,n,r,a,s){let o=0;const i=a[0],u=a[1],p=a[2],l=i+s[0],c=u+s[1];for(let a=i;a<l;a++)for(let i=u;i<c;i++){const u=a*t+i*n+p;r.set(e.subarray(u,u+s[2]),o),o+=s[2]}}(u,c[0],c[1],l,s,o):4===d?function(e,t,n,r,a,s,o){let i=0;const u=s[0],p=s[1],l=s[2],c=u+o[0],d=p+o[1],m=l+o[2],h=s[3];for(let s=u;s<c;s++)for(let u=p;u<d;u++)for(let p=l;p<m;p++){const l=s*t+u*n+p*r+h;a.set(e.subarray(l,l+o[3]),i),i+=o[3]}}(u,c[0],c[1],c[2],l,s,o):function(e,t,n,r,a){const s=Lt(a,t.dtype,n),o=Lt(t.shape,t.dtype,e);for(let e=0;e<s.size;++e){const t=s.indexToLoc(e).map((e,t)=>e+r[t]);n[e]=o.get(...t)}}(u,t,l,s,o),p}!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(us||(us={}));const $s=[Ra,Pa,La,Ga,Xa,Ja,Za,ts,ns,as,os,is,{kernelName:"CropAndResize",backendName:"wasm",setupFunc:function(e){ps=e.wasm.cwrap("CropAndResize",null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:o}=r,{image:i,boxes:u,boxInd:p}=n,l=u.shape[0],[c,d]=o,m=[l,c,d,i.shape[3]];let h,f=t.dataIdMap.get(i.dataId);"float32"!==i.dtype&&(h=Qa({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(h.dataId));const y=f.id,g=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(p.dataId).id,w=t.makeOutput(m,"float32"),_=t.dataIdMap.get(w.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return ps(y,g,b,l,v,c,d,us[a],s,_),null!=h&&t.disposeData(h.dataId),w}},{kernelName:"DepthwiseConv2dNative",backendName:"wasm",setupFunc:function(e){ls=e.wasm.cwrap("DepthwiseConv2dNative",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,o=r.dataIdMap.get(a.dataId).id,i=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:c}=n,d=null==p?[1,1]:p,m=Tt(a.shape,s.shape,u,d,l,c,!0),h=m.filterHeight,f=m.filterWidth,y=m.padInfo.top,g=m.padInfo.right,b=m.padInfo.bottom,w=m.padInfo.left,_=m.dilationHeight,v=m.dilationWidth,x=m.strideHeight,k=m.strideWidth,N=m.inChannels,I=m.outChannels,S="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'"+m.dataFormat+"'. Please use 'channelsLast'.");const T=r.makeOutput(m.outShape,"float32"),E=r.dataIdMap.get(T.dataId).id;return ls(o,a.shape[0],a.shape[1],a.shape[2],i,h,f,y,g,b,w,S,_,v,x,k,N,I,E),T}},Ba("Div",!0),Ba("Equal",!1,"bool"),Ca("Exp"),{kernelName:"Fill",backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}},{kernelName:"FlipLeftRight",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,[i,u,p,l]=r.shape;return cs(s,i,u,p,l,o),a},setupFunc:function(e){cs=e.wasm.cwrap("FlipLeftRight",null,["number","number","number","number","number","number"])}},Ba("FloorDiv",!1),Da,{kernelName:"FusedBatchNorm",backendName:"wasm",setupFunc:function(e){ds=e.wasm.cwrap("FusedBatchNorm",null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:o,variance:i,offset:u,scale:p}=n,l=t.dataIdMap.get(s.dataId).id,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(i.dataId).id,m=null!=u?t.dataIdMap.get(u.dataId).id:0,h=null!=p?t.dataIdMap.get(p.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(0===T(s.shape))return f;const y=t.dataIdMap.get(f.dataId).id;return ds(l,c,d,m,h,a,y),f}},{kernelName:"FusedConv2D",backendName:"wasm",setupFunc:function(e){ms=e.wasm.cwrap("FusedConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:p,dilations:l,dataFormat:c,dimRoundingMode:d,activation:m}=n,h=Tt(a.shape,s.shape,u,l,p,d),f=Ma[m];if(null==f)throw new Error(m+" activation not yet supported for FusedConv2D in the wasm backend.");const y=r.dataIdMap.get(a.dataId).id,g=r.dataIdMap.get(s.dataId).id,b=h.outChannels;let w=0;if(null!=o){const e=r.dataIdMap.get(o.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);w=e.id}const _=h.filterHeight,v=h.filterWidth,x=h.padInfo.top,k=h.padInfo.right,N=h.padInfo.bottom,I=h.padInfo.left,S=h.dilationHeight,T=h.dilationWidth,E=h.strideHeight,A=h.strideWidth,M=h.inChannels,F="SAME"===h.padInfo.type?1:0,O=h.batchSize,D=h.inHeight,C=h.inWidth;if("NHWC"!==c)throw new Error("wasm backend FusedConv2D does not support dataFormat:'"+c+"'. Please use 'NHWC'.");const R=r.makeOutput(h.outShape,"float32"),B=r.dataIdMap.get(R.dataId).id,P=null==i?0:r.dataIdMap.get(i.dataId).id;return ms(y,O,D,C,g,_,v,w,x,k,N,I,F,S,T,E,A,M,b,f,P,B),R}},{kernelName:"FusedDepthwiseConv2D",backendName:"wasm",setupFunc:function(e){hs=e.wasm.cwrap("FusedDepthwiseConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:p,dilations:l,dataFormat:c,dimRoundingMode:d,activation:m}=n,h=Tt(a.shape,s.shape,u,l,p,d,!0),f=Ma[m];if(null==f)throw new Error(m+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");const y=r.dataIdMap.get(a.dataId).id,g=r.dataIdMap.get(s.dataId).id,b=h.outChannels;let w=0;if(null!=o){const e=r.dataIdMap.get(o.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);w=e.id}const _=h.filterHeight,v=h.filterWidth,x=h.padInfo.top,k=h.padInfo.right,N=h.padInfo.bottom,I=h.padInfo.left,S=h.dilationHeight,T=h.dilationWidth,E=h.strideHeight,A=h.strideWidth,M=h.inChannels,F="SAME"===h.padInfo.type?1:0,O=h.batchSize,D=h.inHeight,C=h.inWidth;if("NHWC"!==c)throw new Error("wasm backend FusedDepthwiseConv2D does not support dataFormat:'"+c+"'. Please use 'NHWC'.");const R=r.makeOutput(h.outShape,"float32"),B=r.dataIdMap.get(R.dataId).id,P=null==i?0:r.dataIdMap.get(i.dataId).id;return hs(y,O,D,C,g,_,v,w,x,k,N,I,F,S,T,E,A,M,b,f,P,B),R}},{kernelName:"GatherNd",backendName:"wasm",setupFunc:function(e){fs=e.wasm.cwrap("GatherNd",null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,o,i,u]=function(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let a=1;for(let e=0;e<n.length-1;++e)a*=n[e];const s=e.shape,o=n.slice();o.pop();let i=1;for(let t=r;t<e.rank;++t)i*=s[t],o.push(s[t]);const u=[...P(e.shape).map(e=>e/i),1].slice(0,r);return[o,a,i,u]}(r,a),p=t.makeOutput(s,r.dtype);if(0===o)return p;const l=a.shape,c=l[l.length-1],d=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(a.dataId).id,h=new Uint8Array(new Int32Array(u).buffer),f=t.dataIdMap.get(p.dataId).id;return fs(d,Aa[r.dtype],m,o,c,i,h,f),p}},{kernelName:"GatherV2",backendName:"wasm",setupFunc:function(e){ys=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:o}=r,i=a.shape.slice();i[o]=T(s.shape);const u=a.shape.length-1,p=t.makeOutput(i,a.dtype);if(0===T(a.shape))return p;const l=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(p.dataId).id,m=new Uint8Array(new Int32Array(P(a.shape)).buffer),h=new Uint8Array(new Int32Array(P(i)).buffer);ys(l,Aa[a.dtype],m,u,c,o,h,d);const f=function(e,t,n){const r=e.shape[n],a=[];let s=1,o=1;for(let t=0;t<n;t++)a.push(e.shape[t]),s*=e.shape[t];for(let e=0;e<t.rank;e++)a.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)a.push(e.shape[t]),o*=e.shape[t];return{batchSize:s,sliceSize:o,dimSize:r,outputShape:a}}(a,s,F(o,a.shape)[0]);return p.shape=f.outputShape,p}},Ba("Greater",!1,"bool"),Ba("GreaterEqual",!1,"bool"),Va,Ba("Less",!1,"bool"),Ba("LessEqual",!1,"bool"),Ca("Log"),Ba("LogicalAnd",!1,"bool"),{kernelName:"Max",backendName:"wasm",setupFunc:function(e){gs=e.wasm.cwrap("Max",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:o}=n;let i=t.dataIdMap.get(o.dataId).id,u=o;const{transposed:p,axes:l,originalAxes:c,inputWasTransposed:d}=Ua(o,a,t);d&&(u=p,i=t.dataIdMap.get(p.dataId).id);kt("max",l,u.shape.length);const[m,h]=vt(u.shape,l),f=T(h),y=t.makeOutput(m,o.dtype);if(0!==T(u.shape)){const e=t.dataIdMap.get(y.dataId).id;gs(i,f,e)}if(d&&t.disposeData(p.dataId),s){const e=xt(y.shape,c);y.shape=e}return y}},Ba("Maximum",!1),{kernelName:"MaxPool",backendName:"wasm",setupFunc:function(e){bs=e.wasm.cwrap("MaxPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:i,pad:u,dimRoundingMode:p}=n,l=St(a.shape,o,i,1,u,p),c=l.filterHeight,d=l.filterWidth,m=l.padInfo.top,h=l.padInfo.right,f=l.padInfo.bottom,y=l.padInfo.left,g=l.dilationHeight,b=l.dilationWidth,w=l.strideHeight,_=l.strideWidth,v=l.inChannels,x=l.outChannels;if("channelsLast"!==l.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+l.dataFormat+"'. Please use 'channelsLast'.");const k=r.makeOutput(l.outShape,"float32"),N=r.dataIdMap.get(k.dataId).id;return bs(s,a.shape[0],a.shape[1],a.shape[2],c,d,m,h,f,y,g,b,w,_,v,x,N),k}},{kernelName:"Min",backendName:"wasm",setupFunc:function(e){ws=e.wasm.cwrap("Min",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id;let u=i,p=o;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:m}=Ua(o,a,t);if(m){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(p=l,u=e)}kt("min",c,p.shape.length);const[h,f]=vt(p.shape,c),y=T(f),g=t.makeOutput(h,p.dtype);if(0!==T(p.shape)){const e=t.dataIdMap.get(g.dataId).id;ws(u,y,e)}if(m&&t.disposeData(l.dataId),s){const e=xt(g.shape,d);g.shape=e}return g}},Ba("Minimum",!1),Ba("Multiply",!0),Ca("Negate"),{kernelName:"NonMaxSuppressionV3",backendName:"wasm",setupFunc:function(e){_s=e.wasm.cwrap("NonMaxSuppressionV3","number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o}=r,{boxes:i,scores:u}=n,p=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(u.dataId).id,c=_s(p,l,s,a,o),{pSelectedIndices:d,selectedSize:m,pSelectedScores:h,pValidOutputs:f}=Rs(t,c);return t.wasm._free(h),t.wasm._free(f),t.makeOutput([m],"int32",d)}},{kernelName:"NonMaxSuppressionV4",backendName:"wasm",setupFunc:function(e){vs=e.wasm.cwrap("NonMaxSuppressionV4","number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o,padToMaxOutputSize:i}=r,{boxes:u,scores:p}=n,l=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(p.dataId).id,d=vs(l,c,s,a,o,i),{pSelectedIndices:m,selectedSize:h,pSelectedScores:f,pValidOutputs:y}=Rs(t,d);return t.wasm._free(f),[t.makeOutput([h],"int32",m),t.makeOutput([],"int32",y)]}},{kernelName:"NonMaxSuppressionV5",backendName:"wasm",setupFunc:function(e){xs=e.wasm.cwrap("NonMaxSuppressionV5","number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o,softNmsSigma:i}=r,{boxes:u,scores:p}=n,l=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(p.dataId).id,d=xs(l,c,s,a,o,i),{pSelectedIndices:m,selectedSize:h,pSelectedScores:f,pValidOutputs:y}=Rs(t,d);return t.wasm._free(y),[t.makeOutput([h],"int32",m),t.makeOutput([h],"float32",f)]}},Ba("NotEqual",!1,"bool"),{kernelName:"OneHot",backendName:"wasm",setupFunc:function(e){ks=e.wasm.cwrap("OneHot",null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:o,offValue:i}=r,u=n.makeOutput([...a.shape,s],"int32"),p=n.dataIdMap.get(u.dataId).id,l=n.dataIdMap.get(a.dataId).id;return ks(l,s,o,i,p),u}},{kernelName:"OnesLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},{kernelName:"PadV2",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),l=r.map(e=>e[0]),c=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(l).buffer),m=new Uint8Array(new Int32Array(c).buffer);return Ns(o,p,t.shape.length,Aa[t.dtype],d,m,a,u),i},setupFunc:function(e){Ns=e.wasm.cwrap("PadV2",null,["number","array","number","number","array","array","number","number"])}},Ba("Pow",!1),{kernelName:"Prelu",backendName:"wasm",setupFunc:function(e){Is=e.wasm.cwrap("Prelu",null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,i=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(i.dataId).id;return Is(s,o,u),i}},Ca("Relu"),Ca("Relu6"),{kernelName:"Reshape",backendName:"wasm",kernelFunc:Bs},{kernelName:"ResizeBilinear",backendName:"wasm",setupFunc:function(e){Ss=e.wasm.cwrap("ResizeBilinear",null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,size:o}=r,[i,u]=o,[p,l,c,d]=a.shape,m=[p,i,u,d];let h,f=t.dataIdMap.get(a.dataId);"float32"!==f.dtype&&(h=Qa({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(h.dataId));const y=f.id,g=t.makeOutput(m,"float32");if(0===T(a.shape))return g;const b=t.dataIdMap.get(g.dataId).id;return Ss(y,p,l,c,d,i,u,s?1:0,b),null!=h&&t.disposeData(h.dataId),g}},{kernelName:"Reverse",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,o=F(s,a.shape);if(0===a.shape.length)return za({inputs:{x:a},backend:n});const i=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(o).buffer),c=new Uint8Array(new Int32Array(a.shape).buffer);return Ts(u,l,o.length,c,a.shape.length,p),Bs({inputs:{x:i},attrs:{shape:a.shape},backend:n})},setupFunc:function(e){Ts=e.wasm.cwrap("Reverse",null,["number","array","number","array","number","number"])}},{kernelName:"RotateWithOffset",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:o,center:i}=r,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(u.dataId).id,[c,d,m,h]=a.shape,[f,y]=(_=d,[m*("number"==typeof(w=i)?w:w[0]),_*("number"==typeof w?w:w[1])]),g="number"==typeof o?[o,o,o,0===o?0:255]:[...o,255],b=new Uint8Array(new Int32Array(g).buffer);var w,_;return Es(p,c,d,m,h,s,f,y,b,g.length,l),u},setupFunc:function(e){Es=e.wasm.cwrap("RotateWithOffset",null,["number","number","number","number","number","number","number","number","array","number","number"])}},Ca("Rsqrt"),{kernelName:"ScatterNd",backendName:"wasm",setupFunc:function(e){As=e.wasm.cwrap("ScatterNd",null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:o}=r,i=t.makeOutput(o,s.dtype);if(0===T(o))return i;const{sliceRank:u,numUpdates:p,sliceSize:l,strides:c,outputSize:d}=function(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const i=a<1?1:a;return{sliceRank:a,numUpdates:T(t.shape)/i,sliceSize:o,strides:[...P(n.slice(0,a)),1],outputSize:T(n)}}(0,a,o),m=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(c).buffer),y=t.dataIdMap.get(i.dataId).id;return As(m,h,Aa[s.dtype],u,p,l,f,d,y),i}},{kernelName:"SelectV2",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,o=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,p=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(p.dataId).id,c=r.shape.length,d=a.shape.length,m=0===c||c>1||1===d?1:T(a.shape.slice(1));return Ms(o,i,u,m,l),p},setupFunc:function(e){Ms=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Fs=e.wasm.cwrap("Sigmoid",null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===T(a.shape)||Fs(r,s),a}},Ca("Sin"),{kernelName:"Slice",backendName:"wasm",kernelFunc:Ps},{kernelName:"Softmax",backendName:"wasm",setupFunc:function(e){Os=e.wasm.cwrap("Softmax",null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(s.dataId).id,i=n.shape[r],u=T(n.shape)/i;return 0===T(s.shape)||Os(a,o,i,u),s}},{kernelName:"SplitV",backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:o}=n,i=F(o,a.shape)[0],u=function(e,t,n=0){let r=[];if("number"==typeof t)k(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{k(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}k(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}(a,s,o),p=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map(e=>{const t=[...l];t[i]=e;const n=Ps({inputs:{x:a},attrs:{begin:p,size:t},backend:r});return p[i]+=e,n})}},Ca("Sqrt"),Ca("Square"),Ba("Sub",!0),{kernelName:"Sum",backendName:"wasm",setupFunc:function(e){Ds=e.wasm.cwrap("Sum",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id;let u=i,p=o;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:m}=Ua(o,a,t);let h=c;if(m){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(p=l,u=e,h=It(h.length,p.shape.length))}kt("sum",h,p.shape.length);const[f,y]=vt(p.shape,h),g=T(y),b=t.makeOutput(f,p.dtype);if(0!==T(p.shape)){const e=t.dataIdMap.get(b.dataId).id;Ds(u,g,e)}if(m&&t.disposeData(l.dataId),s){const e=xt(b.shape,d);b.shape=e}return b}},Ca("Tanh"),{kernelName:"Tile",backendName:"wasm",setupFunc:function(e){Cs=e.wasm.cwrap("Tile",null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:o}=r,i=new Array(a.shape.length);for(let e=0;e<i.length;e++)i[e]=a.shape[e]*o[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),p=new Uint8Array(new Int32Array(i).buffer),l=n.makeOutput(i,a.dtype),c=n.dataIdMap.get(l.dataId).id;return Cs(s,u,a.shape.length,p,i.length,Aa[l.dtype],c),l}},Ha,{kernelName:"Unpack",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r,o=a.shape[s],i=a.shape.length,u=new Array(i-1);let p=0;for(let e=0;e<i;e++)e!==s&&(u[p++]=a.shape[e]);const l=new Array(o),c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<l.length;e++)c[s]=e,l[e]=Ps({inputs:{x:a},attrs:{begin:c,size:d},backend:n});return l.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u}))}},{kernelName:"ZerosLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of $s)_(e);const Ls=l();function zs(e,t){return e(t={exports:{}},t.exports),t.exports}Ls.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))),Ls.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var Vs=zs((function(e,t){var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){function t(){return E.buffer!=W&&X(E.buffer),j}function r(){return E.buffer!=W&&X(E.buffer),H}function a(){return E.buffer!=W&&X(E.buffer),U}function p(){return E.buffer!=W&&X(E.buffer),q}function l(){return E.buffer!=W&&X(E.buffer),G}var c,d=void 0!==(e=e||{})?e:{},m={};for(c in d)d.hasOwnProperty(c)&&(m[c]=d[c]);var h,f,y,g;h="object"==typeof window,f="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g=!h&&!y&&!f;var b=d.ENVIRONMENT_IS_PTHREAD||!1;b&&(W=d.buffer,Y=d.DYNAMIC_BASE,J=d.DYNAMICTOP_PTR);var w,_,v,x,k="";function N(e){return d.locateFile?d.locateFile(e,k):k+e}if(y){var I;k=f?s.default.dirname(k)+"/":__dirname+"/",w=function(e,t){return v||(v=o.default),x||(x=s.default),e=x.normalize(e),v.readFileSync(e,t?null:"utf8")},_=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),R(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof yt))throw e})),process.on("unhandledRejection",le),d.inspect=function(){return"[Emscripten Module object]"};try{I=i.default}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}Worker=I.Worker}else g?("undefined"!=typeof read&&(w=function(e){return read(e)}),_=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(R("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs&&scriptArgs,"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(h||f)&&(f?k=self.location.href:document.currentScript&&(k=document.currentScript.src),n&&(k=n),k=0!==k.indexOf("blob:")?k.substr(0,k.lastIndexOf("/")+1):"",y?(w=function(e,t){return v||(v=o.default),x||(x=s.default),e=x.normalize(e),v.readFileSync(e,t?null:"utf8")},_=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),R(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},f&&(_=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)})));y&&"undefined"==typeof performance&&(performance=u.default.performance);var S,T,E,A=d.print||console.log.bind(console),M=d.printErr||console.warn.bind(console);for(c in m)m.hasOwnProperty(c)&&(d[c]=m[c]);m=null,d.arguments&&d.arguments,d.thisProgram&&d.thisProgram,d.quit&&d.quit,d.wasmBinary&&(S=d.wasmBinary),d.noExitRuntime&&(T=d.noExitRuntime),"object"!=typeof WebAssembly&&M("no native wasm support detected");var F,O=new WebAssembly.Table({initial:165,maximum:165,element:"anyfunc"}),D=0,C=!1;function R(e,t){e||le("Assertion failed: "+t)}function B(e){var t=d["_"+e];return R(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function P(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);z(e,t=mt(n),n)}return t},array:function(e){var t=mt(e.length);return V(e,t),t}},o=B(e),i=[],u=0;if(r)for(var p=0;p<r.length;p++){var l=s[n[p]];l?(0===u&&(u=dt()),i[p]=l(r[p])):i[p]=r[p]}var c=o.apply(null,i);return c=function(e){return"string"===t?L(e):"boolean"===t?Boolean(e):e}(c),0!==u&&ht(u),c}function $(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var o=63&e[t++];if(192!=(224&s)){var i=63&e[t++];if((s=224==(240&s)?(15&s)<<12|o<<6|i:(7&s)<<18|o<<12|i<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|o)}else a+=String.fromCharCode(s)}return a}function L(e,t){return e?$(r(),e,t):""}function z(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,o=0;o<e.length;++o){var i=e.charCodeAt(o);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),i<=127){if(n>=s)break;t[n++]=i}else if(i<=2047){if(n+1>=s)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=s)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=s)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}return t[n]=0,n-a}(e,r(),t,n)}function V(e,n){t().set(e,n)}var W,j,H,U,q,G;function K(e,t){return e%t>0&&(e+=t-e%t),e}function X(e){W=e,d.HEAP8=j=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=U=new Int32Array(e),d.HEAPU8=H=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=q=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=G=new Float64Array(e)}var Y=5256256,J=12448,Q=d.INITIAL_MEMORY||16777216;if(b)E=d.wasmMemory,W=d.buffer;else if(d.wasmMemory)E=d.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:Q/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw M("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");function Z(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?d.dynCall_v(n):d.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(d)}}E&&(W=E.buffer),Q=W.byteLength,X(W),b||(a()[J>>2]=Y);var ee=[],te=[],ne=[],re=[];function ae(e){ee.unshift(e)}function se(e){re.unshift(e)}var oe=Math.ceil,ie=Math.floor,ue=0,pe=null;function le(e){throw d.onAbort&&d.onAbort(e),b&&console.error("Pthread aborting at "+(new Error).stack),A(e+=""),M(e),C=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function ce(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}d.preloadedImages={},d.preloadedAudios={};function de(e){return ce(e,"data:application/octet-stream;base64,")}function me(e){return ce(e,"file://")}var he="tfjs-backend-wasm-threaded-simd.wasm";function fe(){try{if(S)return new Uint8Array(S);if(_)return _(he);throw"both async and sync fetching of the wasm failed"}catch(e){le(e)}}de(he)||(he=N(he));var ye={};b||te.push({func:function(){et()}});var ge=0,be=0,we=0;function _e(e,t,n){ge=e|=0,we=t|=0,be=n|=0}d.__register_pthread_ptr=_e;var ve=71,xe=28;function ke(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(a(),3340),s=0;if(r==e&&Atomics.compareExchange(a(),3340,r,0)==r&&(s=1,--n<=0))return 1;var o=Atomics.notify(a(),e>>2,n);if(o>=0)return o+s;throw"Atomics.notify returned an unexpected value "+o}function Ne(e){if(b)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _kill_thread!";a()[e+12>>2]=0;var t=Te.pthreads[e];t.worker.terminate(),Te.freeThreadData(t),Te.runningWorkers.splice(Te.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Ie(e){if(b)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";a()[e+12>>2]=0;var t=Te.pthreads[e];if(t){var n=t.worker;Te.returnWorkerToPool(n)}}d._emscripten_futex_wake=ke;var Se,Te={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){_e(Te.mainThreadBlock,!f,1),ut(Te.mainThreadBlock)},initMainThreadBlock:function(){for(var e=0;e<8;++e)Te.allocateUnusedWorker();for(Te.mainThreadBlock=12608,e=0;e<58;++e)p()[Te.mainThreadBlock/4+e]=0;a()[Te.mainThreadBlock+12>>2]=Te.mainThreadBlock;var t=Te.mainThreadBlock+156;for(a()[t>>2]=t,e=0;e<128;++e)p()[3212+e]=0;Atomics.store(p(),Te.mainThreadBlock+104>>2,12848),Atomics.store(p(),Te.mainThreadBlock+40>>2,Te.mainThreadBlock),Atomics.store(p(),Te.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(null!==Te.exitHandlers){for(;Te.exitHandlers.length>0;)Te.exitHandlers.pop()();Te.exitHandlers=null}b&&D&&ot()},threadExit:function(e){var t=Ke();t&&(Atomics.store(p(),t+4>>2,e),Atomics.store(p(),t+0>>2,1),Atomics.store(p(),t+60>>2,1),Atomics.store(p(),t+64>>2,0),Te.runExitHandlers(),ke(t+0,2147483647),_e(0,0,0),D=0,b&&postMessage({cmd:"exit"}))},threadCancel:function(){Te.runExitHandlers(),Atomics.store(p(),D+4>>2,-1),Atomics.store(p(),D+0>>2,1),ke(D+0,2147483647),D=0,_e(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Te.pthreads)(r=Te.pthreads[e])&&r.worker&&Te.returnWorkerToPool(r.worker);Te.pthreads={};for(var t=0;t<Te.unusedWorkers.length;++t)(n=Te.unusedWorkers[t]).terminate();for(Te.unusedWorkers=[],t=0;t<Te.runningWorkers.length;++t){var n,r=(n=Te.runningWorkers[t]).pthread;Te.freeThreadData(r),n.terminate()}Te.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=a()[e.threadInfoStruct+104>>2];a()[e.threadInfoStruct+104>>2]=0,nt(t),nt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&nt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){delete Te.pthreads[e.pthread.thread],Te.unusedWorkers.push(e),Te.runningWorkers.splice(Te.runningWorkers.indexOf(e),1),Te.freeThreadData(e.pthread),e.pthread=void 0},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Te.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Ke()){var s=Te.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Te.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===a?it():"spawnThread"===a?Ge(n.data):"cleanupThread"===a?Ie(r.thread):"killThread"===a?Ne(r.thread):"cancelThread"===a?function(e){if(b)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _cancel_thread!";Te.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread):"loaded"===a?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===a?A("Thread "+r.threadId+": "+r.text):"printErr"===a?M("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"exit"===a?e.pthread&&Atomics.load(p(),e.pthread.thread+68>>2)&&Te.returnWorkerToPool(e):"cancelDone"===a?Te.returnWorkerToPool(e):"objectTransfer"===a?Te.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):M("worker sent an unknown command "+a),Te.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){M("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},y&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){console.log("worker exited - TODO: update the worker queue?")}))),e.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||n,wasmMemory:E,wasmModule:F,DYNAMIC_BASE:Y,DYNAMICTOP_PTR:J})},allocateUnusedWorker:function(){var e=N("tfjs-backend-wasm-threaded-simd.worker.js");Te.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Te.unusedWorkers.length&&(Te.allocateUnusedWorker(),Te.loadWasmModuleToWorker(Te.unusedWorkers[0])),Te.unusedWorkers.length>0?Te.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Ee(e,t){for(var n=arguments.length-2,r=dt(),a=mt(8*n),s=a>>3,o=0;o<n;o++)l()[s+o]=arguments[2+o];var i=lt(e,n,a,t);return ht(r),i}d.establishStackSpace=function(e,t){ht(e)},d.getNoExitRuntime=function(){return T},Se=y?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:b?function(){return performance.now()-d.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var Ae=[];function Me(e,t){Me.array||(Me.array=[]);var n,s=Me.array;for(s.length=0;n=r()[e++];)100===n||102===n?(t=t+7&-8,s.push(l()[t>>3]),t+=8):(t=t+3&-4,s.push(a()[t>>2]),t+=4);return s}function Fe(){return r().length}function Oe(e){try{return E.grow(e-W.byteLength+65535>>>16),X(E.buffer),1}catch(e){}}var De={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var e=De.eventHandlers.length-1;e>=0;--e)De._removeHandler(e);De.eventHandlers=[],De.deferredCalls=[]},registerRemoveEventListeners:function(){De.removeEventListenersRegistered||(De.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in De.deferredCalls){var s=De.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}De.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),De.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<De.deferredCalls.length;++t)De.deferredCalls[t].targetFunction==e&&(De.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return De.inEventHandler&&De.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(De.canPerformEventHandlerRequests())for(var e=0;e<De.deferredCalls.length;++e){var t=De.deferredCalls[e];De.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target!=e||t&&t!=De.eventHandlers[n].eventTypeString||De._removeHandler(n--)},_removeHandler:function(e){var t=De.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),De.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++De.inEventHandler,De.currentEventHandler=e,De.runDeferredCalls(),e.handlerFunc(t),De.runDeferredCalls(),--De.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),De.eventHandlers.push(e),De.registerRemoveEventListeners();else for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e.target&&De.eventHandlers[n].eventTypeString==e.eventTypeString&&De._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){var o=dt(),i=mt(12);a()[i>>2]=n,a()[i+4>>2]=r,a()[i+8>>2]=s,ct(e,637534208,t,r,i),ht(o)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Te.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Ce(e,t,n,r){var s=dt(),o=mt(12),i=0;t&&(i=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=tt(t);return z(e,n,t),n}(t)),a()[o>>2]=i,a()[o+4>>2]=n,a()[o+8>>2]=r,ct(e,657457152,0,i,o),ht(s)}var Re=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Be(e){return e=function(e){return e>2?L(e):e}(e),Re[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function Pe(e){return Be(e)}function $e(e,t,n){var r=Pe(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){Ce(e,t=t?L(t):"",n,r)}(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var o=r.GLctxObject.GLctx.getParameter(2978);s=0===o[0]&&0===o[1]&&o[2]===r.width&&o[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Le(e,t,n){return b?Ee(2,1,e,t,n):$e(e,t,n)}var ze={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var e=new Float32Array(ze.MINI_TEMP_BUFFER_SIZE),t=0;t<ze.MINI_TEMP_BUFFER_SIZE;t++)ze.miniTempBufferFloatViews[t]=e.subarray(0,t+1);var n=new Int32Array(ze.MINI_TEMP_BUFFER_SIZE);for(t=0;t<ze.MINI_TEMP_BUFFER_SIZE;t++)ze.miniTempBufferIntViews[t]=n.subarray(0,t+1)},recordError:function(e){ze.lastError||(ze.lastError=e)},getNewId:function(e){for(var t=ze.counter++,n=e.length;n<t;n++)e[n]=null;return t},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(e,t,n,r){for(var s="",o=0;o<t;++o){var i=r?a()[r+4*o>>2]:-1;s+=L(a()[n+4*o>>2],i<0?void 0:i)}return s},createContext:function(e,t){var n=e.getContext("webgl",t);return n?ze.registerContext(n,t):0},registerContext:function(e,t){var n=tt(8);a()[n+4>>2]=Ke();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),ze.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&ze.initExtensions(r),n},makeContextCurrent:function(e){return ze.currentContext=ze.contexts[e],d.ctx=We=ze.currentContext&&ze.currentContext.GLctx,!(e&&!We)},getContext:function(e){return ze.contexts[e]},deleteContext:function(e){ze.currentContext===ze.contexts[e]&&(ze.currentContext=null),"object"==typeof De&&De.removeAllHandlersOnTarget(ze.contexts[e].GLctx.canvas),ze.contexts[e]&&ze.contexts[e].GLctx.canvas&&(ze.contexts[e].GLctx.canvas.GLctxObject=void 0),nt(ze.contexts[e].handle),ze.contexts[e]=null},initExtensions:function(e){if(e||(e=ze.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)}})(t),function(e){var t=e.getExtension("OES_vertex_array_object");if(t)e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)}}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)}}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query");var n=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"];(t.getSupportedExtensions()||[]).forEach((function(e){-1!=n.indexOf(e)&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=ze.programs[e],n=ze.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=We.getProgramParameter(t,35718),s=0;s<a;++s){var o=We.getActiveUniform(t,s),i=o.name;n.maxUniformLength=Math.max(n.maxUniformLength,i.length+1),"]"==i.slice(-1)&&(i=i.slice(0,i.lastIndexOf("[")));var u=We.getUniformLocation(t,i);if(u){var p=ze.getNewId(ze.uniforms);r[i]=[o.size,p],ze.uniforms[p]=u;for(var l=1;l<o.size;++l){var c=i+"["+l+"]";u=We.getUniformLocation(t,c),p=ze.getNewId(ze.uniforms),ze.uniforms[p]=u}}}}},Ve=["default","low-power","high-performance"];var We,je={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=je.buffers[e];0===t||10===t?((1===e?A:M)($(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return je.varargs+=4,a()[je.varargs-4>>2]},getStr:function(e){return L(e)},get64:function(e,t){return e}};function He(e){return b?Ee(3,1,e):0}function Ue(e,t,n,r,a){if(b)return Ee(4,1,e,t,n,r,a)}function qe(e,t,n,s){if(b)return Ee(5,1,e,t,n,s);for(var o=0,i=0;i<n;i++){for(var u=a()[t+8*i>>2],p=a()[t+(8*i+4)>>2],l=0;l<p;l++)je.printChar(e,r()[u+l]);o+=p}return a()[s>>2]=o,0}function Ge(e){if(b)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var t=Te.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Te.runningWorkers.push(t);for(var n=tt(512),r=0;r<128;++r)a()[n+4*r>>2]=0;var s=e.stackBase+e.stackSize,o=Te.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,thread:e.pthread_ptr,threadInfoStruct:e.pthread_ptr},i=o.threadInfoStruct>>2;Atomics.store(p(),i+0,0),Atomics.store(p(),i+1,0),Atomics.store(p(),i+2,0),Atomics.store(p(),i+17,e.detached),Atomics.store(p(),i+26,n),Atomics.store(p(),i+12,0),Atomics.store(p(),i+10,o.threadInfoStruct),Atomics.store(p(),i+11,42),Atomics.store(p(),i+27,e.stackSize),Atomics.store(p(),i+21,e.stackSize),Atomics.store(p(),i+20,s),Atomics.store(p(),i+29,s),Atomics.store(p(),i+30,e.detached),Atomics.store(p(),i+32,e.schedPolicy),Atomics.store(p(),i+33,e.schedPrio);var u=rt()+40;Atomics.store(p(),i+44,u),t.pthread=o;var l={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,selfThreadId:e.pthread_ptr,parentThreadId:e.parent_pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){l.time=performance.now(),t.postMessage(l,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Ke(){return 0|ge}function Xe(e){if(b)return Ee(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return function(e){a()[at()>>2]=e}(28),-1}d._pthread_self=Ke,b?Te.initWorker():Te.initMainThreadBlock(),ze.init();var Ye=[null,function(e,t){if(b)return Ee(1,1,e,t)},Le,He,Ue,qe,Xe],Je={e:function(e,t,n,r){le("Assertion failed: "+L(e)+", at: "+[t?L(t):"unknown filename",n,r?L(r):"unknown function"])},r:function(e,t){_main(e,t)},w:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(b)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Te.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},a:function(){le()},l:function(e,t){},d:function(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(f){var s=Atomics.wait(a(),e>>2,n,r);if("timed-out"===s)return-73;if("not-equal"===s)return-6;if("ok"===s)return 0;throw"Atomics.wait returned an unexpected value "+s}if(n!=Atomics.load(a(),e>>2))return-6;var o=performance.now(),i=o+r;Atomics.store(a(),3340,e);for(var u=e;e==u;){if((o=performance.now())>i)return-73;it(),e=Atomics.load(a(),3340)}return 0},c:ke,h:Se,g:function(){return 0|we},x:function(){return 0|be},q:function(e,t,n){r().copyWithin(e,t,t+n)},B:function(){return navigator.hardwareConcurrency},t:function(e,t,n){Ae.length=t;for(var r=n>>3,a=0;a<t;a++)Ae[a]=l()[r+a];var s=e<0,o=s?ye[-e-1]:Ye[e];if(s){var i=Me(Ae[1],Ae[2]);return o.apply(null,i)}return o.apply(null,Ae)},A:function(e){e>>>=0;var t=Fe();if(e<=t)return!1;if(e>2147483648)return!1;for(var n=1;n<=4;n*=2){var r=t*(1+.2/n);if(r=Math.min(r,e+100663296),Oe(Math.min(2147483648,K(Math.max(16777216,e,r),65536))))return!0}return!1},u:function(e,t,n){return Pe(e)?$e(e,t,n):Le(e,t,n)},k:function(e){},s:function(e,t){},v:function(e,t){return function(e,t){var n={},r=t>>2;n.alpha=!!a()[r+0],n.depth=!!a()[r+1],n.stencil=!!a()[r+2],n.antialias=!!a()[r+3],n.premultipliedAlpha=!!a()[r+4],n.preserveDrawingBuffer=!!a()[r+5];var s=a()[r+6];n.powerPreference=Ve[s],n.failIfMajorPerformanceCaveat=!!a()[r+7],n.majorVersion=a()[r+8],n.minorVersion=a()[r+9],n.enableExtensionsByDefault=a()[r+10],n.explicitSwapControl=a()[r+11],n.proxyContextToMainThread=a()[r+12],n.renderViaOffscreenBackBuffer=a()[r+13];var o=Pe(e);return o?n.explicitSwapControl?-1:ze.createContext(o,n):-4}(e,t)},m:He,o:Ue,i:qe,p:function(){Te.initRuntime()},memory:E||d.wasmMemory,y:function(e){var t=Te.exitHandlers.pop();e&&t()},z:function(e,t){null===Te.exitHandlers&&(Te.exitHandlers=[]),Te.exitHandlers.push((function(){ft(e,t)}))},j:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return M("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return M("pthread_create called with a null thread pointer!"),28;var s=[];if(b&&0===s.length)return pt(687865856,e,t,n,r);var o=0,i=0,u=0,l=0,c=0;if(t)if(o=a()[t>>2],o+=81920,i=a()[t+8>>2],u=0!==a()[t+12>>2],0===a()[t+16>>2]){var d=a()[t+20>>2],m=a()[t+24>>2];(function(e,t,n){if(!t&&!n)return xe;if(!e)return M("pthread_getschedparam called with a null thread pointer!"),ve;if(a()[e+12>>2]!==e)return M("pthread_getschedparam attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),ve;var r=Atomics.load(p(),e+108+20>>2),s=Atomics.load(p(),e+108+24>>2);t&&(a()[t>>2]=r),n&&(a()[n>>2]=s)})(Te.currentProxiedOperationCallerThread?Te.currentProxiedOperationCallerThread:Ke(),t+20,t+24),l=a()[t+20>>2],c=a()[t+24>>2],a()[t+20>>2]=d,a()[t+24>>2]=m}else l=a()[t+20>>2],c=a()[t+24>>2];else o=2097152;var h=0==i;h?i=st(16,o):R((i-=o)>0);for(var f=tt(232),y=0;y<58;++y)p()[(f>>2)+y]=0;a()[e>>2]=f,a()[f+12>>2]=f;var g=f+156;a()[g>>2]=g;var w={stackBase:i,stackSize:o,allocatedOwnStack:h,schedPolicy:l,schedPrio:c,detached:u,startRoutine:n,pthread_ptr:f,parent_pthread_ptr:Ke(),arg:r,transferList:s};return b?(w.cmd="spawnThread",postMessage(w,s)):Ge(w),0},b:Ke,f:function(e){return(e=+e)>=0?+ie(e+.5):+oe(e-.5)},n:Xe,table:O},Qe=function(){var e={a:Je};function t(e,t){var n=e.exports;if(d.asm=n,F=t,!b){var r=Te.unusedWorkers.length;Te.unusedWorkers.forEach((function(e){Te.loadWasmModuleToWorker(e,(function(){--r||function(e){if(ue--,d.monitorRunDependencies&&d.monitorRunDependencies(ue),0==ue&&pe){var t=pe;pe=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return(S||!h&&!f||"function"!=typeof fetch||me(he)?new Promise((function(e,t){e(fe())})):fetch(he,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+he+"'";return e.arrayBuffer()})).catch((function(){return fe()}))).then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){M("failed to asynchronously prepare wasm: "+e),le(e)}))}if(b||(R(!b,"addRunDependency cannot be used in a pthread worker"),ue++,d.monitorRunDependencies&&d.monitorRunDependencies(ue)),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(e){return M("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(S||"function"!=typeof WebAssembly.instantiateStreaming||de(he)||me(he)||"function"!=typeof fetch)return r(n);fetch(he,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){M("wasm streaming compile failed: "+e),M("falling back to ArrayBuffer instantiation"),r(n)}))}))}(),{}}();d.asm=Qe;var Ze,et=d.___wasm_call_ctors=function(){return(et=d.___wasm_call_ctors=d.asm.C).apply(null,arguments)},tt=(d._init=function(){return(d._init=d.asm.D).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.E).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.F).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.G).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.H).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.I).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.J).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.K).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.L).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.M).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.N).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.O).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.P).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.Q).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.R).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm.S).apply(null,arguments)},d._Div=function(){return(d._Div=d.asm.T).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.U).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.V).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.W).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.X).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.Y).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.Z).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm._).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.$).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.aa).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.ba).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.ca).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.da).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.ea).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.fa).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.ga).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.ha).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.ia).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.ja).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.ka).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.la).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.ma).apply(null,arguments)},d._Negate=function(){return(d._Negate=d.asm.na).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.oa).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.pa).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.qa).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.ra).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.sa).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.ta).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.ua).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.va).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.wa).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.xa).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.ya).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.za).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.Aa).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Ba).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.Ca).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.Da).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Ea).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Fa).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Ga).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Ha).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm.Ia).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.Ja).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.Ka).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.La).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.Ma).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.Na).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm.Oa).apply(null,arguments)},d._malloc=function(){return(tt=d._malloc=d.asm.Pa).apply(null,arguments)}),nt=d._free=function(){return(nt=d._free=d.asm.Qa).apply(null,arguments)},rt=d._emscripten_get_global_libc=function(){return(rt=d._emscripten_get_global_libc=d.asm.Ra).apply(null,arguments)},at=d.___errno_location=function(){return(at=d.___errno_location=d.asm.Sa).apply(null,arguments)},st=(d.___em_js__initPthreadsJS=function(){return(d.___em_js__initPthreadsJS=d.asm.Ta).apply(null,arguments)},d._memalign=function(){return(st=d._memalign=d.asm.Ua).apply(null,arguments)}),ot=d.___pthread_tsd_run_dtors=function(){return(ot=d.___pthread_tsd_run_dtors=d.asm.Va).apply(null,arguments)},it=d._emscripten_main_thread_process_queued_calls=function(){return(it=d._emscripten_main_thread_process_queued_calls=d.asm.Wa).apply(null,arguments)},ut=(d._emscripten_current_thread_process_queued_calls=function(){return(d._emscripten_current_thread_process_queued_calls=d.asm.Xa).apply(null,arguments)},d._emscripten_register_main_browser_thread_id=function(){return(ut=d._emscripten_register_main_browser_thread_id=d.asm.Ya).apply(null,arguments)}),pt=(d._emscripten_main_browser_thread_id=function(){return(d._emscripten_main_browser_thread_id=d.asm.Za).apply(null,arguments)},d._emscripten_async_run_in_main_thread=function(){return(d._emscripten_async_run_in_main_thread=d.asm._a).apply(null,arguments)},d._emscripten_sync_run_in_main_thread=function(){return(d._emscripten_sync_run_in_main_thread=d.asm.$a).apply(null,arguments)},d._emscripten_sync_run_in_main_thread_0=function(){return(d._emscripten_sync_run_in_main_thread_0=d.asm.ab).apply(null,arguments)},d._emscripten_sync_run_in_main_thread_1=function(){return(d._emscripten_sync_run_in_main_thread_1=d.asm.bb).apply(null,arguments)},d._emscripten_sync_run_in_main_thread_2=function(){return(d._emscripten_sync_run_in_main_thread_2=d.asm.cb).apply(null,arguments)},d._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(d._emscripten_sync_run_in_main_thread_xprintf_varargs=d.asm.db).apply(null,arguments)},d._emscripten_sync_run_in_main_thread_3=function(){return(d._emscripten_sync_run_in_main_thread_3=d.asm.eb).apply(null,arguments)},d._emscripten_sync_run_in_main_thread_4=function(){return(pt=d._emscripten_sync_run_in_main_thread_4=d.asm.fb).apply(null,arguments)}),lt=(d._emscripten_sync_run_in_main_thread_5=function(){return(d._emscripten_sync_run_in_main_thread_5=d.asm.gb).apply(null,arguments)},d._emscripten_sync_run_in_main_thread_6=function(){return(d._emscripten_sync_run_in_main_thread_6=d.asm.hb).apply(null,arguments)},d._emscripten_sync_run_in_main_thread_7=function(){return(d._emscripten_sync_run_in_main_thread_7=d.asm.ib).apply(null,arguments)},d._emscripten_run_in_main_runtime_thread_js=function(){return(lt=d._emscripten_run_in_main_runtime_thread_js=d.asm.jb).apply(null,arguments)}),ct=d._emscripten_async_queue_on_thread_=function(){return(ct=d._emscripten_async_queue_on_thread_=d.asm.kb).apply(null,arguments)},dt=(d._emscripten_tls_init=function(){return(d._emscripten_tls_init=d.asm.lb).apply(null,arguments)},d.stackSave=function(){return(dt=d.stackSave=d.asm.mb).apply(null,arguments)}),mt=d.stackAlloc=function(){return(mt=d.stackAlloc=d.asm.nb).apply(null,arguments)},ht=d.stackRestore=function(){return(ht=d.stackRestore=d.asm.ob).apply(null,arguments)},ft=d.dynCall_vi=function(){return(ft=d.dynCall_vi=d.asm.pb).apply(null,arguments)};function yt(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function gt(e){function t(){Ze||(Ze=!0,d.calledRun=!0,C||(Z(te),b||Z(ne),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function(){if(!b){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)se(d.postRun.shift());Z(re)}}()))}ue>0||(function(){if(!b){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)ae(d.preRun.shift());Z(ee)}}(),ue>0||(d.setStatus?(d.setStatus("Running..."),setTimeout((function(){setTimeout((function(){d.setStatus("")}),1),t()}),1)):t()))}if(d.dynCall_v=function(){return(d.dynCall_v=d.asm.qb).apply(null,arguments)},d.dynCall_ii=function(){return(d.dynCall_ii=d.asm.rb).apply(null,arguments)},d.asm=Qe,d.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?B(e):function(){return P(e,t,n,arguments)}},d.PThread=Te,d.PThread=Te,d._pthread_self=Ke,d.wasmMemory=E,d.ExitStatus=yt,d.then=function(e){if(Ze)e(d);else{var t=d.onRuntimeInitialized;d.onRuntimeInitialized=function(){t&&t(),e(d)}}return d},pe=function e(){Ze||gt(),Ze||(pe=e)},d.run=gt,d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();return b||(T=!0),b||gt(),e});e.exports=r}));var Ws=zs((function(e,t){var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){var t,r=void 0!==(e=e||{})?e:{},a={};for(t in r)r.hasOwnProperty(t)&&(a[t]=r[t]);var i,u,p,l,c=function(e,t){throw t};i="object"==typeof window,u="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,l=!i&&!p&&!u;var d,m,h,f,y="";p?(y=u?s.default.dirname(y)+"/":__dirname+"/",d=function(e,t){return h||(h=o.default),f||(f=s.default),e=f.normalize(e),h.readFileSync(e,t?null:"utf8")},m=function(e){var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),k(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof re))throw e})),process.on("unhandledRejection",H),c=function(e){process.exit(e)},r.inspect=function(){return"[Emscripten Module object]"}):l?("undefined"!=typeof read&&(d=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(k("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs&&scriptArgs,"function"==typeof quit&&(c=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(i||u)&&(u?y=self.location.href:document.currentScript&&(y=document.currentScript.src),n&&(y=n),y=0!==y.indexOf("blob:")?y.substr(0,y.lastIndexOf("/")+1):"",d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},u&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}));var g,b,w,_=r.print||console.log.bind(console),v=r.printErr||console.warn.bind(console);for(t in a)a.hasOwnProperty(t)&&(r[t]=a[t]);a=null,r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,r.quit&&(c=r.quit),r.wasmBinary&&(g=r.wasmBinary),r.noExitRuntime&&(b=r.noExitRuntime),"object"!=typeof WebAssembly&&v("no native wasm support detected"),new WebAssembly.Table({initial:147,maximum:147,element:"anyfunc"});var x=!1;function k(e,t){e||H("Assertion failed: "+t)}function N(e){var t=r["_"+e];return k(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function I(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){(function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,o=0;o<e.length;++o){var i=e.charCodeAt(o);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),i<=127){if(n>=s)break;t[n++]=i}else if(i<=2047){if(n+1>=s)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=s)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=s)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0})(e,T,t,n)}(e,t=te(n),n)}return t},array:function(e){var t=te(e.length);return function(e,t){S.set(e,t)}(e,t),t}},o=N(e),i=[],u=0;if(r)for(var p=0;p<r.length;p++){var l=s[n[p]];l?(0===u&&(u=ee()),i[p]=l(r[p])):i[p]=r[p]}var c=o.apply(null,i);return c=function(e){return"string"===t?F(e):"boolean"===t?Boolean(e):e}(c),0!==u&&ne(u),c}var S,T,E,A="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function M(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&A)return A.decode(e.subarray(t,a));for(var s="";t<a;){var o=e[t++];if(128&o){var i=63&e[t++];if(192!=(224&o)){var u=63&e[t++];if((o=224==(240&o)?(15&o)<<12|i<<6|u:(7&o)<<18|i<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(o);else{var p=o-65536;s+=String.fromCharCode(55296|p>>10,56320|1023&p)}}else s+=String.fromCharCode((31&o)<<6|i)}else s+=String.fromCharCode(o)}return s}function F(e,t){return e?M(T,e,t):""}function O(e){r.HEAP8=S=new Int8Array(e),r.HEAP16=new Int16Array(e),r.HEAP32=E=new Int32Array(e),r.HEAPU8=T=new Uint8Array(e),r.HEAPU16=new Uint16Array(e),r.HEAPU32=new Uint32Array(e),r.HEAPF32=new Float32Array(e),r.HEAPF64=new Float64Array(e)}function D(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?r.dynCall_v(n):r.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(r)}}r.INITIAL_MEMORY;var C=[],R=[],B=[],P=[];function $(e){C.unshift(e)}function L(e){P.unshift(e)}var z=Math.ceil,V=Math.floor,W=0,j=null;function H(e){throw r.onAbort&&r.onAbort(e),_(e+=""),v(e),x=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function U(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}r.preloadedImages={},r.preloadedAudios={};function q(e){return U(e,"data:application/octet-stream;base64,")}function G(e){return U(e,"file://")}var K="tfjs-backend-wasm.wasm";function X(){try{if(g)return new Uint8Array(g);if(m)return m(K);throw"both async and sync fetching of the wasm failed"}catch(e){H(e)}}q(K)||(K=function(e){return r.locateFile?r.locateFile(e,y):y+e}(K)),R.push();var Y={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Y.buffers[e];0===t||10===t?((1===e?_:v)(M(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Y.varargs+=4,E[Y.varargs-4>>2]},getStr:function(e){return F(e)},get64:function(e,t){return e}};var J={emscripten_notify_memory_growth:function(e){O(w.buffer)},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var o=E[t+8*s>>2],i=E[t+(8*s+4)>>2],u=0;u<i;u++)Y.printChar(e,T[o+u]);a+=i}return E[r>>2]=a,0},proc_exit:function(e){!function(e){se(e)}(e)},roundf:function(e){return(e=+e)>=0?+V(e+.5):+z(e-.5)}},Q=function(){var e={env:J,wasi_snapshot_preview1:J};function t(e,t){var n=e.exports;r.asm=n,O((w=n.memory).buffer),function(e){if(W--,r.monitorRunDependencies&&r.monitorRunDependencies(W),0==W&&j){var t=j;j=null,t()}}()}function n(e){t(e.instance)}function a(t){return(g||!i&&!u||"function"!=typeof fetch||G(K)?new Promise((function(e,t){e(X())})):fetch(K,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+K+"'";return e.arrayBuffer()})).catch((function(){return X()}))).then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){v("failed to asynchronously prepare wasm: "+e),H(e)}))}if(W++,r.monitorRunDependencies&&r.monitorRunDependencies(W),r.instantiateWasm)try{return r.instantiateWasm(e,t)}catch(e){return v("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(g||"function"!=typeof WebAssembly.instantiateStreaming||q(K)||G(K)||"function"!=typeof fetch)return a(n);fetch(K,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),a(n)}))}))}(),{}}();r.asm=Q,r._init=function(){return(r._init=r.asm.init).apply(null,arguments)},r._register_tensor=function(){return(r._register_tensor=r.asm.register_tensor).apply(null,arguments)},r._dispose_data=function(){return(r._dispose_data=r.asm.dispose_data).apply(null,arguments)},r._dispose=function(){return(r._dispose=r.asm.dispose).apply(null,arguments)},r._Abs=function(){return(r._Abs=r.asm.Abs).apply(null,arguments)},r._Add=function(){return(r._Add=r.asm.Add).apply(null,arguments)},r._AddN=function(){return(r._AddN=r.asm.AddN).apply(null,arguments)},r._ArgMax=function(){return(r._ArgMax=r.asm.ArgMax).apply(null,arguments)},r._AvgPool=function(){return(r._AvgPool=r.asm.AvgPool).apply(null,arguments)},r._BatchMatMul=function(){return(r._BatchMatMul=r.asm.BatchMatMul).apply(null,arguments)},r._ClipByValue=function(){return(r._ClipByValue=r.asm.ClipByValue).apply(null,arguments)},r._Conv2D=function(){return(r._Conv2D=r.asm.Conv2D).apply(null,arguments)},r._Conv2DBackpropInput=function(){return(r._Conv2DBackpropInput=r.asm.Conv2DBackpropInput).apply(null,arguments)},r._Cos=function(){return(r._Cos=r.asm.Cos).apply(null,arguments)},r._CropAndResize=function(){return(r._CropAndResize=r.asm.CropAndResize).apply(null,arguments)},r._DepthwiseConv2dNative=function(){return(r._DepthwiseConv2dNative=r.asm.DepthwiseConv2dNative).apply(null,arguments)},r._Div=function(){return(r._Div=r.asm.Div).apply(null,arguments)},r._Equal=function(){return(r._Equal=r.asm.Equal).apply(null,arguments)},r._Exp=function(){return(r._Exp=r.asm.Exp).apply(null,arguments)},r._FlipLeftRight=function(){return(r._FlipLeftRight=r.asm.FlipLeftRight).apply(null,arguments)},r._FloorDiv=function(){return(r._FloorDiv=r.asm.FloorDiv).apply(null,arguments)},r._FusedBatchNorm=function(){return(r._FusedBatchNorm=r.asm.FusedBatchNorm).apply(null,arguments)},r._FusedConv2D=function(){return(r._FusedConv2D=r.asm.FusedConv2D).apply(null,arguments)},r._FusedDepthwiseConv2D=function(){return(r._FusedDepthwiseConv2D=r.asm.FusedDepthwiseConv2D).apply(null,arguments)},r._Gather=function(){return(r._Gather=r.asm.Gather).apply(null,arguments)},r._GatherNd=function(){return(r._GatherNd=r.asm.GatherNd).apply(null,arguments)},r._Greater=function(){return(r._Greater=r.asm.Greater).apply(null,arguments)},r._GreaterEqual=function(){return(r._GreaterEqual=r.asm.GreaterEqual).apply(null,arguments)},r._Less=function(){return(r._Less=r.asm.Less).apply(null,arguments)},r._LessEqual=function(){return(r._LessEqual=r.asm.LessEqual).apply(null,arguments)},r._Log=function(){return(r._Log=r.asm.Log).apply(null,arguments)},r._LogicalAnd=function(){return(r._LogicalAnd=r.asm.LogicalAnd).apply(null,arguments)},r._Max=function(){return(r._Max=r.asm.Max).apply(null,arguments)},r._MaxPool=function(){return(r._MaxPool=r.asm.MaxPool).apply(null,arguments)},r._Maximum=function(){return(r._Maximum=r.asm.Maximum).apply(null,arguments)},r._Min=function(){return(r._Min=r.asm.Min).apply(null,arguments)},r._Minimum=function(){return(r._Minimum=r.asm.Minimum).apply(null,arguments)},r._Multiply=function(){return(r._Multiply=r.asm.Multiply).apply(null,arguments)},r._Negate=function(){return(r._Negate=r.asm.Negate).apply(null,arguments)},r._NonMaxSuppressionV3=function(){return(r._NonMaxSuppressionV3=r.asm.NonMaxSuppressionV3).apply(null,arguments)},r._NonMaxSuppressionV4=function(){return(r._NonMaxSuppressionV4=r.asm.NonMaxSuppressionV4).apply(null,arguments)},r._NonMaxSuppressionV5=function(){return(r._NonMaxSuppressionV5=r.asm.NonMaxSuppressionV5).apply(null,arguments)},r._NotEqual=function(){return(r._NotEqual=r.asm.NotEqual).apply(null,arguments)},r._OneHot=function(){return(r._OneHot=r.asm.OneHot).apply(null,arguments)},r._PadV2=function(){return(r._PadV2=r.asm.PadV2).apply(null,arguments)},r._Pow=function(){return(r._Pow=r.asm.Pow).apply(null,arguments)},r._Prelu=function(){return(r._Prelu=r.asm.Prelu).apply(null,arguments)},r._Relu=function(){return(r._Relu=r.asm.Relu).apply(null,arguments)},r._Relu6=function(){return(r._Relu6=r.asm.Relu6).apply(null,arguments)},r._ResizeBilinear=function(){return(r._ResizeBilinear=r.asm.ResizeBilinear).apply(null,arguments)},r._Reverse=function(){return(r._Reverse=r.asm.Reverse).apply(null,arguments)},r._RotateWithOffset=function(){return(r._RotateWithOffset=r.asm.RotateWithOffset).apply(null,arguments)},r._Rsqrt=function(){return(r._Rsqrt=r.asm.Rsqrt).apply(null,arguments)},r._ScatterNd=function(){return(r._ScatterNd=r.asm.ScatterNd).apply(null,arguments)},r._SelectV2=function(){return(r._SelectV2=r.asm.SelectV2).apply(null,arguments)},r._Sigmoid=function(){return(r._Sigmoid=r.asm.Sigmoid).apply(null,arguments)},r._Sin=function(){return(r._Sin=r.asm.Sin).apply(null,arguments)},r._Softmax=function(){return(r._Softmax=r.asm.Softmax).apply(null,arguments)},r._Sqrt=function(){return(r._Sqrt=r.asm.Sqrt).apply(null,arguments)},r._Square=function(){return(r._Square=r.asm.Square).apply(null,arguments)},r._Sub=function(){return(r._Sub=r.asm.Sub).apply(null,arguments)},r._Sum=function(){return(r._Sum=r.asm.Sum).apply(null,arguments)},r._Tanh=function(){return(r._Tanh=r.asm.Tanh).apply(null,arguments)},r._Tile=function(){return(r._Tile=r.asm.Tile).apply(null,arguments)},r._Transpose=function(){return(r._Transpose=r.asm.Transpose).apply(null,arguments)},r.__FusedMatMul=function(){return(r.__FusedMatMul=r.asm._FusedMatMul).apply(null,arguments)},r._malloc=function(){return(r._malloc=r.asm.malloc).apply(null,arguments)},r._free=function(){return(r._free=r.asm.free).apply(null,arguments)},r.__start=function(){return(r.__start=r.asm._start).apply(null,arguments)};var Z,ee=r.stackSave=function(){return(ee=r.stackSave=r.asm.stackSave).apply(null,arguments)},te=r.stackAlloc=function(){return(te=r.stackAlloc=r.asm.stackAlloc).apply(null,arguments)},ne=r.stackRestore=function(){return(ne=r.stackRestore=r.asm.stackRestore).apply(null,arguments)};function re(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ae(e){function t(){Z||(Z=!0,r.calledRun=!0,x||(D(R),D(B),r.onRuntimeInitialized&&r.onRuntimeInitialized(),oe&&function(e){var t=r.__start;try{t(),se(0,!0)}catch(e){if(e instanceof re)return;if("unwind"==e)return void(b=!0);var n=e;e&&"object"==typeof e&&e.stack&&(n=[e,e.stack]),v("exception thrown: "+n),c(1,e)}}(),function(){if(r.postRun)for("function"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)L(r.postRun.shift());D(P)}()))}W>0||(function(){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)$(r.preRun.shift());D(C)}(),W>0||(r.setStatus?(r.setStatus("Running..."),setTimeout((function(){setTimeout((function(){r.setStatus("")}),1),t()}),1)):t()))}function se(e,t){t&&b&&0===e||(b||(x=!0,r.onExit&&r.onExit(e)),c(e,new re(e)))}if(r.asm=Q,r.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?N(e):function(){return I(e,t,n,arguments)}},r.then=function(e){if(Z)e(r);else{var t=r.onRuntimeInitialized;r.onRuntimeInitialized=function(){t&&t(),e(r)}}return r},j=function e(){Z||ae(),Z||(j=e)},r.run=ae,r.preInit)for("function"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();var oe=!0;return r.noInitialRun&&(oe=!1),b=!0,ae(),e});e.exports=r}));class js extends class{time(e){return Ln("time")}read(e){return Ln("read")}readSync(e){return Ln("readSync")}numDataIds(){return Ln("numDataIds")}disposeData(e){return Ln("disposeData")}write(e,t,n){return Ln("write")}move(e,t,n,r){return Ln("move")}memory(){return Ln("memory")}floatPrecision(){return Ln("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return Ln("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:a,activation:s,preluActivationWeights:o}){return Ln("fusedBatchMatMul")}slice(e,t,n){return Ln("slice")}stridedSlice(e,t,n,r){return Ln("stridedSlice")}unstack(e,t){return Ln("unstack")}reverse(e,t){return Ln("reverse")}concat(e,t){return Ln("concat")}neg(e){return Ln("neg")}add(e,t){return Ln("add")}addN(e){return Ln("addN")}subtract(e,t){return Ln("subtract")}multiply(e,t){return Ln("multiply")}realDivide(e,t){return Ln("realDivide")}floorDiv(e,t){return Ln("floorDiv")}sum(e,t){return Ln("sum")}prod(e,t){return Ln("prod")}unsortedSegmentSum(e,t,n){return Ln("unsortedSegmentSum")}argMin(e,t){return Ln("argMin")}argMax(e,t){return Ln("argMax")}equal(e,t){return Ln("equal")}notEqual(e,t){return Ln("notEqual")}less(e,t){return Ln("less")}lessEqual(e,t){return Ln("lessEqual")}greater(e,t){return Ln("greater")}greaterEqual(e,t){return Ln("greaterEqual")}logicalNot(e){return Ln("logicalNot")}logicalAnd(e,t){return Ln("logicalAnd")}logicalOr(e,t){return Ln("logicalOr")}where(e){return Ln("where")}select(e,t,n){return Ln("select")}topk(e,t,n){return Ln("topk")}min(e,t){return Ln("min")}minimum(e,t){return Ln("minimum")}mod(e,t){return Ln("mod")}max(e,t){return Ln("max")}maximum(e,t){return Ln("maximum")}all(e,t){return Ln("all")}any(e,t){return Ln("any")}squaredDifference(e,t){return Ln("squaredDifference")}ceil(e){return Ln("ceil")}floor(e){return Ln("floor")}round(e){return Ln("round")}sign(e){return Ln("sign")}isNaN(e){return Ln("isNaN")}isInf(e){return Ln("isInf")}isFinite(e){return Ln("isFinite")}pow(e,t){return Ln("pow")}exp(e){return Ln("exp")}expm1(e){return Ln("expm1")}softmax(e,t){return Ln("softmax")}log(e){return Ln("log")}log1p(e){return Ln("log1p")}sqrt(e){return Ln("sqrt")}rsqrt(e){return Ln("rsqrt")}square(e){return Ln("square")}reciprocal(e){return Ln("reciprocal")}relu(e){return Ln("relu")}relu6(e){return Ln("relu6")}prelu(e,t){return Ln("prelu")}elu(e){return Ln("elu")}eluDer(e,t){return Ln("eluDer")}selu(e){return Ln("selu")}int(e){return Ln("int")}clip(e,t,n){return Ln("clip")}abs(e){return Ln("abs")}complexAbs(e){return Ln("complexAbs")}sigmoid(e){return Ln("sigmoid")}softplus(e){return Ln("softplus")}sin(e){return Ln("sin")}cos(e){return Ln("cos")}tan(e){return Ln("tan")}asin(e){return Ln("asin")}acos(e){return Ln("acos")}atan(e){return Ln("atan")}atan2(e,t){return Ln("atan2")}sinh(e){return Ln("sinh")}cosh(e){return Ln("cosh")}tanh(e){return Ln("tanh")}asinh(e){return Ln("asinh")}acosh(e){return Ln("acosh")}atanh(e){return Ln("atanh")}erf(e){return Ln("erf")}step(e,t){return Ln("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return Ln("fusedConv2d")}conv2d(e,t,n){return Ln("conv2d")}conv2dDerInput(e,t,n){return Ln("conv2dDerInput")}conv2dDerFilter(e,t,n){return Ln("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return Ln("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return Ln("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return Ln("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return Ln("depthwiseConv2DDerFilter")}conv3d(e,t,n){return Ln("conv3d")}conv3dDerInput(e,t,n){return Ln("conv3dDerInput")}conv3dDerFilter(e,t,n){return Ln("conv3dDerFilter")}maxPool(e,t){return Ln("maxPool")}maxPoolBackprop(e,t,n,r){return Ln("maxPoolBackprop")}avgPool(e,t){return Ln("avgPool")}avgPoolBackprop(e,t,n){return Ln("avgPoolBackprop")}avgPool3d(e,t){return Ln("avgPool3d")}avgPool3dBackprop(e,t,n){return Ln("avgPool3dBackprop")}maxPool3d(e,t){return Ln("maxPool3d")}maxPool3dBackprop(e,t,n,r){return Ln("maxPool3dBackprop")}reshape(e,t){return Ln("reshape")}cast(e,t){return Ln("cast")}tile(e,t){return Ln("tile")}pad(e,t,n){return Ln("pad")}transpose(e,t){return Ln("transpose")}gather(e,t,n){return Ln("gather")}gatherND(e,t){return Ln("gatherND")}scatterND(e,t,n){return Ln("scatterND")}batchToSpaceND(e,t,n){return Ln("batchToSpaceND")}spaceToBatchND(e,t,n){return Ln("spaceToBatchND")}resizeBilinear(e,t,n,r){return Ln("resizeBilinear")}resizeBilinearBackprop(e,t,n){return Ln("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r){return Ln("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return Ln("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,a,s){return Ln("batchNorm")}localResponseNormalization4D(e,t,n,r,a){return Ln("localResponseNormalization4D")}LRNGrad(e,t,n,r,a,s,o){return Ln("LRNGrad")}multinomial(e,t,n,r){return Ln("multinomial")}oneHot(e,t,n,r){return Ln("oneHot")}cumsum(e,t,n,r){return Ln("cumsum")}nonMaxSuppression(e,t,n,r,a){return Ln("nonMaxSuppression")}fft(e){return Ln("fft")}ifft(e){return Ln("ifft")}complex(e,t){return Ln("complex")}real(e){return Ln("real")}imag(e){return Ln("imag")}cropAndResize(e,t,n,r,a,s){return Ln("cropAndResize")}depthToSpace(e,t,n){return Ln("depthToSpace")}split(e,t,n){return Ln("split")}sparseToDense(e,t,n,r){return Ln("sparseToDense")}diag(e){return Ln("diag")}fill(e,t,n){return Ln("fill")}onesLike(e){return Ln("onesLike")}zerosLike(e){return Ln("zerosLike")}linspace(e,t,n){return Ln("linspace")}dispose(){return Ln("dispose")}}{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new $n(this,me)}write(e,t,n){const r={};return this.move(r,e,t,n),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=V();return e(),{kernelMs:V()-t}}move(e,t,n,r){const a=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:a,stringBytes:s,shape:n,dtype:r,memoryOffset:null})}const s=T(n),o=s*D(r),i=this.wasm._malloc(o);this.dataIdMap.set(e,{id:a,memoryOffset:i,shape:n,dtype:r}),this.wasm.tfjs.registerTensor(a,s,i),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),i)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype "+t)}}(this.wasm.HEAPU8.slice(t,t+T(r)*D(n)).buffer,n)}disposeData(e){const t=this.dataIdMap.get(e);this.wasm._free(t.memoryOffset),this.wasm.tfjs.disposeData(t.id),this.dataIdMap.delete(e)}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{r={};const a=this.dataIdNextNumber++;this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t});const s=T(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=T(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error("Uknown dtype "+t)}}}function Hs(e,t,n){if(null!=Js)return Js;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Qs&&null!=Qs[r]?Qs[r]:n+r}!function(e,t,n=1){me.registerBackend(e,t,n)}("wasm",async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([l().getAsync("WASM_HAS_SIMD_SUPPORT"),l().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{const a={};let s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?Hs(e,t,r):r+n},eo&&(a.instantiateWasm=function(e){return(t,n)=>{return(r=e,a={credentials:"same-origin"},l().platform.fetch(r,a)).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(e=>{WebAssembly.instantiate(e,t).then(e=>{n(e.instance)})})}),{};var r,a}}(Hs(e,t,""))),t&&e&&null==Js?(s=Vs(a),s.mainScriptUrlOrBlob=new Blob(["var _scriptDir = undefined; var WasmBackendModuleThreadedSimd = "+Vs.toString()],{type:"text/javascript"})):s=Ws(a),s.tfjs={init:s.cwrap("init",null,[]),registerTensor:s.cwrap("register_tensor",null,["number","number","number"]),disposeData:s.cwrap("dispose_data",null,["number"]),dispose:s.cwrap("dispose",null,[])};let o=!1;s.onRuntimeInitialized=()=>{o=!0,Zs=!1,n({wasm:s})},s.onAbort=()=>{o||Zs||(Zs=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))}})}();return new js(e)},2);let Us,qs,Gs,Ks,Xs,Ys,Js=null,Qs={},Zs=!1,eo=!1;async function to(e){const t=await Ea(),n=await t.estimateFaces(document.querySelector("img"),!1);if(n.length>0)for(let e=0;e<n.length;e++){const t=n[e].topLeft,r=n[e].bottomRight,a=[r[0]-t[0],r[1]-t[1]];qs.fillRect(t[0],t[1],a[0],a[1])}}!function(e,t=!1){if(n="setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release.",l().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings()."),Zs)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");var n;Js=e,eo=t}("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@latest/dist/tfjs-backend-wasm.wasm"),Xs=document.getElementById("input_image");const no=async()=>{var e;await(e="wasm",me.setBackend(e)),Gs=Xs.width,Ks=Xs.height,Ys=document.getElementById("output"),Ys.width=Gs,Ys.height=Ks,qs=Ys.getContext("2d"),qs.fillStyle="rgba(255, 0, 0, 0.5)",Us=await Ea()};var ro;window.PROFILE_MODE?(console.log("profile mode"),l().set("DEBUG",!0),(ro=async()=>{await no(),await to()},me.profile(ro)).then(e=>{const t=e.kernels.map(e=>e.name),n=Array.from(new Set(t));console.log(n)})):(console.log("go"),no(),to())}));
//# sourceMappingURL=demo.js.map
