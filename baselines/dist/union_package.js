!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(require("crypto"),require("path"),require("fs")):"function"==typeof define&&define.amd?define(["crypto","path","fs"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).crypto,t.Cn,t.Rn)}(this,(function(t,e,n){"use strict";function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var s=r(t),a=r(e),i=r(n);class o{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}}function l(){return c}let u,c=null;function h(){if(null==u){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof global)t=global;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}u=t}return u}function d(t,e){const n=function(){const t=h();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const p=d("kernelRegistry",()=>new Map),f=d("gradRegistry",()=>new Map);function m(t,e){const n=w(t,e);return p.get(n)}function g(t){return f.get(t)}function b(t){const e=p.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===t&&n.push(i)}return n}function y(t){const{kernelName:e,backendName:n}=t,r=w(e,n);p.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),p.set(r,t)}function x(t){const{kernelName:e}=t;f.has(e)&&l().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),f.set(e,t)}function w(t,e){return`${e}_${t}`}function v(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function k(t,e,n){return Math.max(t,Math.min(e,n))}function I(t){return t%2==0?t:t+1}function C(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function S(t,e,n=""){C(R(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function E(t){C(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function A(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||z(t)&&!n)for(let r=0;r<t.length;++r)A(t[r],e,n);else e.push(t);return e}function N(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function R(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function $(t){return t%1==0}function T(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function _(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function D(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function F(t,e=(t=>0),n){return new Promise((r,s)=>{let a=0;const i=()=>{if(t())return void r();a++;const o=e(a);null!=n&&a>=n?s():setTimeout(i,o)};i()})}function M(t,e){const n=e.length;return C((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),C(t.every(t=>$(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function O(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:M(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function L(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function B(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function z(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function P(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function W(t){return"string"==typeof t||t instanceof String}function U(t){return"number"==typeof t}function V(t){return Array.isArray(t)?V(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":U(t)?"float32":W(t)?"string":"boolean"==typeof t?"bool":"float32"}function G(t){return!!(t&&t.constructor&&t.call&&t.apply)}function H(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function q(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function j(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=A(t)),l().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function K(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return function t(e,n,r){const s=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)s[n]=r[e+n]}else{const a=n[0],i=n.slice(1),o=i.reduce((t,e)=>t*e);for(let n=0;n<a;n++)s[n]=t(e+n*o,i,r)}return s}(0,t,e)}function X(t,e){const n=Y(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function Y(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function J(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return K(t,new Float32Array(n));if("int32"===e)return K(t,new Int32Array(n));if("bool"===e)return K(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function Z(){return l().platform.now()}function Q(t){t.forEach(e=>{C(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function tt(t,e="utf-8"){return e=e||"utf-8",l().platform.decode(t,e)}function et(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function nt(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}class rt{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new st)}profileKernel(t,e,n){let r;const s=this.backendTimer.time(()=>{r=n()});r.map(e=>{e.data().then(n=>{!function(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}}(n,e.dtype,t)})});return{kernelName:t,outputs:r,inputs:e,timeMs:s.then(t=>t.kernelMs),extraInfo:s.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:a}=t;n.forEach(t=>{Promise.all([t.data(),r,a]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])})})}}class st{logKernelProfile(t,e,n,r,s,a){const i="number"==typeof r?D(r+"ms",9):r.error,o=D(t,25),l=e.rank,u=e.size,c=D(e.shape.toString(),14);let h="";for(const t in s){const n=s[t].shape||e.shape,r=n.length;h+=`${t}: ${r}D ${r>0?n:""} `}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function at(t,e,n,r){const s=q(e),a=function(t,e,n,r){const s=N(e),a=r[r.length-1],i=new Array(a).fill(0),o=e.length,l="complex64"===n?lt(t):t;if(o>1)for(let t=0;t<s/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],it(l[e+t],0,n).length)}return i}(t,e,n,s),i=e.length,o=function t(e,n,r,s,a,i=!0){const o="complex64"===r?2:1,l=n[0],u=n.length;if(0===u){if("complex64"===r){return[it(lt(e)[0],0,r)]}return"bool"===r?[ot(e[0])]:[e[0].toString()]}if(1===u){if(l>20){const t=3*o;let n=Array.from(e.slice(0,t)),s=Array.from(e.slice((l-3)*o,l*o));return"complex64"===r&&(n=lt(n),s=lt(s)),["["+n.map((t,e)=>it(t,a[e],r)).join(", ")+", ..., "+s.map((t,e)=>it(t,a[l-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?lt(e):Array.from(e)).map((t,e)=>it(t,a[e],r)).join(", ")+"]"]}const c=n.slice(1),h=s.slice(1),d=s[0]*o,p=[];if(l>20){for(let n=0;n<3;n++){const s=n*d,i=s+d;p.push(...t(e.slice(s,i),c,r,h,a,!1))}p.push("...");for(let n=l-3;n<l;n++){const s=n*d,i=s+d;p.push(...t(e.slice(s,i),c,r,h,a,n===l-1))}}else for(let n=0;n<l;n++){const s=n*d,i=s+d;p.push(...t(e.slice(s,i),c,r,h,a,n===l-1))}const f=2===u?",":"";p[0]="["+p[0]+f;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+f;let m=",\n";for(let t=2;t<u;t++)m+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(i?"":m),p}(t,e,n,s,a),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+i),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(t=>"    "+t).join("\n")),l.join("\n")}function it(t,e,n){let r;return r=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":W(t)?`'${t}'`:"bool"===n?ot(t):parseFloat(t.toFixed(7)).toString(),D(r,e)}function ot(t){return 0===t?"false":"true"}function lt(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class ut{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=N(t),null!=n){const t=n.length;C(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||B(e,this.size),this.strides=q(t)}set(t,...e){0===e.length&&(e=[0]),C(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return ct().makeTensor(this.values,this.shape,this.dtype)}}let ct=null,ht=null;class dt{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=N(t),this.strides=q(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return ht.buffer(this.shape,this.dtype,t)}bufferSync(){return ht.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return K(this.shape,t)}arraySync(){return K(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=ct().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map(t=>tt(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=ct().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>tt(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await ct().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(ct().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return ht.print(this,t)}clone(){return this.throwIfDisposed(),ht.clone(this)}toString(t=!1){return at(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),ht.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),ct().makeVariable(this,t,e,n)}}Object.defineProperty(dt,Symbol.hasInstance,{value:t=>!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype});class pt extends dt{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!R(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);ct().disposeTensor(this),this.dataId=t.dataId,ct().incRef(this,null)}dispose(){ct().disposeVariable(this),this.isDisposedInternal=!0}}var ft,mt,gt,bt,yt;Object.defineProperty(pt,Symbol.hasInstance,{value:t=>t instanceof dt&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(ft||(ft={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(mt||(mt={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(gt||(gt={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(bt||(bt={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(yt||(yt={}));const xt={float32:bt,int32:mt,bool:gt,complex64:yt};function wt(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return xt[t][e]}function vt(t){return wt(t,"int32")}function kt(t,e){if(t.dtype===e.dtype)return[t,e];const n=wt(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function It(t){const e=[];return function t(e,n,r){if(null==e)return;if(e instanceof dt)return void n.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const a=e;for(const e in a){const s=a[e];r.has(s)||(r.add(s),t(s,n,r))}}(t,e,new Set),e}class Ct{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class St{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ct}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new rt(this.backendInstance),!0}setupRegisteredKernels(){b(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){b(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return St.nextTensorId++}nextVariableId(){return St.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>t.toFloat()}),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach(t=>{s+="complex64"===t.dtype?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,a,i){let o,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=m(r,this.backendName);let f;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map(({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n));if(u){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==i&&(i=[]);const e=o.filter((t,e)=>i[e]);t=(a||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{u&&(l=t.map(t=>this.keep(this.clone(t))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy(()=>t(this.backend,e));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{if(this.ENV.getBool("DEBUG")){let t;t=this.profiler.profileKernel(r,e,()=>d()),this.profiler.logKernelProfile(t),o=t.outputs}else o=d()}),u&&this.addTapeNode(r,e,o,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:o.map(t=>t.shape)}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=g(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(C(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(t=>e[t])):a=t.map(t=>e[t]);const i=n.filter((t,e)=>s[e]);return a.concat(i)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&W(t[0])&&(s=t.map(t=>function(t,e="utf-8"){return e=e||"utf-8",l().platform.encode(t,e)}(t)));const a=r.write(s,e,n),i=new dt(e,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const t=this.state.tensorInfo.get(a),e=function(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){const s=new dt(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new pt(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*P(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof pt||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;return this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n,this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=g(t);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=Y(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=It(t),n=new Set(e.map(t=>t.id));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(C(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));C(s instanceof dt,()=>"The result y returned by f() must be a tensor.");const a=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){a.outputs.forEach(t=>r[t.id]=!0),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in r)a[r[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[s.id]=null==n?function(t){const e=X(N(t),"float32");return Et.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n){for(let r=e.length-1;r>=0;r--){const s=e[r],a=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(a);for(const e in s.inputs){if(!(e in i))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(i)}.`);const r=n(()=>i[e]());if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const a=s.inputs[e];if(!R(r.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=r;else{const e=t[a.id];t[a.id]=e.add(r),e.dispose()}}}}(t,a,t=>this.tidy(t));const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(t){return C(G(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;C(e.every(t=>t instanceof dt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc((r,s)=>(n=t(...e,s),C(n.value instanceof dt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),C(G(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];C(a.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),C(a.every(t=>t instanceof dt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return a.forEach((t,e)=>{i[e]=()=>t}),i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Z(),n=await this.backend.time(t);return n.wallMs=Z()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ct;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}St.nextTensorId=0,St.nextVariableId=0;const Et=function(){const t=h();if(null==t._tfengine){const e=new o(t);t._tfengine=new St(e)}var e;return e=t._tfengine.ENV,c=e,ct=()=>t._tfengine,t._tfengine}();function At(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Nt(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Rt=l();Rt.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Rt.registerFlag("IS_BROWSER",()=>Nt()),Rt.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Rt.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Rt.registerFlag("PROD",()=>!1),Rt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Rt.getBool("DEBUG")),Rt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Rt.registerFlag("IS_TEST",()=>!1);const $t="Max";function Tt(t,e){let n=t;if(z(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||z(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&l().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!z(e))return void C(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);C(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),C(e.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${e.length} elements`);const s=n.slice(1);for(let n=0;n<e.length;++n)t(e[n],s,r.concat(n))}(t,r,[]),r}function _t(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function Dt(t,e,n,r="numeric"){if(t instanceof dt)return _t(r,t.dtype,e,n),t;let s=V(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),_t(r,s,e,n),null==t||!z(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Tt(t,s);z(t)||Array.isArray(t)||(t=[t]);const i="string"!==s?j(t,s):A(t,[],!0);return Et.makeTensor(i,a,s)}function Ft(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,r)=>Dt(t,`${e}[${r}]`,n),r)}function Mt(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const s=(...t)=>{Et.startScope(n);try{const e=r(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Et.endScope(e),e}catch(t){throw Et.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Ot=Mt({cast_:function(t,e){const n=Dt(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return Et.runKernelFunc(t=>t.cast(n,e),r,null,"Cast",s)}});const Lt=Mt({mul_:function(t,e){let n=Dt(t,"a","mul"),r=Dt(e,"b","mul");[n,r]=kt(n,r);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s},s,null,"Multiply")}});const Bt=Mt({step_:function(t,e=0){const n=Dt(t,"x","step"),r={x:n},s={alpha:e};return Et.runKernelFunc(t=>t.step(n,e),r,null,"Step",s)}}),zt={kernelName:"Abs",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(t,Bt(Ot(n,"float32"),-1))}}};const Pt=Mt({floorDiv_:function(t,e){let n=Dt(t,"a","floorDiv"),r=Dt(e,"b","floorDiv");[n,r]=kt(n,r);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s},s,null,"FloorDiv")}});const Wt=Mt({div_:function(t,e){let n=Dt(t,"a","div"),r=Dt(e,"b","div");if([n,r]=kt(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Pt(n,r);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s},s,null,"Div",{})}});const Ut=Mt({neg_:function(t){const e=Dt(t,"x","neg"),n={x:e};return Et.runKernelFunc(t=>t.neg(e),n,null,"Negate")}});function Vt(t,e,n,r){if(null==r&&(r=V(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!z(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Q(e);const t=N(e),r=N(n);C(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==N(e.slice(t));C(n[t]===e[t]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return z(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?j(t,r):A(t,[],!0),Et.makeTensor(t,e,r)}function Gt(t,e){if((z(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&z(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Vt(t,[],[],e)}const Ht=Mt({sqrt_:function(t){const e=Dt(t,"x","sqrt"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.sqrt(e);return n([e]),r},n,null,"Sqrt")}});const qt=Mt({square_:function(t){const e=Dt(t,"x","square"),n=[e];return Et.runKernelFunc((t,n)=>(n([e]),t.square(e)),{x:e},null,"Square",{},n,[])}});const jt=Mt({sub_:function(t,e){let n=Dt(t,"a","sub"),r=Dt(e,"b","sub");[n,r]=kt(n,r);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s},s,null,"Sub")}}),Kt={kernelName:"Acos",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=qt(Ot(n,"float32")),r=Ht(jt(Gt(1),e));return Ut(Wt(t,r))}}}},Xt={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ht(jt(qt(Ot(n,"float32")),1));return Wt(t,e)}}}};function Yt(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=t[a]||1;(e[e.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Jt(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Zt(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}const Qt={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Zt(n.shape,r.shape);return{a:()=>{let e=t;const r=Jt(n.shape,s);return r.length>0&&(e=e.sum(r)),e.reshape(n.shape)},b:()=>{let e=t;const n=Jt(r.shape,s);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)}}}},te={kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}};const ee=Mt({zerosLike_:function(t){const e=Dt(t,"x","zerosLike"),n={x:e};return Et.runKernelFunc(t=>t.zerosLike(e),n,null,"ZerosLike")}}),ne={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ee(n)}}},re={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ee(n)}}},se={kernelName:"Asin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wt(t,Ht(jt(Gt(1),qt(Ot(n,"float32")))))}}};const ae=Mt({add_:function(t,e){let n=Dt(t,"a","add"),r=Dt(e,"b","add");[n,r]=kt(n,r);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.add(n,r);return e([n,r]),s},s,null,"Add")}}),ie={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ht(ae(Gt(1),qt(Ot(n,"float32"))));return Wt(t,e)}}}};const oe=Mt({reshape_:function(t,e){const n=Dt(t,"x","reshape",null);e=function(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}(e,n.size),C(n.size===N(e),()=>"new shape and old shape must have the same number of elements.");const r={x:n},s={shape:e};return Et.runKernelFunc((t,r)=>(r([n]),t.reshape(n,e)),r,null,"Reshape",s)}});function le(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function ue(t,e,n){const r=t.length+e.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[a++]):s.push(e[i++]);return s}function ce(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map(e=>t[e])]}function he(t,e){return ue(t,e.map(t=>1),e)}function de(t,e,n){C(le(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function pe(t,e){if(le(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function fe(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function me(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const ge=Mt({sum_:function(t,e=null,n=!1){let r=Dt(t,"x","sum");"bool"===r.dtype&&(r=r.toInt());const s={x:r},a={axis:e,keepDims:n};return Et.runKernelFunc((t,s)=>{s([r]);const a=M(e,r.shape),i=pe(a,r.rank);let o=a,l=r;null!=i&&(l=r.transpose(i),o=me(o.length,r.rank));let u=t.sum(l,o);if(n){const t=he(u.shape,a);u=u.reshape(t)}return u},s,null,"Sum",a)}}),be={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Zt(n.shape,r.shape);return{a:()=>{const e=ae(qt(n),qt(r));let a=Lt(t,Wt(r,e));const i=Jt(n.shape,s);return i.length>0&&(a=ge(a,i)),oe(a,n.shape)},b:()=>{const e=ae(qt(n),qt(r));let a=Ut(Lt(t,Wt(n,e)));const i=Jt(r.shape,s);return i.length>0&&(a=ge(a,i)),oe(a,r.shape)}}}},ye={kernelName:"Atan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wt(t,ae(qt(Ot(n,"float32")),1))}}},xe={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wt(t,jt(Gt(1),qt(Ot(n,"float32"))))}}};function we(t,e,n,r,s="NHWC",a){return Ie(t,[...e,t[3]],n,a,r,null,null,_e(s))}function ve(t,e,n,r,s,a,i="channelsLast"){const[o,l]=Ee(e);let u;if("channelsLast"===i)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);u=[o,l,t[1],t[1]]}return Ie(t,u,n,r,s,a,!1,i)}function ke(t,e,n,r,s,a,i="NDHWC"){const[o,l,u]=Ae(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return Ce(t,c,n,r,s,!1,h,a)}function Ie(t,e,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,h,u,c]=t}const[d,p,,f]=e,[m,g]=Ee(n),[b,y]=Ee(r),x=Ne(d,b),w=Ne(p,y),{padInfo:v,outHeight:k,outWidth:I}=function(t,e,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=Se(t,e,n));const a=t[0],i=t[1],o=Re((a-e+2*r)/n+1,s);C($(o),()=>`The output # of rows (${o}) must be an integer. Change the stride and/or zero pad parameters`);const l=Re((i-e+2*r)/n+1,s);return C($(l),()=>`The output # of columns (${l}) must be an integer. Change the stride and/or zero pad parameters`),[o,l]}([e,n],a,r,t,o);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+a-e),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Re((e-a+d+p)/r+1,o),h=Re((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,w,a,o),S=i?f*h:f;let E;return"channelsFirst"===o?E=[l,S,k,I]:"channelsLast"===o&&(E=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:y,inShape:t,outShape:E,filterShape:e}}function Ce(t,e,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,d,u,c,h]=t}const[p,f,m,,g]=e,[b,y,x]=Ae(n),[w,v,k]=Ae(r),I=Ne(p,w),S=Ne(f,v),E=Ne(m,k),{padInfo:A,outDepth:N,outHeight:R,outWidth:T}=function(t,e,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,s,a){null==s&&(s=Se(t,e,r));const i=t[0],o=t[1],l=t[2],u=Re((i-e+2*s)/r+1,a);C($(u),()=>`The output # of depths (${u}) must be an integer. Change the stride and/or zero pad parameters`);const c=Re((o-e+2*s)/r+1,a);C($(c),()=>`The output # of rows (${c}) must be an integer. Change the stride and/or zero pad parameters`);const h=Re((l-e+2*s)/r+1,a);return C($(h),()=>`The output # of columns (${h}) must be an integer. Change the stride and/or zero pad parameters`),[u,c,h,n]}([e,n,r,1],o,1,s,t,c);d=a[0],p=a[1],f=a[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const t=(d-1)*s+o-e,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(t/2),b=t-g,y=Math.floor(c/2),x=c-y,w=Math.floor(m/2);h={top:y,bottom:x,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,I,S,E,o),_=a?g*d:g;let D;return"channelsFirst"===i?D=[l,_,N,R,T]:"channelsLast"===i&&(D=[l,N,R,T,_]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:R,outWidth:T,outChannels:_,padInfo:A,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:E,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:D,filterShape:e}}function Se(t,e,n,r=1){const s=Ne(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function Ee(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Ae(t){return"number"==typeof t?[t,t,t]:t}function Ne(t,e){return e<=1?t:t+(t-1)*(e-1)}function Re(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function $e(t){const[e,n,r]=Ee(t);return 1===e&&1===n&&1===r}function Te(t,e){return $e(t)||$e(e)}function _e(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}const De=Mt({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],a,i){const o=Dt(t,"dy","avgPool3dBackprop"),l=Dt(e,"input","avgPool3dBackprop");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=oe(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=oe(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),C(5===u.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+u.rank+"."),C(5===c.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."),C(Te(r,s),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),null!=i&&C($(a),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const d={dy:u,input:c},p={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},f=Et.runKernelFunc(t=>{const e=ke(c.shape,n,r,s,a,i);return t.avgPool3dBackprop(u,c,e)},d,null,"AvgPool3DBackprop",p);return h?oe(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Fe={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:l}=n,u=null==i?[1,1,1]:i;return{x:()=>De(t,r,s,a,u,o,l)}}};const Me=Mt({avgPoolBackprop_:function(t,e,n,r,s){const a=Dt(t,"dy","avgPoolBackprop"),i=Dt(e,"input","avgPoolBackprop");C(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=oe(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=oe(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(4===l.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."),C(4===o.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+".");const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Et.runKernelFunc(t=>{const e=ve(o.shape,n,r,1,s);return t.avgPoolBackprop(l,o,e)},c,null,"AvgPoolBackprop",h);return u?oe(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Oe={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Me(t,r,s,a,i)}}};const Le=Mt({matMul_:function(t,e,n=!1,r=!1){let s=Dt(t,"a","matMul"),a=Dt(e,"b","matMul");[s,a]=kt(s,a),C(s.rank>=2&&a.rank>=2&&s.rank===a.rank,()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${s.rank} and ${a.rank}.`);const i=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?a.shape[a.rank-1]:a.shape[a.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],u=r?a.shape[a.rank-2]:a.shape[a.rank-1],c=s.shape.slice(0,-2),h=a.shape.slice(0,-2),d=N(c),p=N(h);C(R(c,h),()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${s.shape} and `+a.shape+" must match."),C(i===o,()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`);const f=s.shape.slice(0,-2).concat([l,u]),m=oe(s,n?[d,i,l]:[d,l,i]),g=oe(a,r?[p,u,o]:[p,o,u]),b={a:m,b:g},y={transposeA:n,transposeB:r},x=Et.runKernelFunc((t,e)=>(e([m,g]),t.batchMatMul(m,g,n,r)),b,null,"BatchMatMul",y);return oe(x,f)}}),Be={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Le(t,s,!1,!1),b:()=>Le(t,r,!0,!1)}:a&&!i?{a:()=>Le(s,t,!1,!0),b:()=>Le(r,t,!1,!1)}:{a:()=>Le(s,t,!0,!0),b:()=>Le(t,r,!0,!0)}:{a:()=>Le(t,s,!1,!0),b:()=>Le(r,t,!0,!1)}}};const ze=Mt({spaceToBatchND_:function(t,e,n){const r=Dt(t,"x","spaceToBatchND");C(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),C(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),C(r.shape.reduce((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},a={blockShape:e,paddings:n};return Et.runKernelFunc(t=>t.spaceToBatchND(r,e,n),s,null,"SpaceToBatchND",a)}}),Pe={kernelName:"BatchToSpaceND",gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ze(t,r,s)}}},We={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let t=s.length-1;t>=0;t--)if(s[t]===a[t])i[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>ge(t,o,!0)}}},Ue={kernelName:"Cast",gradFunc:t=>({x:()=>t.clone()})},Ve={kernelName:"Ceil",gradFunc:t=>({x:()=>ee(t)})};const Ge=Mt({greaterEqual_:function(t,e){let n=Dt(t,"a","greaterEqual"),r=Dt(e,"b","greaterEqual");[n,r]=kt(n,r),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s},s,null,"GreaterEqual")}});const He=Mt({lessEqual_:function(t,e){let n=Dt(t,"a","lessEqual"),r=Dt(e,"b","lessEqual");[n,r]=kt(n,r),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s},s,null,"LessEqual")}});const qe=Mt({logicalAnd_:function(t,e){const n=Dt(t,"a","logicalAnd","bool"),r=Dt(e,"b","logicalAnd","bool");Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc(t=>t.logicalAnd(n,r),s,null,"LogicalAnd")}});const je=Mt({where_:function(t,e,n){const r=Dt(e,"a","where"),s=Dt(n,"b","where"),a=Dt(t,"condition","where","bool"),i=Zt(r.shape,s.shape),o=r.broadcastTo(i),l=s.broadcastTo(i);1===a.rank&&C(a.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==a.rank&&S(a.shape,l.shape,"Error in where: ");const u={condition:a,t:o,e:l};return Et.runKernelFunc((t,e)=>{const n=t.select(a,o,l);return e([a]),n},u,null,"SelectV2")}}),Ke={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>je(qe(Ge(r,s),He(r,a)),t,ee(t))}}};function Xe(t,e,n=0){let r=[];if("number"==typeof e)C(t.shape[n]%e==0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{C(e.reduce((t,e)=>(-1===e&&(t+=1),t),0)<=1,()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(-1!==s){const r=e.reduce((t,e)=>e>0?t+e:t);e[s]=t.shape[n]-r}C(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}const Ye=Mt({split_:function(t,e,n=0){const r=Dt(t,"x","split"),s={x:r},a={numOrSizeSplits:e,axis:n};return Et.runKernelFunc((t,s)=>{const a=M(n,r.shape)[0],i=Xe(r,e,a);return t.split(r,i,a)},s,null,"SplitV",a)}}),Je={kernelName:"Concat",saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:s}=n,a=M(s,e[0].shape)[0],i=r.map(t=>t[a]);return Ye(t,i,a).map(t=>()=>t)}};const Ze=Mt({conv2DBackpropFilter_:function(t,e,n,r,s,a="NHWC",i){let o=t;3===t.rank&&(o=oe(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=oe(e,[1,e.shape[0],e.shape[1],e.shape[2]])),C(4===o.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."),C(4===l.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+l.shape+"."),C(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];C(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),C(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=i&&C($(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i};return Et.runKernelFunc(t=>{const e=_e(a),u=Ie(o.shape,n,r,1,s,i,!1,e);return t.conv2dDerFilter(o,l,u)},h,null,"Conv2DBackpropFilter",d)}});const Qe=Mt({conv2DBackpropInput_:function(t,e,n,r,s,a="NHWC",i){C(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=oe(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),C(4===o.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."),C(4===l.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+l.rank),C(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];C(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),C(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=i&&C($(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Et.runKernelFunc((t,e)=>{const u=_e(a),c=Ie(o,n.shape,r,1,s,i,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h},d,null,"Conv2DBackpropInput",p);return u?oe(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),tn={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return C($e(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Qe(r.shape,t,s,i,o,l),filter:()=>Ze(r,t,s.shape,i,o,l)}}};const en=Mt({conv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=Dt(t,"x","conv2d"),l=Dt(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=oe(o,[1,o.shape[0],o.shape[1],o.shape[2]])),C(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),C(4===l.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+l.rank+"."),null!=i&&C($(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h="NHWC"===s?u.shape[3]:u.shape[1];C(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),C(Te(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Et.runKernelFunc((t,e)=>{const o=_e(s),c=Ie(u.shape,l.shape,n,a,r,i,!1,o),h=t.conv2d(u,l,c);return e([u,l]),h},d,null,"Conv2D",p);return c?oe(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),nn={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>en(t,s,a,i,o,1,l),filter:()=>Ze(t,r,s.shape,a,i,o,l)}}};const rn=Mt({conv3DBackpropFilter_:function(t,e,n,r,s){let a=t;4===t.rank&&(a=oe(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=oe(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),C(5===a.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+"."),C(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),C(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),C(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),C(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:a,y:i},l={strides:r,pad:s};return Et.runKernelFunc(t=>{const e=Ce(a.shape,n,r,1,s);return t.conv3dDerFilter(a,i,e)},o,null,"Conv3DBackpropFilterV2",l)}});const sn=Mt({conv3DBackpropInput_:function(t,e,n,r,s){C(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=oe(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const l=a[4],u=i.shape[4];C(5===a.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."),C(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),C(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),C(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),C(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i},h={pad:s},d=Et.runKernelFunc(t=>{const e=Ce(a,n.shape,r,1,s);return t.conv3dDerInput(i,n,e)},c,null,"Conv3DBackpropInputV2",h);return o?oe(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),an={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a}=n;C($e(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=e;return{x:()=>sn(i.shape,t,o,s,a),filter:()=>rn(i,t,o.shape,s,a)}}};const on=Mt({sin_:function(t){const e=Dt(t,"x","sin"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.sin(e);return n([e]),r},n,null,"Sin")}}),ln={kernelName:"Cos",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(Ut(on(Ot(n,"float32"))),t)}}};const un=Mt({sinh_:function(t){const e=Dt(t,"x","sinh"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.sinh(e);return n([e]),r},n,null,"Sinh")}}),cn={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(un(Ot(n,"float32")),t)}}};const hn=Mt({transpose_:function(t,e){const n=Dt(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),C(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{C(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return Et.runKernelFunc(t=>t.transpose(n,e),r,null,"Transpose",s)}});const dn=Mt({cumsum_:function(t,e=0,n=!1,r=!1){const s=Dt(t,"x","cumsum"),a={x:s},i={axis:e,exclusive:n,reverse:r};return Et.runKernelFunc((t,a)=>{const i=pe([e],s.rank);let o=s;null!=i&&(o=hn(s,i));const l=me(1,s.rank)[0];let u=t.cumsum(o,l,n,r);if(a([s]),null!=i){const t=fe(i);u=hn(u,t)}return u},a,null,"Cumsum",i)}}),pn={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const e=pe([s],r.rank);let n=dn(t,s,a,!i);return null!=e&&(n=hn(n,e)),n}}}};const fn=Mt({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r){let s=t;3===t.rank&&(s=oe(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let a=e;3===a.rank&&(a=oe(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const i={x:s,dy:a};return Et.runKernelFunc(t=>t.depthwiseConv2DDerFilter(s,a,r),i,null,"DepthwiseConv2dNativeBackpropFilter")}});const mn=Mt({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r){let s=e,a=!1;3===e.rank&&(a=!0,s=oe(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const i={dy:s},o=Et.runKernelFunc(t=>t.depthwiseConv2DDerInput(s,n,r),i,null,"DepthwiseConv2dNativeBackpropInput");return a?oe(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),gn={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;C($e(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;C(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),C(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),C(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),C(Te(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),null!=i&&C($(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const c=Ie(l.shape,u.shape,s,o,a,i,!0);return{x:()=>mn(l.shape,t,u,c),filter:()=>fn(l,t,u.shape,c)}}},bn={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,a={x:r,filter:s,dy:t},i={x:r,filter:s,dy:t};return{x:()=>Et.runKernel("Dilation2DBackpropInput",a,n),filter:()=>Et.runKernel("Dilation2DBackpropFilter",i,n)}}},yn={kernelName:"Div",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Zt(n.shape,r.shape);return{a:()=>{const e=Wt(t,r.toFloat()),a=Jt(n.shape,s);return a.length>0?ge(e,a).reshape(n.shape):e},b:()=>{let e=Lt(t,n.toFloat());const a=Jt(r.shape,s);a.length>0&&(e=oe(ge(e,a),r.shape));const i=qt(r);return Ut(Wt(e,i.toFloat()))}}}},xn={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>Et.runKernelFunc(r,s,null,"EluGrad")}}};const wn=Mt({exp_:function(t){const e=Dt(t,"x","exp"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.exp(e);return n([r]),r},n,null,"Exp")}}),vn={kernelName:"Erf",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Lt(wn(Ut(qt(n))),2/Math.sqrt(Math.PI));return{x:()=>Lt(t,r)}}},kn={kernelName:"Exp",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(t,n)}}},In={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(t,wn(n))}}},Cn={kernelName:"Floor",gradFunc:t=>({x:()=>ee(t)})},Sn={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Zt(n.shape,r.shape);return{a:()=>{const e=t.div(r.toFloat()),a=Jt(n.shape,s);return a.length>0?e.sum(a).reshape(n.shape):e},b:()=>{let e=t.mul(n.toFloat());const a=Jt(r.shape,s);a.length>0&&(e=e.sum(a).reshape(r.shape));const i=r.square();return e.div(i.toFloat()).neg()}}}};const En=Mt({rsqrt_:function(t){const e=Dt(t,"x","rsqrt"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.rsqrt(e);return n([e]),r},n,null,"Rsqrt")}});const An=Mt({tile_:function(t,e){const n=Dt(t,"x","tile",null);C(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r=[n],s={x:n},a={reps:e};return Et.runKernelFunc((t,r)=>{const s=t.tile(n,e);return r([n]),s},s,null,"Tile",a,r)}}),Nn={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=e,l=null==o?Gt(1):o,u=Jt(a.shape,s.shape),c=[];if(1===a.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=jt(s,a),d=Lt(t,l),p=En(ae(i,Gt(r))),f=Lt(Lt(Lt(p,p),p),Gt(-.5));return{x:()=>1===a.rank?oe(Lt(Lt(t,An(p.as4D(1,1,1,a.shape[0]),c)),l),s.shape):oe(Lt(Lt(t,p),l),s.shape),mean:()=>{let t=Lt(Lt(p,Gt(-1)),d);return 1===a.rank&&(t=ge(t,u)),oe(t,a.shape)},variance:()=>{let t=Lt(Lt(f,h),d);return 1===a.rank&&(t=ge(t,u)),oe(t,a.shape)},scale:()=>{const e=Lt(h,p);let n=Lt(t,e);return 1===a.rank&&(n=ge(n,u)),oe(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=ge(e,u)),oe(e,a.shape)}}}};const Rn=Mt({unsortedSegmentSum_:function(t,e,n){const r=Dt(t,"x","unsortedSegmentSum"),s=Dt(e,"segmentIds","unsortedSegmentSum","int32");C($(n),()=>"numSegments must be of dtype int");const a={x:r,segmentIds:s},i={numSegments:n};return Et.runKernelFunc((t,e)=>{const a=t.unsortedSegmentSum(r,s,n);return e([s]),a},a,null,"UnsortedSegmentSum",i)}}),$n={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:a}=n,i=M(a,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,i),l=o.length,u=e.slice(a,e.length).slice(1),c=u.length,h=Tn(0,l),d=Tn(l+1,l+1+c),p=_n([o,[n],u]),f=oe(t,p),m=oe(s,[n]),g=_n([[l],h,d]),b=hn(f,g);let y=Rn(b,m,r.shape[i]);const x=fe(g);return y=hn(y,x),y},indices:()=>s}}};function Tn(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function _n(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Dn={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>ee(n),b:()=>ee(r)}}},Fn={kernelName:"Identity",gradFunc:t=>({x:()=>t.toFloat()})},Mn={kernelName:"IsFinite",gradFunc:t=>({x:()=>ee(t)})},On={kernelName:"IsInf",gradFunc:t=>({x:()=>ee(t)})},Ln={kernelName:"IsNan",gradFunc:t=>({x:()=>ee(t)})},Bn={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wt(t,ae(n,1))}}},zn={kernelName:"Log",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wt(t,Ot(n,"float32"))}}},Pn={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=r.exp();return t.sub(t.sum(s,!0).mul(e))}}}};const Wn=Mt({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,a=1,i=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return Et.runKernelFunc(o=>o.LRNGrad(n,t,e,r,s,a,i),o,null,"LRNBackprop",l)}}),Un={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Wn(r,s,t,a,i,o,l)}}};const Vn=Mt({equal_:function(t,e){let n=Dt(t,"a","equal"),r=Dt(e,"b","equal");[n,r]=kt(n,r),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc(t=>t.equal(n,r),s,null,"Equal")}});function Gn(t,e,n,r,s){return e.rank<n.rank&&(e=oe(e,he(e.shape,r))),t.rank<n.rank&&(t=oe(t,he(t.shape,r))),{x:()=>{const r=Lt(t,Ot(Vn(n,e),t.dtype));return null==s?r:hn(r,s)}}}const Hn={kernelName:$t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,[a,i]=e,o=M(s,a.shape),l=pe(o,a.rank),u=Gn(t,i,a,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=hn(t)),t}}}};const qn=Mt({less_:function(t,e){let n=Dt(t,"a","less"),r=Dt(e,"b","less");[n,r]=kt(n,r),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc(t=>t.less(n,r),s,null,"Less")}}),jn={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Lt(t,Ot(Ge(n,r),"float32")),b:()=>Lt(t,Ot(qn(n,r),"float32"))}}};const Kn=Mt({maxPool3dBackprop_:function(t,e,n,r,s,a=[1,1,1],i,o){const l=Dt(t,"dy","maxPool3dBackprop"),u=Dt(e,"input","maxPool3dBackprop"),c=Dt(n,"output","maxPool3dBackprop");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=oe(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=oe(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=oe(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),C(5===h.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."),C(5===d.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."),C(5===p.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+"."),C(Te(s,a),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`),null!=o&&C($(i),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const m={dy:h,input:d,output:p},g={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},b=Et.runKernelFunc(t=>{const e=ke(d.shape,r,s,a,i,o);return t.maxPool3dBackprop(h,d,p,e)},m,null,"MaxPool3DBackprop",g);return f?oe(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Xn={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>Kn(t,r,s,a,i,c,l,u)}}};const Yn=Mt({maxPoolBackprop_:function(t,e,n,r,s,a,i){const o=Dt(t,"dy","maxPoolBackprop"),l=Dt(e,"input","maxPoolBackprop"),u=Dt(n,"output","maxPoolBackprop");C(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),C(4===o.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+"."),C(4===l.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+"."),null!=i&&C($(a),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Et.runKernelFunc(t=>{const e=ve(l.shape,r,s,1,a,i);return t.maxPoolBackprop(o,l,u,e)},c,null,"MaxPoolBackprop",h)}}),Jn={kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Yn(t,r,s,a,i,o)}}},Zn={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[a,i]=e,o=M(s,a.shape),l=pe(o,a.rank),u=Gn(t,i,a,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=hn(t)),t}}}};const Qn=Mt({greater_:function(t,e){let n=Dt(t,"a","greater"),r=Dt(e,"b","greater");[n,r]=kt(n,r),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc(t=>t.greater(n,r),s,null,"Greater")}}),tr={kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Lt(t,Ot(He(n,r),"float32")),b:()=>Lt(t,Ot(Qn(n,r),"float32"))}}};const er=Mt({floor_:function(t){const e=Dt(t,"x","floor"),n={x:e};return Et.runKernelFunc(t=>t.floor(e),n,null,"Floor")}}),nr={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Zt(n.shape,r.shape);return{a:()=>{const e=Jt(n.shape,s);return e.length>0?oe(ge(t,e),n.shape):t},b:()=>{const e=Lt(t,Ut(er(Wt(n,r)))),a=Jt(r.shape,s);return a.length>0?oe(ge(e,a),r.shape):e}}}},rr={kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Zt(n.shape,r.shape);return{a:()=>{const e=Lt(t,Ot(r,"float32")),a=Jt(n.shape,s);return a.length>0?oe(ge(e,a),n.shape):e},b:()=>{const e=Lt(t,Ot(n,"float32")),a=Jt(r.shape,s);return a.length>0?oe(ge(e,a),r.shape):e}}}},sr={kernelName:"Negate",gradFunc:t=>({x:()=>Ut(t)})};const ar=Mt({complex_:function(t,e){const n=Dt(t,"real","complex"),r=Dt(e,"imag","complex");S(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Et.runKernelFunc(t=>t.complex(n,r),s,null,"Complex")}});function ir(t,e="float32"){if("complex64"===e){const e=ir(t,"float32"),n=ir(t,"float32");return ar(e,n)}const n=Y(N(t),e);return Et.makeTensor(n,t,e)}const or={kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>ir(n.shape,"float32")}}},lr={kernelName:"OnesLike",gradFunc:t=>({x:()=>ee(t)})},ur={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map(t=>t[0]);return{x:()=>t.slice(a,r.shape)}}};const cr=Mt({log_:function(t){const e=Dt(t,"x","log"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.log(e);return n([e]),r},n,null,"Log")}});const hr=Mt({pow_:function(t,e){let n=Dt(t,"base","pow"),r=Dt(e,"exp","pow");[n,r]=kt(n,r);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s},s,null,"Pow")}}),dr={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,a=n,i=r,o=Zt(a.shape,i.shape);return{a:()=>{const e=Ot(i,"float32");let n=Lt(t,Lt(e,hr(a,jt(e,Gt(1)))));const r=Jt(a.shape,o);return r.length>0&&(n=ge(n,r)),oe(n,a.shape)},b:()=>{const e=Qn(a,0),n=je(e,cr(a),ee(a));let r=Lt(t,Lt(s,n));const l=Jt(i.shape,o);return l.length>0&&(r=ge(r,l)),oe(r,i.shape)}}}},pr={kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=Qn(n,0);return{x:()=>je(s,t,Lt(t,r)),alpha:()=>{let e=je(s,ee(t),Lt(t,n));const a=Jt(r.shape,t.shape);return a.length>0&&(e=ge(e,a)),oe(e,r.shape)}}}},fr={kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wt(t,Ut(qt(n)))}}},mr={kernelName:"Relu6",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Lt(He(n,6),Bt(n));return{x:()=>Lt(t,Ot(r,"float32"))}}},gr={kernelName:"Relu",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(t,Ot(Bt(n),"float32"))}}},br={kernelName:"Reshape",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oe(t,n.shape)}}},yr={kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},a={images:r};return{images:()=>Et.runKernelFunc(s,a,null,"ResizeBilinearGrad",n)}}},xr={kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},a={images:r};return{images:()=>Et.runKernelFunc(s,a,null,"ResizeNearestNeighborGrad",n)}}};const wr=Mt({clone_:function(t){const e=Dt(t,"x","clone",null),n={x:e};return Et.runKernelFunc(()=>Et.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n,null,"Identity")}});const vr=Mt({reverse_:function(t,e){const n=Dt(t,"x","reverse"),r={x:n},s={dims:e};return Et.runKernelFunc(t=>{const r=M(e,n.shape);if(0===n.rank)return wr(n);const s=t.reverse(n,r);return oe(s,n.shape)},r,null,"Reverse",s)}}),kr={kernelName:"Reverse",gradFunc:(t,e,n)=>{const{dims:r}=n,s=M(r,t.shape);return{x:()=>vr(t,s)}}},Ir={kernelName:"Round",gradFunc:t=>({x:()=>ee(t)})},Cr={kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ut(Wt(t,Lt(hr(n,1.5),2)))}}};const Sr=Mt({logicalNot_:function(t){const e=Dt(t,"x","logicalNot","bool"),n={x:e};return Et.runKernelFunc(t=>t.logicalNot(e),n,null,"LogicalNot")}}),Er={kernelName:"SelectV2",inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Ot(ee(n),"float32"),t:()=>Lt(t,Ot(n,t.dtype)),e:()=>Lt(t,Ot(Sr(n),t.dtype))}}},Ar=1.0507009873554805,Nr={kernelName:"Selu",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Qn(n,Gt(0)),r=Gt(1.7580993408473768),s=Gt(Ar),a=Lt(t,s),i=Lt(Lt(t,r),wn(Ot(n,"float32")));return je(e,a,i)}}}},Rr={kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(t,Lt(n,jt(Gt(1),n)))}}},$r={kernelName:"Sign",gradFunc:t=>({x:()=>ee(t)})};const Tr=Mt({cos_:function(t){const e=Dt(t,"x","cos"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.cos(e);return n([e]),r},n,null,"Cos")}}),_r={kernelName:"Sin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(Tr(Ot(n,"float32")),t)}}};const Dr=Mt({cosh_:function(t){const e=Dt(t,"x","cosh"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.cosh(e);return n([e]),r},n,null,"Cosh")}}),Fr={kernelName:"Sinh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(Dr(Ot(n,"float32")),t)}}};const Mr=Mt({pad_:function(t,e,n=0){const r=Dt(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},a={x:r};return Et.runKernelFunc((t,s)=>(s([r]),t.pad(r,e,n)),a,null,"PadV2",s)}});function Or(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Lr(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Br(t,e,n){return n<=t?n:n-(e-1)}function zr(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Pr(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Wr(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=k(0,i,l-1),i}function Ur(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?k(0,i,l):k(-1,i,l-1),i}function Vr(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Gr(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Hr(t,e,n){let r,s;return r="number"==typeof e?[e,...new Array(t.rank-1).fill(0)]:e.length<t.rank?e.concat(new Array(t.rank-e.length).fill(0)):e.slice(),r.forEach(t=>{C(-1!==t,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(t.rank).fill(-1):"number"==typeof n?[n,...new Array(t.rank-1).fill(-1)]:n.length<t.rank?n.concat(new Array(t.rank-n.length).fill(-1)):n,s=s.map((e,n)=>e>=0?e:(C(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-r[n])),[r,s]}const qr={kernelName:"Slice",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:a}=n,i=r.shape,[o,l]=Hr(r,s,a),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],i[e]-o[e]-l[e]]);return{x:()=>Mr(t,u)}}},jr={kernelName:"Softmax",outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,a=Lt(t,r);return{logits:()=>jt(a,Lt(ge(a,[s],!0),r))}}};const Kr=Mt({sigmoid_:function(t){const e=Dt(t,"x","sigmoid"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.sigmoid(e);return n([r]),r},n,null,"Sigmoid")}}),Xr={kernelName:"Softplus",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(t,Kr(n))}}};const Yr=Mt({batchToSpaceND_:function(t,e,n){const r=Dt(t,"x","batchToSpaceND"),s=e.reduce((t,e)=>t*e);C(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),C(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),C(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const a={x:r},i={blockShape:e,crops:n};return Et.runKernelFunc(t=>t.batchToSpaceND(r,e,n),a,null,"BatchToSpaceND",i)}}),Jr={kernelName:"SpaceToBatchND",gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Yr(t,r,s)}}};function Zr(t,e){const n=t[0].length;t.forEach((t,e)=>{C(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),C(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,s)=>{for(let a=0;a<n;a++)C(a===e||t[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Qr(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}function ts(t,e,n){return Vt(t,e,Tt(t,n),n)}const es=Mt({concat_:function(t,e=0){C(t.length>=1,()=>"Pass at least one tensor to concat");let n=Ft(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)});const r=M(e,n[0].shape)[0],s=Qr(n.map(t=>t.shape),r);if(0===N(s))return ts([],s);if(n=n.filter(t=>t.size>0),1===n.length)return n[0];Zr(n.map(t=>t.shape),r);const a=n,i={axis:e};return Et.runKernelFunc((t,e)=>{const s=t.concat(n,r);return e(n),s},a,null,"Concat",i)}}),ns={kernelName:"SplitV",gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>es(t,r)}}},rs={kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wt(t,Lt(Ht(Ot(n,"float32")),2))}}},ss={kernelName:"Square",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(t,Lt(n.toFloat(),2))}}},as={kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Gt(2);return{a:()=>Lt(t,Lt(s,jt(n,r))),b:()=>Lt(t,Lt(s,jt(r,n)))}}},is={kernelName:"Step",gradFunc:t=>({x:()=>ee(t)})},os={kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Zt(n.shape,r.shape);return{a:()=>{let e=t;const r=Jt(n.shape,s);return r.length>0&&(e=ge(e,r)),oe(e,n.shape)},b:()=>{let e=t;const n=Jt(r.shape,s);return n.length>0&&(e=ge(e,n)),oe(Ut(e),r.shape)}}}};function ls(t,e="float32"){if("complex64"===e){const e=ls(t,"float32"),n=ir(t,"float32");return ar(e,n)}const n=X(N(t),e);return Et.makeTensor(n,t,e)}const us={kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:a}=n;M(a,r.shape).forEach(t=>{s[t]=1});const i=oe(t,s),o=Lt(i,ls(r.shape,"float32"));return{x:()=>o}}},cs={kernelName:"Tan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Wt(t,qt(Tr(n)))}}},hs={kernelName:"Tanh",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Lt(jt(Gt(1),qt(n)),t)}}};const ds=Mt({slice_:function(t,e,n){const r=Dt(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const[s,a]=Hr(r,e,n);!function(t,e,n){C(t.rank===e.length,()=>`Error in slice${t.rank}D: Length of begin ${e} must match the rank of the array (${t.rank}).`),C(t.rank===n.length,()=>`Error in slice${t.rank}D: Length of size ${n} must match the rank of the array (${t.rank}).`);for(let r=0;r<t.rank;++r)C(e[r]+n[r]<=t.shape[r],()=>`Error in slice${t.rank}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`)}(r,s,a);const i={x:r},o={begin:e,size:n};return Et.runKernelFunc((t,e)=>(e([r]),t.slice(r,s,a)),i,null,"Slice",o)}}),ps={kernelName:"Tile",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=ee(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=ae(e,ds(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)e=ae(e,ds(t,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)e=ae(e,ds(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)e=ae(e,ds(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},fs={kernelName:"Transpose",gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,a=fe(s);return{x:()=>hn(t,a)}}};const ms=Mt({expandDims_:function(t,e=0){const n=Dt(t,"x","expandDims",null);C(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return e<0&&(C(-(n.rank+1)<=e,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),e=n.rank+e+1),r.splice(e,0,1),oe(n,r)}});const gs=Mt({stack_:function(t,e=0){const n=Ft(t,"tensors","stack");if(C(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return ms(n[0],e);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;C(e<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(t=>{S(s,t.shape,"All tensors passed to stack must have matching shapes"),C(a===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=n.map(t=>ms(t,e));return es(i,e)}}),bs={kernelName:"Unpack",gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>gs(t,s)}}};function ys(t){return t<=30?t:H(t,Math.floor(Math.sqrt(t)))}function xs(t,e,n){const r=t.shape[n],s=[];let a=1,i=1;for(let e=0;e<n;e++)s.push(t.shape[e]),a*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),i*=t.shape[e];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:s}}var ws=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:function(t,e){let n,r=!1;for(t<=30?(n=t,r=!0):n=H(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=H(t,n+1);return n},computeOutShape:function(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r},collectGatherOpShapeInfo:xs});const vs=Mt({gather_:function(t,e,n=0){const r=Dt(t,"x","gather"),s=Dt(e,"indices","gather","int32"),a={x:r,indices:s},i={axis:n};return Et.runKernelFunc((t,e)=>{const a=M(n,r.shape)[0],i=xs(r,s,a),o=t.gather(r,s.flatten(),a);return e([r,s]),o.reshape(i.outputShape)},a,null,"GatherV2",i)}});const ks=Mt({maximum_:function(t,e){let n=Dt(t,"a","maximum"),r=Dt(e,"b","maximum");[n,r]=kt(n,r),"bool"===n.dtype&&(n=Ot(n,"int32"),r=Ot(r,"int32")),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s},s,null,"Maximum")}});const Is=[zt,Kt,Xt,Qt,te,ne,re,se,ie,be,ye,xe,Fe,Oe,Be,Pe,We,Ue,Ve,Ke,Je,nn,tn,an,ln,cn,pn,gn,bn,yn,xn,vn,kn,In,Sn,Cn,Nn,$n,Dn,Fn,Mn,On,Ln,Bn,zn,Pn,Un,Hn,Hn,jn,Xn,Jn,Zn,tr,nr,rr,sr,or,lr,ur,ur,dr,pr,fr,mr,gr,br,yr,xr,kr,Ir,Cr,Er,Nr,Rr,$r,_r,Fr,qr,jr,Xr,Jr,Jr,ns,ns,rs,as,ss,is,os,us,cs,hs,ps,fs,bs,{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=ks(e,ee(e)),r=vs(t,n);let s=Ge(e,Gt(0,"int32"));const a=r.rank-s.rank;for(let t=0;t<a;++t)s=ms(s,t+1);s=qe(s,ls(r.shape,"bool"));const i=ee(r);return je(s,r,i)}(t,n)}}},{kernelName:"ZerosLike",gradFunc:t=>({x:()=>ee(t)})}];for(const t of Is)x(t);class Cs{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}l().get("IS_BROWSER")&&l().setPlatform("browser",new Cs);const Ss=()=>require("node-fetch");let Es;class As{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=l().global.fetch?l().global.fetch(t,e):(null==Es&&(Es=Ss()),Es(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}l().get("IS_NODE")&&l().setPlatform("node",new As);async function Ns(t,e){const n=[],r=[],s=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise(async t=>{const e=await o.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}t(r)});r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Rs(await Promise.all(r)),specs:n}}function Rs(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let s=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength}),r.buffer}const $s="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ts(t){return $s?Buffer.byteLength(t):new Blob([t]).size}function _s(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function Ds(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Ts(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Ts(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class Fs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Fs.instance&&(Fs.instance=new Fs),Fs.instance}static registerSaveRouter(t){Fs.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Fs.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Fs.getHandlers(t,"save")}static getLoadHandlers(t,e){return Fs.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Fs.getInstance().loadRouters:Fs.getInstance().saveRouters).forEach(e=>{const s=e(t,n);null!==s&&r.push(s)}),r}}class Ms{constructor(){this.managers={}}static getInstance(){return null==Ms.instance&&(Ms.instance=new Ms),Ms.instance}static registerManager(t,e){C(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),C(t.length>0,()=>"scheme must not be an empty string.");const n=Ms.getInstance();C(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Os(){if(!l().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Ls(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Bs{constructor(t){if(this.indexedDB=Os(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Ls(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Ds(e),a=s.transaction("model_info_store","readwrite");let i=a.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction("models_store","readwrite");const o=l.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=a.objectStore("model_info_store");const e=i.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)})}}Bs.URL_SCHEME="indexeddb://";const zs=t=>{return l().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Bs.URL_SCHEME)?(e=t.slice(Bs.URL_SCHEME.length),new Bs(e)):null;var e};Fs.registerSaveRouter(zs),Fs.registerLoadRouter(zs);class Ps{constructor(){this.indexedDB=Os()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Ls(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),a=s.objectStore("model_info_store").getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(r.close(),e(a.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(Bs.URL_SCHEME)?e.slice(Bs.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Ls(r),r.onsuccess=()=>{const s=r.result,a=s.transaction("model_info_store","readwrite"),i=a.objectStore("model_info_store"),o=i.get(t);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),a=()=>{l=s.transaction("models_store","readwrite");const r=l.objectStore("models_store").delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=a,r.onerror=t=>(a(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)})}}if(l().getBool("IS_BROWSER"))try{Ms.registerManager(Bs.URL_SCHEME,new Ps)}catch(t){}const Ws="tensorflowjs_models",Us="info",Vs="model_topology",Gs="weight_specs",Hs="weight_data",qs="model_metadata";function js(t){return{info:[Ws,t,Us].join("/"),topology:[Ws,t,Vs].join("/"),weightSpecs:[Ws,t,Gs].join("/"),weightData:[Ws,t,Hs].join("/"),modelMetadata:[Ws,t,qs].join("/")}}function Ks(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join("/")}class Xs{constructor(t){if(!l().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=js(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Ds(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if($s)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if($s){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}Xs.URL_SCHEME="localstorage://";const Ys=t=>{return l().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Xs.URL_SCHEME)?(e=t.slice(Xs.URL_SCHEME.length),new Xs(e)):null;var e};Fs.registerSaveRouter(Ys),Fs.registerLoadRouter(Ys);class Js{constructor(){C(l().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),C("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Ws+"/",n="/"+Us;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(e)&&s.endsWith(n)){t[Ks(s)]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){var e;const n=js(t=(e=t).startsWith(Xs.URL_SCHEME)?e.slice(Xs.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}if(l().getBool("IS_BROWSER"))try{Ms.registerManager(Xs.URL_SCHEME,new Js)}catch(t){}function Zs(t){return new Promise(t=>setTimeout(t)).then(t)}class Qs{constructor(t){if(!l().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Qs.URL_SCHEME)&&(t=t.slice(Qs.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Zs(()=>a.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Zs(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ds(t)}}}}Qs.URL_SCHEME="downloads://";function ta(t,e,n,r){!function(t){C(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){C(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),C(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),C(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map(a=>(a.then(a=>{const i=n+ ++s/t.length*(r-n);return e(i),a}),a)))}Fs.registerSaveRouter(t=>l().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Qs.URL_SCHEME)?function(t="model"){return new Qs(t)}(t.slice(Qs.URL_SCHEME.length)):null);class ea{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,null!=e.fetchFunc?(C("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=l().platform.fetch,C(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&C(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Ds(t),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+s.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=r){const t=await this.loadWeights(r);[l,u]=t}return{modelTopology:n,weightSpecs:l,weightData:u,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i}}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}(e),s=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[];t.forEach(t=>{t.paths.forEach(t=>{i.push(s+t+r)})});return[a,_s(await async function(t,e){null==e&&(e={});const n=null==e.fetchFunc?l().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),s=(null==e.onProgress?await Promise.all(r):await ta(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(s):await ta(s,e.onProgress,.5,1)}(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function na(t){return null!=t.match(ea.URL_SCHEME_REGEX)}ea.URL_SCHEME_REGEX=/^https?:\/\//;const ra=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>na(t)):na(t),n)return function(t,e){return new ea(t,e)}(t,e)}return null};Fs.registerSaveRouter(ra),Fs.registerLoadRouter(ra);const sa=Mt({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const s=Dt(t,"indices","oneHot","int32"),a=[...s.shape,e],i={indices:s},o={depth:e,onValue:n,offValue:r};return Et.runKernelFunc((t,i)=>(i([s]),oe(t.oneHot(s.flatten(),e,n,r),a)),i,null,"OneHot",o)}});Mt({confusionMatrix_:function(t,e,n){const r=Dt(t,"labels","confusionMatrix"),s=Dt(e,"predictions","confusionMatrix");C(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),C(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),C(1===s.rank,()=>"Expected the rank of predictions to be 1, but got "+s.rank),C(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),C(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const a=sa(r.asType("int32"),n),i=sa(s.asType("int32"),n);return a.transpose().matMul(i).asType("int32")}});function aa(t,e,n){if(E(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Tt(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Vt(t,e,r,n)}let ia;Mt({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else{if(null==t.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);i=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=m("FromPixels",Et.backendName)){const n={pixels:t},r={numChannels:e};return Et.runKernel("FromPixels",n,r)}const[o,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let u,c;if(i?u=t.getContext("2d").getImageData(0,0,o,l).data:r||n?u=t.data:(a||s)&&(null==ia&&(ia=document.createElement("canvas").getContext("2d")),ia.canvas.width=o,ia.canvas.height=l,ia.drawImage(t,0,0,o,l),u=ia.getImageData(0,0,o,l).data),4===e)c=new Int32Array(u);else{const t=o*l;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=u[4*n+t]}return aa(c,[l,o,e],"int32")}});function oa(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const a=t.shape,i=n.slice();i.pop();let o=1;for(let e=r;e<t.rank;++e)o*=a[e],i.push(a[e]);const l=[...q(t.shape).map(t=>t/o),1].slice(0,r);return[i,s,o,l]}function la(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(a+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function ua(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}la(n,e,t)}function ca(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let i=1;for(let t=s;t<a;++t)i*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:N(e.shape)/o,sliceSize:i,strides:[...q(n.slice(0,s)),1],outputSize:N(n)}}class ha{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class da{constructor(){this.classNameMap={}}static getMap(){return null==da.instance&&(da.instance=new da),da.instance}static register(t){da.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function pa(t){C(null!=t.className,()=>"Class being registered does not have the static className property defined."),C("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),C(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),da.register(t)}function fa(t){l().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ma(){return Et}function ga(){return Et.memory()}function ba(t,e){return Et.tidy(t,e)}function ya(t){It(t).forEach(t=>t.dispose())}function xa(t){return Et.keep(t)}function wa(t,e,n=1){return Et.registerBackend(t,e,n)}const va=Mt({abs_:function(t){const e=Dt(t,"x","abs"),n={x:e};return Et.runKernelFunc((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e)),n,null,"Abs")}});const ka=Mt({acos_:function(t){const e=Dt(t,"x","acos"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.acos(e);return n([e]),r},n,null,"Acos")}});const Ia=Mt({acosh_:function(t){const e=Dt(t,"x","acosh"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.acosh(e);return n([e]),r},n,null,"Acosh")}});const Ca=Mt({addN_:function(t){C(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),C(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Dt(t,"tensors"+e,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!R(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return Et.runKernelFunc((t,n)=>{const r=t.addN(e);return n(e),r},r,null,"AddN")}});const Sa=Mt({all_:function(t,e=null,n=!1){let r=Dt(t,"x","all","bool");const s={x:r},a={axis:e,keepDims:n};return Et.runKernelFunc(t=>{const s=M(e,r.shape);let a=s;const i=pe(a,r.rank);null!=i&&(r=r.transpose(i),a=me(a.length,r.rank));const o=t.all(r,a);if(n){const t=he(o.shape,s);return o.reshape(t)}return o},s,null,"All",a)}});const Ea=Mt({any_:function(t,e=null,n=!1){let r=Dt(t,"x","any","bool");const s={x:r},a={axis:e,keepDims:n};return Et.runKernelFunc(t=>{const s=M(e,r.shape);let a=s;const i=pe(a,r.rank);null!=i&&(r=r.transpose(i),a=me(a.length,r.rank));const o=t.any(r,a);if(n){const t=he(o.shape,s);return o.reshape(t)}return o},s,null,"Any",a)}});const Aa=Mt({argMax_:function(t,e=0){let n=Dt(t,"x","argMax");const r={x:n},s={axis:e};return Et.runKernelFunc((t,r)=>{r([n]);let s=M(e,n.shape);const a=pe(s,n.rank);return null!=a&&(n=n.transpose(a),s=me(s.length,n.rank)),t.argMax(n,s[0])},r,null,"ArgMax",s)}});const Na=Mt({argMin_:function(t,e=0){let n=Dt(t,"x","argMin");const r={x:n},s={axis:e};return Et.runKernelFunc((t,r)=>{r([n]),null==e&&(e=0);let s=M(e,n.shape);const a=pe(s,n.rank);return null!=a&&(n=n.transpose(a),s=me(s.length,n.rank)),t.argMin(n,s[0])},r,null,"ArgMin",s)}});const Ra=Mt({asin_:function(t){const e=Dt(t,"x","asin"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.asin(e);return n([e]),r},n,null,"Asin")}});const $a=Mt({asinh_:function(t){const e=Dt(t,"x","asinh"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.asinh(e);return n([e]),r},n,null,"Asinh")}});const Ta=Mt({atan_:function(t){const e=Dt(t,"x","atan"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.atan(e);return n([e]),r},n,null,"Atan")}});const _a=Mt({atan2_:function(t,e){let n=Dt(t,"a","atan2"),r=Dt(e,"b","atan2");[n,r]=kt(n,r);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s},s,null,"Atan2")}});const Da=Mt({atanh_:function(t){const e=Dt(t,"x","atanh"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.atanh(e);return n([e]),r},n,null,"Atanh")}});const Fa=Mt({avgPool_:function(t,e,n,r,s){const a=Dt(t,"x","avgPool","float32");C(Te(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=a,o=!1;3===a.rank&&(o=!0,i=oe(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=s&&C($(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const l={x:i},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=Et.runKernelFunc((t,a)=>{const o=ve(i.shape,e,n,1,r,s);return a([i]),1===o.filterWidth&&1===o.filterHeight&&R(o.inShape,o.outShape)?i.clone():t.avgPool(i,o)},l,null,"AvgPool",u);return c=Ot(c,a.dtype),o?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}});const Ma=Mt({avgPool3d_:function(t,e,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:fa("dilations is deprecated, this field will be gone in v3.0.0.");const o=Dt(t,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=oe(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),C(5===l.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),C("NDHWC"===a,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),C(Te(n,i),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=s&&C($(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c={x:l},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let d=Et.runKernelFunc((t,o)=>{null==i&&(i=[1,1,1]);const u=ke(l.shape,e,n,i,r,s,a);return o([l]),t.avgPool3d(l,u)},c,null,"AvgPool3D",h);return d=Ot(d,l.dtype),u?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}});const Oa=Mt({tanh_:function(t){const e=Dt(t,"x","tanh"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.tanh(e);return n([r]),r},n,null,"Tanh")}});const La=Mt({basicLSTMCell_:function(t,e,n,r,s,a){const i=Dt(t,"forgetBias","basicLSTMCell"),o=Dt(e,"lstmKernel","basicLSTMCell"),l=Dt(n,"lstmBias","basicLSTMCell"),u=Dt(r,"data","basicLSTMCell"),c=Dt(s,"c","basicLSTMCell"),h=Dt(a,"h","basicLSTMCell"),d=es([u,h],1),p=Le(d,o),f=ae(p,l),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=ds(f,[0,0],b),x=ds(f,[0,g],b),w=ds(f,[0,2*g],b),v=ds(f,[0,3*g],b),k=ae(Lt(Kr(y),Oa(x)),Lt(c,Kr(ae(i,w))));return[k,Lt(Oa(k),Kr(v))]}});function Ba(t){return null==t?null:0===t.rank?t.as1D():1===t.rank?t:2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t}const za=Mt({batchNorm_:function(t,e,n,r,s,a){null==a&&(a=.001);const i=Dt(t,"x","batchNorm"),o=Dt(e,"mean","batchNorm"),l=Dt(n,"variance","batchNorm");let u,c;null!=s&&(u=Dt(s,"scale","batchNorm")),null!=r&&(c=Dt(r,"offset","batchNorm")),C(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(t){let e;return e=0===t.rank||1===t.rank?t.as4D(1,1,1,t.size):2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t,e}(i),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},f=Et.runKernelFunc((t,e)=>(e([h,o,l,u]),t.batchNorm(h,Ba(o),Ba(l),Ba(c),Ba(u),a)),d,null,"FusedBatchNorm",p);return oe(f,i.shape)}});const Pa=Mt({batchNorm2d_:function(t,e,n,r,s,a){const i=Dt(t,"x","batchNorm"),o=Dt(e,"mean","batchNorm"),l=Dt(n,"variance","batchNorm");let u,c;return null!=s&&(u=Dt(s,"scale","batchNorm")),null!=r&&(c=Dt(r,"offset","batchNorm")),C(2===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),C(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),C(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&C(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&C(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),za(i,o,l,c,u,a)}});const Wa=Mt({batchNorm3d_:function(t,e,n,r,s,a){const i=Dt(t,"x","batchNorm"),o=Dt(e,"mean","batchNorm"),l=Dt(n,"variance","batchNorm");let u,c;return null!=s&&(u=Dt(s,"scale","batchNorm")),null!=r&&(c=Dt(r,"offset","batchNorm")),C(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),C(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),C(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&C(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&C(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),za(i,o,l,c,u,a)}});const Ua=Mt({batchNorm4d_:function(t,e,n,r,s,a){const i=Dt(t,"x","batchNorm"),o=Dt(e,"mean","batchNorm"),l=Dt(n,"variance","batchNorm");let u,c;return null!=s&&(u=Dt(s,"scale","batchNorm")),null!=r&&(c=Dt(r,"offset","batchNorm")),C(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),C(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),C(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&C(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&C(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),za(i,o,l,c,u,a)}});const Va=Mt({broadcastTo_:function(t,e){let n=Dt(t,"broadcastTo","x");const r=n.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=oe(n,t)}const s=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===a.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return wr(n);const i={x:n},o={shape:e,inputShape:s};return Et.runKernelFunc(t=>t.tile(n,a),i,null,"BroadcastTo",o)}});function Ga(t,e="float32",n){return e=e||"float32",Q(t),new ut(t,e,n)}const Ha=Mt({ceil_:function(t){const e=Dt(t,"x","ceil"),n={x:e};return Et.runKernelFunc(t=>t.ceil(e),n,null,"Ceil")}});const qa=Mt({clipByValue_:function(t,e,n){const r=Dt(t,"x","clipByValue");C(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const s={x:r},a={clipValueMin:e,clipValueMax:n};return Et.runKernelFunc((t,s)=>{const a=t.clip(r,e,n);return s([r]),a},s,null,"ClipByValue",a)}});const ja=Mt({concat1d_:function(t){return es(t,0)}});const Ka=Mt({concat2d_:function(t,e){return es(t,e)}});const Xa=Mt({concat3d_:function(t,e){return es(t,e)}});const Ya=Mt({concat4d_:function(t,e){return es(t,e)}});const Ja=Mt({conv1d_:function(t,e,n,r,s="NWC",a=1,i){const o=Dt(t,"x","conv1d"),l=Dt(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=oe(o,[1,o.shape[0],o.shape[1]])),C(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),C(3===l.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+l.rank+"."),null!=i&&C($(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),C(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),C(Te(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),C("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=oe(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=oe(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=en(d,h,[1,n],r,"NHWC",[1,a],i);return oe(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Za=Mt({conv2dTranspose_:function(t,e,n,r,s,a){const i=Dt(t,"x","conv2dTranspose"),o=Dt(e,"filter","conv2dTranspose");return Qe(n,i,o,r,s,"NHWC",a)}});const Qa=Mt({conv3d_:function(t,e,n,r,s="NDHWC",a=[1,1,1]){const i=Dt(t,"x","conv3d"),o=Dt(e,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=oe(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),C(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),C(5===o.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."),C(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),C(Te(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),C("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Et.runKernelFunc((t,e)=>{const s=Ce(l.shape,o.shape,n,a,r),i=t.conv3d(l,o,s);return e([l,o]),i},c,null,"Conv3D",h);return u?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}});const ti=Mt({conv3dTranspose_:function(t,e,n,r,s){const a=Dt(t,"x","conv3dTranspose"),i=Dt(e,"filter","conv3dTranspose");return sn(n,a,i,r,s)}});const ei=Mt({depthToSpace_:function(t,e,n="NHWC"){const r=Dt(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];C(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),C(a*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`),C(i%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`);const o={x:r},l={blockSize:e,dataFormat:n};return Et.runKernelFunc(t=>t.depthToSpace(r,e,n),o,null,"DepthToSpace",l)}});const ni=Mt({depthwiseConv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=Dt(t,"x","depthwiseConv2d"),l=Dt(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=oe(o,[1,o.shape[0],o.shape[1],o.shape[2]])),C(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),C(4===l.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+l.rank+"."),C(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),null!=i&&C($(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},p=Et.runKernelFunc((t,e)=>{null==a&&(a=[1,1]),C(Te(n,a),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const s=Ie(u.shape,l.shape,n,a,r,i,!0),o=t.depthwiseConv2D(u,l,s);return e([u,l]),o},h,null,"DepthwiseConv2dNative",d);return c?oe(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const ri=Mt({diag_:function(t){const e=Dt(t,"x","diag").flatten(),n={x:e};return Et.runKernelFunc(n=>{const r=n.diag(e),s=[...t.shape,...t.shape];return oe(r,s)},n,null,"Diag")}});const si=Mt({dilation2d_:function(t,e,n,r,s=[1,1],a="NHWC"){const i=Dt(t,"x","dilation2d"),o=Dt(e,"filter","dilation2d");C(3===i.rank||4===i.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+"."),C(3===o.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+"."),C("NHWC"===a,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+a);let l=i,u=!1;3===i.rank&&(l=oe(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Et.runKernel("Dilation2D",c,h);return u?oe(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const ai=Mt({divNoNan_:function(t,e){let n=Dt(t,"a","div"),r=Dt(e,"b","div");[n,r]=kt(n,r);const s=Wt(n,r),a=ee(s),i=r.equal(a);return je(i,a,s)}});const ii=Mt({dot_:function(t,e){const n=Dt(t,"t1","dot"),r=Dt(e,"t2","dot");C(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(C(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const t=oe(n,[1,-1]),e=oe(r,[-1,1]),s=Le(t,e);return oe(s,[])}if(1===n.rank&&2===r.rank){const t=oe(n,[1,-1]),e=oe(r,[r.shape[0],r.shape[1]]),s=Le(t,e);return oe(s,[s.size])}if(2===n.rank&&1===r.rank){const t=oe(r,[-1,1]),e=Le(n,t);return oe(e,[e.size])}{const t=oe(r,[r.shape[0],r.shape[1]]);return Le(n,t)}}});const oi=Mt({elu_:function(t){const e=Dt(t,"x","elu"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.elu(e);return n([r]),r},n,null,"Elu")}});const li=Mt({erf_:function(t){let e=Dt(t,"x","erf");C("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=e.toFloat());const n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.erf(e);return n([e]),r},n,null,"Erf")}});const ui=Mt({expm1_:function(t){const e=Dt(t,"x","expm1"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.expm1(e);return n([e]),r},n,null,"Expm1")}});const ci=Mt({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Ga([t,e],r),a=t<=e?t:e;for(let t=0;t<a;++t)s.set(1,t,t);const i=s.toTensor().as2D(t,e);if(null==n)return i;if(1===n.length)return An(ms(i,0),[n[0],1,1]);if(2===n.length)return An(ms(ms(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return An(ms(ms(ms(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const hi=Mt({fft_:function(t){C("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return Et.runKernelFunc(e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)},e,null,"FFT")}});function di(t,e,n){const r={shape:t,value:e,dtype:n};return Et.runKernelFunc(r=>r.fill(t,e,n),{},null,"Fill",r)}const pi=Mt({ifft_:function(t){C("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return Et.runKernelFunc(e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.ifft(s).reshape(t.shape)},e,null,"IFFT")}});const fi=Mt({imag_:function(t){const e=Dt(t,"input","imag"),n={input:e};return Et.runKernelFunc(t=>t.imag(e),n,null,"Imag")}});const mi=Mt({real_:function(t){const e=Dt(t,"input","real"),n={input:e};return Et.runKernelFunc(t=>t.real(e),n,null,"Real")}});const gi=Mt({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=oe(t,[n,e]);r=pi(s)}else{const s=[n,2*(e-1)],a=oe(mi(t),[n,e]),i=oe(fi(t),[n,e]),o=vr(ds(a,[0,1],[n,e-2]),1),l=Lt(vr(ds(i,[0,1],[n,e-2]),1),Gt(-1)),u=es([a,o],1),c=es([i,l],1),h=oe(ar(u,c),[s[0],s[1]]);r=pi(h)}if(r=mi(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=oe(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}});const bi=Mt({isFinite_:function(t){const e=Dt(t,"x","isFinite"),n={x:e};return Et.runKernelFunc(t=>t.isFinite(e),n,null,"IsFinite")}});const yi=Mt({isInf_:function(t){const e=Dt(t,"x","isInf"),n={x:e};return Et.runKernelFunc(t=>t.isInf(e),n,null,"IsInf")}});const xi=Mt({isNaN_:function(t){const e=Dt(t,"x","isNaN"),n={x:e};return Et.runKernelFunc(t=>t.isNaN(e),n,null,"IsNan")}});const wi=Mt({leakyRelu_:function(t,e=.2){const n=Dt(t,"x","leakyRelu");return ks(Lt(Gt(e),n),n)}});const vi=Mt({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const a=Dt(t,"x","localResponseNormalization");C(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),C($(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=oe(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:r,beta:s},c=Et.runKernelFunc((t,a)=>{const o=t.localResponseNormalization4D(i,e,n,r,s);return a([i,o]),o},l,null,"LRN",u);return o?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}});const ki=Mt({log1p_:function(t){const e=Dt(t,"x","log1p"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.log1p(e);return n([e]),r},n,null,"Log1p")}});function Ii(t){return Et.customGrad(t)}const Ci=Mt({logSigmoid_:function(t){const e=Dt(t,"x","logSigmoid");return Ii(t=>({value:Ut(Ut(t).softplus()),gradFunc:e=>Lt(e,Kr(Ut(t)))}))(e)}});const Si=Mt({max_:function(t,e=null,n=!1){const r=Dt(t,"x","max"),s={x:r},a={reductionIndices:e,keepDims:n};return Et.runKernelFunc((t,s)=>{let a=M(e,r.shape);const i=pe(a,r.rank);let o=r;null!=i&&(o=hn(r,i),a=me(a.length,o.rank));const l=t.max(o,a);null!=i&&o.dispose();let u=l;if(n){const t=he(u.shape,M(e,r.shape));u=oe(u,t),l.dispose()}return s([r,u]),u},s,null,$t,a)}});const Ei=Mt({logSoftmax_:function(t,e=-1){const n=Dt(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return Et.runKernelFunc((n,r)=>{const s=Si(t,e,!0),a=jt(t,s),i=a.toFloat().sub(a.exp().sum(e,!0).log());return r([i]),i},r,null,"LogSoftmax",s)}});const Ai=Mt({logSumExp_:function(t,e=null,n=!1){const r=Dt(t,"x","logSumExp"),s=M(e,r.shape),a=Si(r,s,!0),i=jt(r,a),o=wn(i),l=ge(o,s),u=cr(l),c=ae(oe(a,u.shape),u);if(n){const t=he(c.shape,s);return oe(c,t)}return c}});const Ni=Mt({logicalOr_:function(t,e){const n=Dt(t,"a","logicalOr","bool"),r=Dt(e,"b","logicalOr","bool");Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc(t=>t.logicalOr(n,r),s,null,"LogicalOr")}});const Ri=Mt({logicalXor_:function(t,e){const n=Dt(t,"a","logicalXor","bool"),r=Dt(e,"b","logicalXor","bool");return Zt(n.shape,r.shape),qe(Ni(t,e),Sr(qe(t,e)))}});const $i=Mt({maxPool_:function(t,e,n,r,s){const a=Dt(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=oe(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),C(Te(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=s&&C($(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const l={x:i},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=Et.runKernelFunc((t,a)=>{const o=ve(i.shape,e,n,1,r,s);let l;return l=1===o.filterWidth&&1===o.filterHeight&&R(o.inShape,o.outShape)?i.clone():t.maxPool(i,o),a([i,l]),l},l,null,"MaxPool",u);return o?oe(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Ti=Mt({maxPool3d_:function(t,e=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:fa("dilations is deprecated, this field will be gone in v3.0.0.");const o=Dt(t,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),C(5===l.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),C("NDHWC"===a,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),C(Te(n,i),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=s&&C($(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c={x:l},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},d=Et.runKernelFunc((t,o)=>{null==i&&(i=[1,1,1]);const u=ke(l.shape,e,n,i,r,s,a),c=t.maxPool3d(l,u);return o([l,c]),c},c,null,"MaxPool3D",h);return u?oe(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const _i=Mt({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const a={x:Dt(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},o=Et.runKernel("MaxPoolWithArgmax",a,i);return{result:o[0],indexes:o[1]}}});const Di=Mt({mean_:function(t,e=null,n=!1){const r=Dt(t,"x","mean"),s=M(e,r.shape),a=N(ce(r.shape,s)[1]);return Ii(t=>{const r=Gt(a),i=r.dtype===t.dtype?t:Ot(t,r.dtype),o=Wt(i,r);return{value:ge(o,e,n),gradFunc:e=>{const n=t.shape.slice();s.forEach(t=>{n[t]=1});const r=oe(e,n);return Wt(Lt(r,ls(t.shape,"float32")),a)}}})(r)}});const Fi=Mt({min_:function(t,e=null,n=!1){const r=Dt(t,"x","min"),s={x:r},a={axis:e,keepDims:n};return Et.runKernelFunc((t,s)=>{const a=M(e,r.shape);let i=a;const o=pe(i,r.rank);let l=r;null!=o&&(l=hn(r,o),i=me(i.length,r.rank));const u=t.min(l,i);null!=o&&l.dispose();let c=u;if(n){const t=he(c.shape,a);c=oe(u,t),u.dispose()}return s([r,c]),c},s,null,"Min",a)}});const Mi=Mt({minimum_:function(t,e){let n=Dt(t,"a","minimum"),r=Dt(e,"b","minimum");[n,r]=kt(n,r),"bool"===n.dtype&&(n=Ot(n,"int32"),r=Ot(r,"int32")),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s},s,null,"Minimum")}});const Oi=Mt({mod_:function(t,e){let n=Dt(t,"a","mod"),r=Dt(e,"b","mod");[n,r]=kt(n,r);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.mod(n,r);return e([n,r]),s},s,null,"Mod")}});const Li=Mt({moments_:function(t,e=null,n=!1){const r=M(e,(t=Dt(t,"x","moments")).shape),s=Di(t,r,n);let a=s.shape;n||(a=he(s.shape,r));const i=qt(jt(Ot(t,"float32"),oe(s,a)));return{mean:s,variance:Di(i,r,n)}}});const Bi=Mt({multiRNNCell_:function(t,e,n,r){const s=Dt(e,"data","multiRNNCell"),a=Ft(n,"c","multiRNNCell"),i=Ft(r,"h","multiRNNCell");let o=s;const l=[];for(let e=0;e<t.length;e++){const n=t[e](o,a[e],i[e]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let t=0;t<l.length;t+=2)u.push(l[t]),c.push(l[t+1]);return[u,c]}});const zi=Mt({multinomial_:function(t,e,n,r=!1){const s=Dt(t,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?s.as2D(1,-1):s,l=Et.runKernelFunc(t=>t.multinomial(o,r,e,n),{logits2D:o});return 1===i?l.as1D():l}});const Pi=Mt({notEqual_:function(t,e){let n=Dt(t,"a","notEqual"),r=Dt(e,"b","notEqual");[n,r]=kt(n,r),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc(t=>t.notEqual(n,r),s,null,"NotEqual")}});const Wi=Mt({onesLike_:function(t){const e=Dt(t,"x","onesLike"),n={x:e};return Et.runKernelFunc((t,n)=>{if("complex64"===e.dtype){const t=Wi(mi(e)),n=ee(fi(e));return ar(t,n)}return t.onesLike(e)},n,null,"OnesLike")}});const Ui=Mt({outerProduct_:function(t,e){const n=Dt(t,"v1","outerProduct"),r=Dt(e,"v2","outerProduct");C(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=oe(n,[-1,1]),a=oe(r,[1,-1]);return Le(s,a)}});const Vi=Mt({pad1d_:function(t,e,n=0){return C(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Mr(t,[e],n)}});const Gi=Mt({pad2d_:function(t,e,n=0){return C(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(t,e,n)}});const Hi=Mt({pad3d_:function(t,e,n=0){return C(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(t,e,n)}});const qi=Mt({pad4d_:function(t,e,n=0){return C(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(t,e,n)}});const ji=Mt({pool_:function(t,e,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Dt(t,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=oe(i,[1,i.shape[0],i.shape[1],i.shape[2]])),C(Te(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const u=ve(o.shape,e,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),s=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],s[e]])}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const r=n.map(t=>t[0]),s=n.map(t=>t[1]),a=t.concat(r,s),i=e.map((t,e)=>(t-a[e]%t)%t),o=s.map((t,e)=>t+i[e]),l=e.map((t,e)=>[r[e],o[e]]),u=e.map((t,e)=>[0,i[e]]);return[l,u]}([u.inHeight,u.inWidth],c,h),m=d?r:"valid",g=d?o:ze(o,c,p),b=("avg"===n?()=>Fa(g,e,a,m):()=>$i(g,e,a,m))(),y=d?b:Yr(b,c,f);return l?oe(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const Ki=Mt({prelu_:function(t,e){const n=Dt(t,"x","prelu"),r=Dt(e,"alpha","prelu"),s={x:n,alpha:r};return Et.runKernelFunc((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s},s,null,"Prelu")}});const Xi=Mt({prod_:function(t,e=null,n=!1){let r=Dt(t,"x","prod");const s={x:r},a={axis:e,keepDims:n};return Et.runKernelFunc(t=>{"bool"===r.dtype&&(r=r.toInt());const s=M(e,r.shape),a=pe(s,r.rank);let i=s,o=r;null!=a&&(o=r.transpose(a),i=me(i.length,r.rank));let l=t.prod(o,i);if(n){const t=he(l.shape,s);l=l.reshape(t)}return l},s,null,"Prod",a)}});const Yi=Mt({rand_:function(t,e,n){const r=N(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);s=new Uint8Array(r)}for(let t=0;t<r;t++)s[t]=e();return Et.makeTensor(s,t,n)}});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function Ji(t,e,n){return t(n={path:e,exports:{},require:function(t,e){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==e&&n.path)}},n.exports),n.exports}var Zi=Ji((function(t){!function(t,e,n){function r(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function s(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function a(t,e){var n=new r(t),a=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,t,!1)})),Qi=Ji((function(t){!function(t,e,n){function r(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,t,!1)})),to=Ji((function(t){!function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,t,!1)})),eo=Ji((function(t){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function s(t,e){return e.x=t.x.slice(),e.i=t.i,e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.x&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,t,!1)})),no=Ji((function(t){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,i,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,a=-32;a<l;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}(e,t)}function s(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.X&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,t,!1)})),ro=Ji((function(t){!function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,t,!1)})),so=Ji((function(t){!function(e,n){var r,a=this,i=n.pow(256,6),o=n.pow(2,52),l=2*o;function u(t,s,u){var f=[],m=d(function t(e,n){var r,s=[],a=typeof e;if(n&&"object"==a)for(r in e)try{s.push(t(e[r],n-1))}catch(t){}return s.length?s:"string"==a?e:e+"\0"}((s=1==s?{entropy:!0}:s||{}).entropy?[t,p(e)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(256):(t=new Uint8Array(256),(a.crypto||a.msCrypto).getRandomValues(t)),p(t)}catch(t){var n=a.navigator,s=n&&n.plugins;return[+new Date,a,s,a.screen,p(e)]}}():t,3),f),g=new c(f),b=function(){for(var t=g.g(6),e=i,n=0;t<o;)t=256*(t+n),e*=256,n=g.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return b.int32=function(){return 0|g.g(4)},b.quick=function(){return g.g(4)/4294967296},b.double=b,d(p(g.S),e),(s.pass||u||function(t,e,r,s){return s&&(s.S&&h(s,g),t.state=function(){return h(g,{})}),r?(n.random=t,e):t})(b,m,"global"in s?s.global:this==n,s.state)}function c(t){var e,n=t.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(t=[n++]);s<256;)i[s]=s++;for(s=0;s<256;s++)i[s]=i[a=255&a+t[s%n]+(e=i[s])],i[a]=e;(r.g=function(t){for(var e,n=0,s=r.i,a=r.j,i=r.S;t--;)e=i[s=255&s+1],n=256*n+i[255&(i[s]=i[a=255&a+e])+(i[a]=e)];return r.i=s,r.j=a,n})(256)}function h(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function d(t,e){for(var n,r=t+"",s=0;s<r.length;)e[255&s]=255&(n^=19*e[255&s])+r.charCodeAt(s++);return p(e)}function p(t){return String.fromCharCode.apply(0,t)}if(n.seedrandom=u,d(n.random(),e),t.exports){t.exports=u;try{r=s.default}catch(t){}}}([],Math)}));so.alea=Zi,so.xor128=Qi,so.xorwow=to,so.xorshift7=eo,so.xor4096=no,so.tychei=ro;var ao=so;class io{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=ao.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class oo{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=ao.alea(s.toString()),this.randn=new io(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class lo{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ao.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const uo=Mt({randomGamma_:function(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const a=new oo(e,n,r,s),i=Ga(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});const co=Mt({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const a=new io(e,n,r,!1,s),i=Ga(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});const ho=Mt({randomUniform_:function(t,e=0,n=1,r="float32",s){const a=Ga(t,r),i=new lo(e,n,null,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});function po(t,e){E(t);const n=Tt(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Vt(t,null,n,e)}function fo(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return Et.runKernelFunc(()=>{if(t===e||t<e&&n<0||e<t&&n>1)return ir([0],r);const s=Y(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return po(s,r)},{},null,"Range",s)}const mo=Mt({reciprocal_:function(t){const e=Dt(t,"x","reciprocal"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.reciprocal(e);return n([e]),r},n,null,"Reciprocal")}});const go=Mt({relu_:function(t){const e=Dt(t,"x","relu"),n={x:e};return Et.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?e.toInt():t.relu(e)),n,null,"Relu")}});const bo=Mt({relu6_:function(t){const e=Dt(t,"x","relu6"),n={x:e};return Et.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Ot(e,"int32"):t.relu6(e)),n,null,"Relu6")}});const yo=Mt({reverse1d_:function(t){const e=Dt(t,"x","reverse");return C(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),vr(e,0)}});const xo=Mt({reverse2d_:function(t,e){const n=Dt(t,"x","reverse");return C(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),vr(n,e)}});const wo=Mt({reverse3d_:function(t,e){const n=Dt(t,"x","reverse");return C(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),vr(n,e)}});const vo=Mt({reverse4d_:function(t,e){const n=Dt(t,"x","reverse");return C(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),vr(n,e)}});const ko=Mt({rfft_:function(t,e){C("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,s=ds(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,s=es([t,ir(r)],t.shape.length-1),n=e}else s=t;const a=ee(s),i=oe(ar(s,a),[r,n]),o=hi(i),l=Math.floor(n/2)+1,u=mi(o),c=fi(o),h=Ye(u,[l,n-l],u.shape.length-1),d=Ye(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,oe(ar(h[0],d[0]),p)}});const Io=Mt({round_:function(t){const e=Dt(t,"x","round"),n={x:e};return Et.runKernelFunc(t=>t.round(e),n,null,"Round")}});const Co=Mt({selu_:function(t){const e=Dt(t,"x","selu"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.selu(e);return n([e]),r},n,null,"Selu")}});const So=Mt({separableConv2d_:function(t,e,n,r,s,a=[1,1],i="NHWC"){const o=Dt(t,"x","separableConv2d"),l=Dt(e,"depthwiseFilter","separableConv2d"),u=Dt(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");C(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),C(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),C(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),C(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),C(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];C(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=ni(c,l,r,s,i,a),m=en(f,u,1,"valid",i);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}});const Eo=async function(t,e){const n=Dt(t,"x","setdiff1d"),r=Dt(e,"y","setdiff1d");C(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),C(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),C(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let t=0;t<s.length;t++)i.has(s[t])||o++;const l=new ut([o],n.dtype),u=new ut([o],"int32");for(let t=0,e=0;t<s.length;t++)i.has(s[t])||(l.values[e]=s[t],u.values[e]=t,e++);return[l.toTensor(),u.toTensor()]};const Ao=Mt({sign_:function(t){const e=Dt(t,"x","sign"),n={x:e};return Et.runKernelFunc(t=>t.sign(e),n,null,"Sign")}});const No=Mt({slice1d_:function(t,e,n){const r=Dt(t,"x","slice1d");return C(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),ds(r,[e],[n])}});const Ro=Mt({slice2d_:function(t,e,n){const r=Dt(t,"x","slice2d");return C(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),ds(r,e,n)}});const $o=Mt({slice3d_:function(t,e,n){const r=Dt(t,"x","slice3d");return C(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),ds(r,e,n)}});const To=Mt({slice4d_:function(t,e,n){const r=Dt(t,"x","slice4d");return C(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),ds(r,e,n)}});const _o=Mt({softmax_:function(t,e=-1){const n=Dt(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return Et.runKernelFunc((t,r)=>{const s=t.softmax(n,e);return r([s]),s},r,null,"Softmax",s)}});const Do=Mt({softplus_:function(t){const e=Dt(t,"x","softplus"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.softplus(e);return n([e]),r},n,null,"Softplus")}});const Fo=Mt({squaredDifference_:function(t,e){let n=Dt(t,"a","squaredDifference"),r=Dt(e,"b","squaredDifference");[n,r]=kt(n,r),Zt(n.shape,r.shape);const s={a:n,b:r};return Et.runKernelFunc((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s},s,null,"SquaredDifference",{})}});const Mo=Mt({squeeze_:function(t,e){const n=Dt(t,"x","squeeze");return oe(n,O(n.shape,e).newShape)}});const Oo=Mt({stridedSlice_:function(t,e,n,r,s=0,a=0,i=0,o=0,l=0){null==r&&(r=new Array(e.length));let u=Dt(t,"x","stridedSlice");const c={x:u},h={begin:e,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Et.runKernelFunc(t=>{const c=Or(i);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=u.rank-e.length,d=Or(o),p=u.shape.slice();if(d.forEach(t=>{e[t]=0,n[t]=1,p.splice(t,0,1)}),u=oe(u,p),c.length&&h>0){const t=c[0],i=h+1;e=function(t,e,n,r,s){const a=[...s],i=zr(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Br(e,n,s);let o=r[i];t&1<<i&&(o=0),a[s]=o}return a}(s,t,i,e,u.shape),n=function(t,e,n,r,s){const a=[...s],i=zr(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Br(e,n,s);let o=r[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let t=0;t<a.length;t++){const e=s[t];a[t]<0&&(a[t]+=e),a[t]=k(0,a[t],s[t])}return a}(a,t,i,n,u.shape),r=function(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}(r,t,i,u.shape)}else for(let t=0;t<u.rank;t++)e[t]=Wr(s,e,r,u.shape,t,i),n[t]=Ur(a,n,r,u.shape,t,i),r[t]=Pr(r,t,i);const f=Or(l);f.forEach(t=>{n[t]=e[t]+1,r[t]=1});const m=Lr(e,n,r),g=m.filter((t,e)=>-1===f.indexOf(e));if(r.every(t=>1===t))return oe(ds(u,e,m),g);return t.stridedSlice(u,e,n,r).reshape(g)},c,null,"StridedSlice",h)}});const Lo=Mt({tan_:function(t){const e=Dt(t,"x","tan"),n={x:e};return Et.runKernelFunc((t,n)=>{const r=t.tan(e);return n([e]),r},n,null,"Tan")}});function Bo(t,e,n){if(E(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Tt(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Vt(t,e,r,n)}function zo(t,e,n){if(E(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Tt(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Vt(t,e,r,n)}const Po=Mt({topk_:function(t,e=1,n=!0){const r=Dt(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+e);const a={x:r},i={k:e,sorted:n},[o,l]=Et.runKernelFunc(t=>t.topk(r,e,n),a,null,"TopK",i);return{values:o,indices:l}}});const Wo=Mt({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new io(e,n,r,!0,s),i=Ga(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});const Uo=Mt({unstack_:function(t,e=0){const n=Dt(t,"x","unstack");C(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return Et.runKernelFunc(t=>t.unstack(n,e),r,null,"Unpack",s)}});function Vo(t,e=!0,n,r){return Et.makeVariable(t,e,n,r)}function Go(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Ga(t,"int32"),s=Ga([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=r.indexToLoc(n[e]),i=e*t.length;s.values.set(a,i)}return s.toTensor()}const Ho=async function(t){const e=Dt(t,"condition","whereAsync","bool"),n=await e.data(),r=Go(e.shape,n);return t!==e&&e.dispose(),r};const qo=async function(t,e,n){const r=Dt(t,"tensor","boolMask"),s=Dt(e,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;C(i>0,()=>"mask cannot be scalar"),S(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let t=a;t<a+i;t++)l*=o[t];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=r.reshape(u),h=s.reshape([-1]),d=await Ho(h),p=d.squeeze([1]),f=vs(c,p,a);return t!==r&&r.dispose(),e!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};const jo=Mt({equalStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","equalStrict"),r=Dt(e,"b","equalStrict");return S(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),Ko=Mt({greaterEqualStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","greaterEqualStrict"),r=Dt(e,"b","greaterEqualStrict");return S(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),Xo=Mt({greaterStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","greaterStrict"),r=Dt(e,"b","greaterStrict");return S(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),Yo=Mt({lessEqualStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","lessEqualStrict"),r=Dt(e,"b","lessEqualStrict");return S(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),Jo=Mt({lessStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","lessStrict"),r=Dt(e,"b","lessStrict");return S(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),Zo=Mt({notEqualStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","notEqualStrict"),r=Dt(e,"b","notEqualStrict");return S(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});const Qo=Mt({addStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","addStrict"),r=Dt(e,"b","addStrict");return S(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),tl=Mt({divStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","div"),r=Dt(e,"b","div");return S(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),el=Mt({maximumStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","maximumStrict"),r=Dt(e,"b","maximumStrict");return S(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),nl=Mt({minimumStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","minimumStrict"),r=Dt(e,"b","minimumStrict");return S(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),rl=Mt({modStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","modStrict"),r=Dt(e,"b","modStrict");return S(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),sl=Mt({mulStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","mul"),r=Dt(e,"b","mul");return S(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),al=Mt({powStrict_:function(t,e){return fa("strict variants of ops have been deprecated and will be removed in future"),S(t.shape,e.shape,"Error in powStrict: "),t.pow(e)}}),il=Mt({squaredDifferenceStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","squaredDifferenceStrict"),r=Dt(e,"b","squaredDifferenceStrict");return S(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),ol=Mt({subStrict_:function(t,e){fa("strict variants of ops have been deprecated and will be removed in future");const n=Dt(t,"a","subStrict"),r=Dt(e,"b","subStrict");return S(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}});const ll=Mt({norm_:function(t,e="euclidean",n=null,r=!1){const s=function t(e,n,r=null){if(0===e.rank)return va(e);if(1!==e.rank&&null===r)return t(oe(e,[-1]),n,r);if(1===e.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return ge(va(e),r);if(n===1/0)return Si(va(e),r);if(n===-1/0)return Fi(va(e),r);if("euclidean"===n||2===n)return Ht(ge(hr(va(e),Gt(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Si(ge(va(e),r[0]),r[1]-1);if(n===1/0)return Si(ge(va(e),r[1]),r[0]);if(n===-1/0)return Fi(ge(va(e),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Ht(ge(qt(e),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(t=Dt(t,"x","norm"),e,n);let a=s.shape;if(r){const e=M(n,t.shape);a=he(s.shape,e)}return s.reshape(a)}});const ul=Mt({movingAverage_:function(t,e,n,r,s=!0){const a=Dt(t,"v","movingAverage"),i=Dt(e,"x","movingAverage"),o=Dt(n,"decay","movingAverage");var l,u;u=i,C((l=a).dtype===u.dtype,()=>`The dtypes of the first(${l.dtype}) and second(${u.dtype}) input must match`),C(R(a.shape,i.shape),()=>"Shape mismatch in v and x");const c=Gt(1),h=jt(c,o);let d=Lt(jt(i,a),h);if(s){C(null!=r,()=>"When using zeroDebias: true, step is required.");const t=Dt(r,"step","movingAverage");d=Wt(d,jt(c,hr(o,t)))}return ae(a,d)}});const cl=Mt({scatterND_:function(t,e,n){const r=Dt(t,"indices","scatterND","int32"),s=Dt(e,"updates","scatterND");ua(s,r,n);const a={indices:r,updates:s},i={shape:n};return Et.runKernelFunc(t=>t.scatterND(r,s,n),a,null,"ScatterNd",i)}});const hl=Mt({sparseToDense_:function(t,e,n,r=0){const s=Dt(t,"sparseIndices","sparseToDense","int32"),a=Dt(e,"sparseValues","sparseToDense"),i=Dt(r,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},l={outputShape:n};return Et.runKernelFunc(t=>t.sparseToDense(s,a,n,i),o,null,"SparseToDense",l)}});const dl=Mt({gatherND_:function(t,e){const n=Dt(e,"indices","gatherND","int32"),r=Dt(t,"x","gatherND"),s={params:r,indices:n};return Et.runKernelFunc(t=>t.gatherND(r,n),s,null,"GatherNd")}});const pl=Mt({dropout_:function(t,e,n,r){const s=Dt(t,"x","dropout");if(C("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),C(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof dt?s.clone():s;const a=function(t,e){if(null==e)return t.shape.slice();if(R(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),i=1-e,o=ho(a,0,1,"float32",r).add(i).floor().div(i);return s.mul(o)}});function fl(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function ml(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(i)}return po(s,"float32")}const gl=async function(t,e,n=1){const r=Dt(t,"predictions","inTopK"),s=Dt(e,"targets","inTopK");C(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),C(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),S(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];C(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);const i=await r.data(),o=await s.data(),[l,u]=[i.length/a,a],c=L("bool",l);for(let t=0;t<l;t++){const e=t*u,r=i.subarray(e,e+u),s=[];for(let t=0;t<r.length;t++)s.push({value:r[t],index:t});s.sort((t,e)=>e.value-t.value),c[t]=0;for(let e=0;e<n;e++)if(s[e].index===o[t]){c[t]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),ts(c,s.shape,"bool")};function bl(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return t.mul(e.step());throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function yl(t,e){let n=e;const r=Jt(t.shape,e.shape);return r.length>0&&(n=n.sum(r)),n.reshape(t.shape)}function xl(t,e,n){if("linear"===e)return t;if("relu"===e)return go(t);if("elu"===e)return oi(t);if("relu6"===e)return bo(t);if("prelu"===e)return Ki(t,n);throw new Error(`Unknown fused activation ${e}.`)}const wl=(t,e)=>!(t>0)||"linear"===e;const vl=Mt({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u}){if(l=l||"linear",!1===wl(Et.state.gradientDepth,l)){let c=en(t,e,n,r,s,a,i);return null!=o&&(c=ae(c,o)),xl(c,l,u)}const c=Dt(t,"x","conv2d"),h=Dt(e,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),C(4===d.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+d.rank+"."),C(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=i&&C($(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),C(d.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`),C(Te(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),C("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const f=Ie(d.shape,h.shape,n,a,r,i);let m,g;null!=o&&(m=Dt(o,"bias","fused conv2d"),[m]=kt(m,c),Zt(f.outShape,m.shape)),null!=u&&(g=Dt(u,"prelu weights","fused conv2d"));const b=(t,e)=>{const[s,i,o,u]=e,c=bl(t,o,l);C($e(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const h=[Qe(i.shape,c,s,n,r),Ze(i,c,s.shape,n,r)];if(null!=u){const t=yl(u,c);h.push(t)}return h},y=t=>t.fusedConv2d({input:d,filter:h,convInfo:f,bias:m,activation:l,preluActivationWeights:g}),x={x:d,filter:h,bias:m,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l};if(null==o){return Ii((t,e,n)=>{let r=Et.runKernelFunc(y,x,null,"FusedConv2D",w);return n([e,t,r]),p&&(r=r.as3D(r.shape[1],r.shape[2],r.shape[3])),{value:r,gradFunc:b}})(d,h)}return Ii((t,e,n,r)=>{let s=Et.runKernelFunc(y,x,null,"FusedConv2D",w);return r([e,t,s,n]),p&&(s=s.as3D(s.shape[1],s.shape[2],s.shape[3])),{value:s,gradFunc:b}})(d,h,m)}});const kl=Mt({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u}){if(!1===wl(Et.state.gradientDepth,l)){let c=ni(t,e,n,r,s,a,i);return null!=o&&(c=ae(c,o)),xl(c,l,u)}const c=Dt(t,"x","depthwiseConv2d"),h=Dt(e,"filter","depthwiseConv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),C(4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),C(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),C(d.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==a&&(a=[1,1]),C(Te(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=i&&C($(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const f=Ie(d.shape,h.shape,n,a,r,i,!0);let m,g;null!=o&&(m=Dt(o,"bias","fused conv2d"),[m]=kt(m,c),Zt(f.outShape,m.shape)),null!=u&&(g=Dt(u,"prelu weights","fused depthwiseConv2d"));const b=(t,e)=>{C($e(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[n,r,s,i]=e,o=bl(t,s,l),u=mn(r.shape,o,n,f),c=fn(r,o,n.shape,f);if(null!=i){return[u,c,yl(m,o)]}return[u,c]},y=t=>t.fusedDepthwiseConv2D({input:d,filter:h,convInfo:f,bias:m,activation:l,preluActivationWeights:g}),x={x:d,filter:h,bias:m,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l};if(null==o){return Ii((t,e,n)=>{let r=Et.runKernelFunc(y,x,null,"FusedDepthwiseConv2D",w);return n([e,t,r]),p&&(r=r.as3D(r.shape[1],r.shape[2],r.shape[3])),{value:r,gradFunc:b}})(d,h)}return Ii((t,e,n,r)=>{let s=Et.runKernelFunc(y,x,null,"FusedDepthwiseConv2D",w);return r([e,t,s,n]),p&&(s=s.as3D(s.shape[1],s.shape[2],s.shape[3])),{value:s,gradFunc:b}})(d,h,m)}});const Il=Mt({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i}){if(!1===wl(Et.state.gradientDepth,a)){let o=Le(t,e,n,r);return null!=s&&(o=ae(o,s)),xl(o,a,i)}let o=Dt(t,"a","fused matMul"),l=Dt(e,"b","fused matMul");[o,l]=kt(o,l);const u=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],p=o.shape.slice(0,-2),f=l.shape.slice(0,-2),m=N(p),g=N(f);C(o.rank>=2&&l.rank>=2&&o.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`),C(R(p,f),()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and `+l.shape+" must match."),C(u===c,()=>`Error in fused matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=o.shape.slice(0,-2).concat([h,d]),y=n?o.as3D(m,u,h):o.as3D(m,h,u),x=r?l.as3D(g,d,c):l.as3D(g,c,d);let w,v;null!=s&&(w=Dt(s,"bias","fused matMul"),[w]=kt(w,o),Zt(b,w.shape)),null!=i&&(v=Dt(i,"prelu weights","fused matMul"));const k=(t,e)=>{const[i,o,l,u]=e,c=bl(oe(t,l.shape),l,a);let h,d;if(n||r?!n&&r?(h=Le(c,o,!1,!1),d=Le(c,i,!0,!1)):n&&!r?(h=Le(o,c,!1,!0),d=Le(i,c,!1,!1)):(h=Le(o,c,!0,!0),d=Le(c,i,!0,!0)):(h=Le(c,o,!1,!0),d=Le(i,c,!0,!1)),null!=s){return[h,d,yl(u,c)]}return[h,d]},I=t=>t.fusedBatchMatMul({a:y,b:x,transposeA:n,transposeB:r,bias:w,activation:a,preluActivationWeights:v}),S={a:y,b:x,bias:w,preluActivationWeights:v},E={transposeA:n,transposeB:r,activation:a};if(null==s){return Ii((t,e,n)=>{const r=Et.runKernelFunc(I,S,null,"_FusedMatMul",E);return n([t,e,r]),{value:oe(r,b),gradFunc:k}})(y,x)}return Ii((t,e,n,r)=>{const s=Et.runKernelFunc(I,S,null,"_FusedMatMul",E);return r([t,e,s,n]),{value:oe(s,b),gradFunc:k}})(y,x,w)}});var Cl=Object.freeze({__proto__:null,conv2d:vl,depthwiseConv2d:kl,matMul:Il});const Sl=Mt({hammingWindow_:function(t){return ml(t,.54,.46)}});const El=Mt({hannWindow_:function(t){return ml(t,.5,.5)}});const Al=Mt({frame_:function(t,e,n,r=!1,s=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(ds(t,a,e)),a+=n;if(r)for(;a<t.size;){const r=a+e-t.size,o=es([ds(t,a,e-r),di([r],s)]);i.push(o),a+=n}return 0===i.length?Bo([],[0,e]):oe(es(i),[i.length,e])}});const Nl=Mt({stft_:function(t,e,n,r,s=El){null==r&&(r=fl(e));const a=Al(t,e,n),i=Lt(a,s(e)),o=[];for(let t=0;t<a.shape[0];t++)o.push(ko(ds(i,[t,0],[1,e]),r));return es(o)}});const Rl=Mt({cropAndResize_:function(t,e,n,r,s,a){const i=Dt(t,"image","cropAndResize"),o=Dt(e,"boxes","cropAndResize","float32"),l=Dt(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const u=o.shape[0];C(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),C(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),C(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),C(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),C(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),C("bilinear"===s||"nearest"===s,()=>"method must be bilinear or nearest, but was "+s);const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Et.runKernelFunc(t=>t.cropAndResize(i,o,l,r,s,a),c,null,"CropAndResize",h)}});const $l=Mt({rotateWithOffset_:function(t,e,n=0,r=.5){const s=Dt(t,"image","rotateWithOffset","float32");C(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const a={image:s},i={radians:e,fillValue:n,center:r};return Et.runKernel("RotateWithOffset",a,i)}});function Tl(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),C(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),C(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),C(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),C(1===e.rank,()=>"scores must be a 1D tensor"),C(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+e.shape[0]),C(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const _l=Mt({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Dt(t,"boxes","nonMaxSuppression"),i=Dt(e,"scores","nonMaxSuppression"),o=Tl(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Et.runKernelFunc(t=>t.nonMaxSuppression(a,i,n,r,s),{boxes:a,scores:i},null,"NonMaxSuppressionV3",l)}});function Dl(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(e,t[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(t,e,n||Fl)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function Fl(t,e){return t>e?1:t<e?-1:0}function Ml(t,e,n,r,s){return Bl(t,e,n,r,s,0).selectedIndices}function Ol(t,e,n,r,s,a){return Bl(t,e,n,r,s,0,!1,a,!0)}function Ll(t,e,n,r,s,a){return Bl(t,e,n,r,s,a,!0)}function Bl(t,e,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(Wl);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=zl(t,a,h[n]);if(i>=r){o=!0;break}if(e.score=e.score*Pl(r,c,i),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(a),d.push(e.score)):e.score>s&&Dl(u,e,Wl))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:po(h,"int32")};return i&&(m.selectedScores=po(d,"float32")),l&&(m.validOutputs=Gt(p,"int32")),m}function zl(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function Pl(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Wl(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Ul=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Dt(t,"boxes","nonMaxSuppressionAsync"),i=Dt(e,"scores","nonMaxSuppressionAsync"),o=Tl(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=Ml(l[0],l[1],n,r,s);return a!==t&&a.dispose(),i!==e&&i.dispose(),u};const Vl=Mt({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Dt(t,"boxes","nonMaxSuppression"),o=Dt(e,"scores","nonMaxSuppression"),l=Tl(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Et.runKernel("NonMaxSuppressionV5",u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const Gl=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Dt(t,"boxes","nonMaxSuppressionAsync"),o=Dt(e,"scores","nonMaxSuppressionAsync"),l=Tl(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=Ll(u[0],u[1],n,r,s,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),c};const Hl=Mt({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Dt(t,"boxes","nonMaxSuppression"),o=Dt(e,"scores","nonMaxSuppression"),l=Tl(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Et.runKernel("NonMaxSuppressionV4",u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const ql=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Dt(t,"boxes","nonMaxSuppressionAsync"),o=Dt(e,"scores","nonMaxSuppressionAsync"),l=Tl(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),f=Ol(d,p,u,c,h,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),f};const jl=Mt({resizeBilinear_:function(t,e,n=!1){const r=Dt(t,"images","resizeBilinear");C(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),C(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+".");let s=r,a=!1;3===r.rank&&(a=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[i,o]=e,l={images:s},u={alignCorners:n,size:e},c=Et.runKernelFunc((t,e)=>(e([s]),t.resizeBilinear(s,i,o,n)),l,null,"ResizeBilinear",u);return a?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}});const Kl=Mt({resizeNearestNeighbor_:function(t,e,n=!1){const r=Dt(t,"images","resizeNearestNeighbor");C(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),C(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),C("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let s=r,a=!1;3===r.rank&&(a=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[i,o]=e,l={images:s},u={alignCorners:n,size:e},c=Et.runKernelFunc((t,e)=>(e([s]),t.resizeNearestNeighbor(s,i,o,n)),l,null,"ResizeNearestNeighbor",u);return a?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}});const Xl=Mt({bandPart_:function(t,e,n){C(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),C(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Dt(t,"a","bandPart");C(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=oe(fo(0,a,1,"int32"),[-1,1]),l=fo(0,i,1,"int32"),u=jt(o,l),c=qe(He(u,Gt(+e,"int32")),Ge(u,Gt(-n,"int32"))),h=ir([a,i],r.dtype);return oe(gs(Uo(oe(r,[-1,a,i])).map(t=>je(c,t,h))),s)}});const Yl=Mt({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,C(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)C(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Ye(t,t.shape[0],0).map(t=>Mo(t,[0]));C(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let e=0;e<t.length;++e)n.push(Et.tidy(()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Lt(ge(Lt(n[r],t)),n[r]);t=jt(t,e)}return Wt(t,ll(t,"euclidean"))}));return e?gs(n,0):n}});function Jl(t,e=!1){return Et.tidy(()=>{C(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=ci(n),a=wr(t);const i=Bo([[1]],[1,1]);let o=wr(i);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=a,l=o,u=s;[o,a,s]=Et.tidy(()=>{const e=ds(a,[t,t],[n-t,1]),l=ll(e),u=ds(a,[t,t],[1,1]),c=je(Qn(u,0),Bo([[-1]]),Bo([[1]])),h=jt(u,Lt(c,l)),d=Wt(e,h);o=1===d.shape[0]?wr(i):es([i,ds(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Ut(Wt(Le(c,h),l)),f=ds(a,[t,0],[n-t,r]),m=Lt(p,o),g=hn(o);if(0===t)a=jt(f,Le(m,Le(g,f)));else{const e=jt(f,Le(m,Le(g,f)));a=es([ds(a,[0,0],[t,r]),e],0)}const b=hn(m),y=ds(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=jt(y,Le(Le(y,o),b));else{const e=jt(y,Le(Le(y,o),b));s=es([ds(s,[0,0],[n,t]),e],1)}return[o,a,s]}),ya([e,l,u])}return!e&&n>r&&(s=ds(s,[0,0],[n,r]),a=ds(a,[0,0],[r,r])),[s,a]})}const Zl=Mt({qr_:function(t,e=!1){if(C(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank),2===t.rank)return Jl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Uo(oe(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];r.forEach(t=>{const[n,r]=Jl(t,e);s.push(n),a.push(r)});return[oe(gs(s,0),t.shape),oe(gs(a,0),t.shape)]}}});var Ql;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ql||(Ql={}));const tu=Mt({computeWeightedLoss_:function(t,e,n=Ql.SUM_BY_NONZERO_WEIGHTS){const r=Dt(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Dt(e,"weights","computeWeightedLoss"));const a=null==s?r:Lt(r,s);if(n===Ql.NONE)return a;if(n===Ql.SUM)return ge(a);if(n===Ql.MEAN){if(null==s)return Di(a);{const t=r.size/s.size,e=Wt(ge(a),ge(s));return t>1?Wt(e,Gt(t)):e}}if(n===Ql.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Wt(ge(a),Gt(r.size));{const t=Lt(s,ls(r.shape)),e=Ot(ge(Pi(t,Gt(0))),"float32");return Wt(ge(a),e)}}throw Error("Unknown reduction: "+n)}});const eu=Mt({absoluteDifference_:function(t,e,n,r=Ql.SUM_BY_NONZERO_WEIGHTS){const s=Dt(t,"labels","absoluteDifference"),a=Dt(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Dt(n,"weights","absoluteDifference")),S(s.shape,a.shape,"Error in absoluteDifference: ");const o=va(jt(s,a));return tu(o,i,r)}});const nu=Mt({cosineDistance_:function(t,e,n,r,s=Ql.SUM_BY_NONZERO_WEIGHTS){const a=Dt(t,"labels","cosineDistance"),i=Dt(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Dt(r,"weights","cosineDistance")),S(a.shape,i.shape,"Error in cosineDistance: ");const l=Gt(1),u=jt(l,ge(Lt(a,i),n,!0));return tu(u,o,s)}});const ru=Mt({hingeLoss_:function(t,e,n,r=Ql.SUM_BY_NONZERO_WEIGHTS){let s=Dt(t,"labels","hingeLoss");const a=Dt(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Dt(n,"weights","hingeLoss")),S(s.shape,a.shape,"Error in hingeLoss: ");const o=Gt(1);s=jt(Lt(Gt(2),s),o);const l=go(jt(o,Lt(s,a)));return tu(l,i,r)}});const su=Mt({huberLoss_:function(t,e,n,r=1,s=Ql.SUM_BY_NONZERO_WEIGHTS){const a=Dt(t,"labels","huberLoss"),i=Dt(e,"predictions","huberLoss");let o=null;null!=n&&(o=Dt(n,"weights","huberLoss")),S(a.shape,i.shape,"Error in huberLoss: ");const l=Gt(r),u=va(jt(i,a)),c=Mi(u,l),h=jt(u,c),d=ae(Lt(Gt(.5),qt(c)),Lt(l,h));return tu(d,o,s)}});const au=Mt({logLoss_:function(t,e,n,r=1e-7,s=Ql.SUM_BY_NONZERO_WEIGHTS){const a=Dt(t,"labels","logLoss"),i=Dt(e,"predictions","logLoss");let o=null;null!=n&&(o=Dt(n,"weights","logLoss")),S(a.shape,i.shape,"Error in logLoss: ");const l=Gt(1),u=Gt(r),c=Ut(Lt(a,cr(ae(i,u)))),h=Lt(jt(l,a),cr(ae(jt(l,i),u))),d=jt(c,h);return tu(d,o,s)}});const iu=Mt({meanSquaredError_:function(t,e,n,r=Ql.SUM_BY_NONZERO_WEIGHTS){const s=Dt(t,"labels","meanSquaredError"),a=Dt(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Dt(n,"weights","meanSquaredError")),S(s.shape,a.shape,"Error in meanSquaredError: ");const o=Fo(s,a);return tu(o,i,r)}});const ou=Mt({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Ql.SUM_BY_NONZERO_WEIGHTS){let a=Dt(t,"multiClassLabels","sigmoidCrossEntropy");const i=Dt(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Dt(n,"weights","sigmoidCrossEntropy")),S(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Gt(r),e=Gt(1),n=Gt(.5);a=ae(Lt(a,jt(e,t)),Lt(n,t))}const l=function(t,e){const n=Dt(t,"labels","sigmoidCrossEntropyWithLogits"),r=Dt(e,"logits","sigmoidCrossEntropyWithLogits");S(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=go(r),a=Lt(r,n),i=ki(wn(Ut(va(r))));return ae(jt(s,a),i)}(a,i);return tu(l,o,s)}});const lu=Mt({softmaxCrossEntropy_:function(t,e,n,r=0,s=Ql.SUM_BY_NONZERO_WEIGHTS){let a=Dt(t,"onehotLabels","softmaxCrossEntropy");const i=Dt(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Dt(n,"weights","softmaxCrossEntropy")),S(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Gt(r),e=Gt(1),n=Gt(a.shape[1]);a=ae(Lt(a,jt(e,t)),Wt(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return Ii((t,e,r)=>{const s=Ai(e,[n],!0),a=jt(Ot(e,"float32"),s);r([t,a]);const i=Ut(Lt(a,t));return{value:ge(i,[n]),gradFunc:(t,e)=>{const[r,s]=e,a=he(t.shape,[n]);return[Lt(oe(t,a),jt(Ot(r,"float32"),wn(s))),Lt(oe(t,a),jt(wn(s),Ot(r,"float32")))]}}})(t,e)}(a,i);return tu(l,o,s)}}),uu={fft:hi,ifft:pi,rfft:ko,irfft:gi},cu={hammingWindow:Sl,hannWindow:El,frame:Al,stft:Nl},hu={resizeNearestNeighbor:Kl,resizeBilinear:jl,rotateWithOffset:$l,cropAndResize:Rl,nonMaxSuppression:_l,nonMaxSuppressionAsync:Ul,nonMaxSuppressionWithScore:Vl,nonMaxSuppressionWithScoreAsync:Gl,nonMaxSuppressionPadded:Hl,nonMaxSuppressionPaddedAsync:ql},du={bandPart:Xl,gramSchmidt:Yl,qr:Zl},pu={absoluteDifference:eu,computeWeightedLoss:tu,cosineDistance:nu,hingeLoss:ru,huberLoss:su,logLoss:au,meanSquaredError:iu,sigmoidCrossEntropy:ou,softmaxCrossEntropy:lu};var fu=Object.freeze({__proto__:null,image:hu,linalg:du,losses:pu,spectral:uu,fused:Cl,signal:cu,abs:va,acos:ka,acosh:Ia,add:ae,addN:Ca,all:Sa,any:Ea,argMax:Aa,argMin:Na,asin:Ra,asinh:$a,atan:Ta,atan2:_a,atanh:Da,avgPool:Fa,avgPool3d:Ma,basicLSTMCell:La,batchToSpaceND:Yr,batchNorm:za,batchNorm2d:Pa,batchNorm3d:Wa,batchNorm4d:Ua,broadcastTo:Va,buffer:Ga,cast:Ot,ceil:Ha,clipByValue:qa,clone:wr,complex:ar,concat:es,concat1d:ja,concat2d:Ka,concat3d:Xa,concat4d:Ya,conv1d:Ja,conv2d:en,conv2dTranspose:Za,conv3d:Qa,conv3dTranspose:ti,cos:Tr,cosh:Dr,cumsum:dn,depthToSpace:ei,depthwiseConv2d:ni,diag:ri,dilation2d:si,div:Wt,divNoNan:ai,dot:ii,elu:oi,equal:Vn,erf:li,exp:wn,expandDims:ms,expm1:ui,eye:ci,fft:hi,fill:di,floor:er,floorDiv:Pt,gather:vs,greater:Qn,greaterEqual:Ge,ifft:pi,imag:fi,irfft:gi,isFinite:bi,isInf:yi,isNaN:xi,leakyRelu:wi,less:qn,lessEqual:He,linspace:function(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return Et.runKernelFunc(r=>r.linspace(t,e,n),{},null,"LinSpace",r)},localResponseNormalization:vi,log:cr,log1p:ki,logSigmoid:Ci,logSoftmax:Ei,logSumExp:Ai,logicalAnd:qe,logicalNot:Sr,logicalOr:Ni,logicalXor:Ri,matMul:Le,max:Si,maxPool:$i,maxPool3d:Ti,maxPoolWithArgmax:_i,maximum:ks,mean:Di,min:Fi,minimum:Mi,mod:Oi,moments:Li,mul:Lt,multiRNNCell:Bi,multinomial:zi,neg:Ut,notEqual:Pi,oneHot:sa,ones:ls,onesLike:Wi,outerProduct:Ui,pad:Mr,pad1d:Vi,pad2d:Gi,pad3d:Hi,pad4d:qi,pool:ji,pow:hr,prelu:Ki,print:function(t,e=!1){console.log(t.toString(e))},prod:Xi,rand:Yi,randomGamma:uo,randomNormal:co,randomUniform:ho,range:fo,real:mi,reciprocal:mo,relu:go,relu6:bo,reshape:oe,reverse:vr,reverse1d:yo,reverse2d:xo,reverse3d:wo,reverse4d:vo,rfft:ko,round:Io,rsqrt:En,scalar:Gt,selu:Co,separableConv2d:So,setdiff1dAsync:Eo,sigmoid:Kr,sign:Ao,sin:on,sinh:un,slice:ds,slice1d:No,slice2d:Ro,slice3d:$o,slice4d:To,softmax:_o,softplus:Do,spaceToBatchND:ze,split:Ye,sqrt:Ht,square:qt,squaredDifference:Fo,squeeze:Mo,stack:gs,step:Bt,stridedSlice:Oo,sub:jt,sum:ge,tan:Lo,tanh:Oa,tensor:ts,tensor1d:po,tensor2d:Bo,tensor3d:aa,tensor4d:zo,tensor5d:function(t,e,n){if(E(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Tt(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Vt(t,e,r,n)},tensor6d:function(t,e,n){if(E(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Tt(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Vt(t,e=e||r,r,n)},tile:An,topk:Po,truncatedNormal:Wo,unsortedSegmentSum:Rn,unstack:Uo,variable:Vo,where:je,whereAsync:Ho,zeros:ir,zerosLike:ee,op:Mt,booleanMaskAsync:qo,equalStrict:jo,greaterEqualStrict:Ko,greaterStrict:Xo,lessEqualStrict:Yo,lessStrict:Jo,notEqualStrict:Zo,addStrict:Qo,divStrict:tl,maximumStrict:el,minimumStrict:nl,modStrict:rl,mulStrict:sl,powStrict:al,squaredDifferenceStrict:il,subStrict:ol,transpose:hn,norm:ll,movingAverage:ul,scatterND:cl,sparseToDense:hl,gatherND:dl,dropout:pl,enclosingPowerOfTwo:fl,cosineWindow:ml,inTopKAsync:gl});class mu extends ha{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:s[t.name]}));this.applyGradients(t)}else this.applyGradients(s);return ya(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){C(G(t),()=>"The f passed in variableGrads(f) must be a function"),C(null==e||Array.isArray(e)&&e.every(t=>t instanceof pt),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in Et.registeredVariables)e.push(Et.registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,s=e.length;C((e=e.filter(t=>t.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:i}=Et.gradients(t,e,null,!0);C(i.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),C(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const o={};return e.forEach((t,e)=>{null!=i[e]&&(o[t.name]=i[e])}),null!=r&&r.forEach(t=>o[t.name]=null),{value:a,grads:o}}(t,e)}dispose(){null!=this.iterations_&&ya(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Gt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(mu,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class gu extends mu{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Et.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Et.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:ba(()=>ee(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:ba(()=>ee(r).variable(!1))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ba(()=>{const t=a.mul(this.rho).add(s.square().mul(1-this.rho)),e=i.add(this.epsilon).sqrt().div(a.add(this.epsilon).sqrt()).mul(s),n=i.mul(this.rho).add(e.square().mul(1-this.rho));a.assign(t),i.assign(n);const o=e.mul(-this.learningRate).add(r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ya(this.accumulatedGrads.map(t=>t.variable)),ya(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}gu.className="Adadelta",pa(gu);class bu extends mu{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Et.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:ba(()=>di(r.shape,this.initialAccumulatorValue).variable(t))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;ba(()=>{const t=a.add(s.square());a.assign(t);const e=s.div(t.add(Et.backend.epsilon()).sqrt()).mul(-this.learningRate).add(r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ya(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}bu.className="Adagrad",pa(bu);class yu extends mu{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ba(()=>{this.accBeta1=Gt(e).variable(),this.accBeta2=Gt(n).variable()}),null==r&&(this.epsilon=Et.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);ba(()=>{const n=jt(1,this.accBeta1),r=jt(1,this.accBeta2);e.forEach((e,s)=>{const a=Et.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:ba(()=>ee(a).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:e+"/v",variable:ba(()=>ee(a).variable(!1))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=o.mul(this.beta1).add(i.mul(1-this.beta1)),c=l.mul(this.beta2).add(i.square().mul(1-this.beta2)),h=u.div(n),d=c.div(r);o.assign(u),l.assign(c);const p=h.div(d.sqrt().add(this.epsilon)).mul(-this.learningRate).add(a);a.assign(p)}),this.accBeta1.assign(this.accBeta1.mul(this.beta1)),this.accBeta2.assign(this.accBeta2.mul(this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ya(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&ya(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),ba(()=>{this.accBeta1.assign(hr(this.beta1,this.iterations_+1)),this.accBeta2.assign(hr(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}yu.className="Adam",pa(yu);class xu extends mu{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ba(()=>{this.iteration=Gt(0).variable(),this.accBeta1=Gt(e).variable()}),null==r&&(this.epsilon=Et.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);ba(()=>{const n=jt(1,this.accBeta1),r=Wt(-this.learningRate,this.iteration.mul(this.decay).add(1));e.forEach((e,s)=>{const a=Et.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:ee(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:e+"/v",variable:ee(a).variable(!1)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=o.mul(this.beta1).add(i.mul(1-this.beta1)),c=l.mul(this.beta2),h=i.abs(),d=c.maximum(h);o.assign(u),l.assign(d);const p=r.div(n).mul(u.div(d.add(this.epsilon))).add(a);a.assign(p)}),this.iteration.assign(this.iteration.add(1)),this.accBeta1.assign(this.accBeta1.mul(this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ya(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&ya(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}xu.className="Adamax",pa(xu);class wu extends mu{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=Et.registeredVariables[e];ba(()=>{const t=this.c.mul(r).add(s);s.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=xa(Gt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}wu.className="SGD",pa(wu);class vu extends wu{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Gt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Et.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:ba(()=>ee(r).variable(t))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&ba(()=>{let t;const e=this.m.mul(s).add(a);t=this.useNesterov?this.c.mul(a.add(e.mul(this.m))).add(r):this.c.mul(e).add(r),s.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ya(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}vu.className="Momentum",pa(vu);class ku extends mu{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Et.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Et.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:ba(()=>ee(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:ba(()=>ee(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:ba(()=>ee(r).variable(!1))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;ba(()=>{const t=a.mul(this.decay).add(s.square().mul(1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,o=e.mul(this.decay).add(s.mul(1-this.decay)),l=i.mul(this.momentum).add(s.mul(this.learningRate).div(t.sub(o.square().add(this.epsilon)).sqrt()));a.assign(t),e.assign(o),i.assign(l);const u=r.sub(l);r.assign(u)}else{const t=a.mul(this.decay).add(s.square().mul(1-this.decay)),e=i.mul(this.momentum).add(s.mul(this.learningRate).div(t.add(this.epsilon).sqrt()));a.assign(t),i.assign(e);const n=r.sub(e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ya(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&ya(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&ya(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}ku.className="RMSProp",pa(ku);class Iu{static sgd(t){return new wu(t)}static momentum(t,e,n=!1){return new vu(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new ku(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new yu(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new gu(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new xu(t,e,n,r,s)}static adagrad(t,e=.1){return new bu(t,e)}}const Cu={sgd:Iu.sgd,momentum:Iu.momentum,adadelta:Iu.adadelta,adagrad:Iu.adagrad,rmsprop:Iu.rmsprop,adamax:Iu.adamax,adam:Iu.adam},Su="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Eu(){return new Promise(t=>Su(()=>t()))}function Au(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Nu(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Ru(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function $u(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Tu(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function _u(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Du(...t){l().getBool("IS_TEST")||console.warn(...t)}function Fu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Mu(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Ou(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Lu(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Bu(t,e){return{real:t[2*e],imag:t[2*e+1]}}function zu(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Pu(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Wu(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Uu(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=ir(t.shape),r=t.toFloat(),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(r=t.dtype,"complex64"===(s=e)||"float32"===s&&"complex64"!==r||"int32"===s&&"float32"!==r&&"complex64"!==r||"bool"===s&&"bool"===r)return Et.makeTensorFromDataId(t.dataId,t.shape,e);var r,s;if("complex64"===t.dtype){const r=n.real(t),s=r.cast(e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=Gt(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function Vu(t,e){return Et.makeTensorFromDataId(t.dataId,e,t.dtype)}function Gu(t,e,n){const r=(e-t)/(n-1),s=Y(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return po(s,"float32")}var Hu=Object.freeze({__proto__:null,segment_util:ws,castTensor:Uu,reshapeTensor:Vu,linspaceImpl:Gu,upcastType:wt,axesAreInnerMostDims:le,combineLocations:ue,computeOutAndReduceShapes:ce,expandShapeToKeepDim:he,assertAxesAreInnerMostDims:de,getAxesPermutation:pe,getUndoAxesPermutation:fe,getInnerMostAxes:me,getBroadcastDims:Yt,getReductionAxes:Jt,assertAndGetBroadcastShape:Zt,assertParamsConsistent:Zr,computeOutShape:Qr,computeDilation2DInfo:we,computePool2DInfo:ve,computePool3DInfo:ke,computeConv2DInfo:Ie,computeConv3DInfo:Ce,computeDefaultPad:Se,tupleValuesAreOne:$e,eitherStridesOrDilationsAreOne:Te,convertConv2DDataFormat:_e,getFusedDyActivation:bl,getFusedBiasGradient:yl,applyActivation:xl,shouldFuse:wl,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:ys,getImageCenter:Au,getReshaped:Nu,getPermuted:Ru,getReshapedPermuted:$u,getSliceBeginCoords:Tu,getSliceSize:_u,prepareAndValidate:oa,validateUpdateShape:la,validateInput:ua,calculateShapes:ca,SELU_SCALEALPHA:1.7580993408473768,SELU_SCALE:Ar,ERF_P:.3275911,ERF_A1:.254829592,ERF_A2:-.284496736,ERF_A3:1.421413741,ERF_A4:-1.453152027,ERF_A5:1.061405429,warn:Du,log:function(...t){l().getBool("IS_TEST")||console.log(...t)},mergeRealAndImagArrays:Fu,splitRealAndImagArrays:Mu,complexWithEvenIndex:Ou,complexWithOddIndex:Lu,getComplexWithIndex:Bu,assignToTypedArray:zu,exponents:Pu,exponent:Wu,prepareSplitSize:Xe});function qu(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map(e=>{const a=[...s];a[n]=e;const i=t.slice(r,a);return r[n]+=e,i})}function ju(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Ga(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const a=t.locToIndex(s);r.values[e]=t.values[a]}return r.toTensor()}function Ku(t,e,n,r,s){const a=e[e.length-1],[i,o]=[t.length/a,a],l=L(n,i*r),u=L("int32",i*r);for(let e=0;e<i;e++){const n=e*o,s=t.subarray(n,n+o),a=[];for(let t=0;t<s.length;t++)a.push({value:s[t],index:t});a.sort((t,e)=>e.value-t.value);const i=e*r,c=l.subarray(i,i+r),h=u.subarray(i,i+r);for(let t=0;t<r;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[ts(l,c,n),ts(u,c,"int32")]}class Xu{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Yu{time(t){return Ju("time")}read(t){return Ju("read")}readSync(t){return Ju("readSync")}numDataIds(){return Ju("numDataIds")}disposeData(t){return Ju("disposeData")}write(t,e,n){return Ju("write")}move(t,e,n,r){return Ju("move")}memory(){return Ju("memory")}floatPrecision(){return Ju("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return Ju("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){return Ju("fusedBatchMatMul")}slice(t,e,n){return Ju("slice")}stridedSlice(t,e,n,r){return Ju("stridedSlice")}unstack(t,e){return Ju("unstack")}reverse(t,e){return Ju("reverse")}concat(t,e){return Ju("concat")}neg(t){return Ju("neg")}add(t,e){return Ju("add")}addN(t){return Ju("addN")}subtract(t,e){return Ju("subtract")}multiply(t,e){return Ju("multiply")}realDivide(t,e){return Ju("realDivide")}floorDiv(t,e){return Ju("floorDiv")}sum(t,e){return Ju("sum")}prod(t,e){return Ju("prod")}unsortedSegmentSum(t,e,n){return Ju("unsortedSegmentSum")}argMin(t,e){return Ju("argMin")}argMax(t,e){return Ju("argMax")}equal(t,e){return Ju("equal")}notEqual(t,e){return Ju("notEqual")}less(t,e){return Ju("less")}lessEqual(t,e){return Ju("lessEqual")}greater(t,e){return Ju("greater")}greaterEqual(t,e){return Ju("greaterEqual")}logicalNot(t){return Ju("logicalNot")}logicalAnd(t,e){return Ju("logicalAnd")}logicalOr(t,e){return Ju("logicalOr")}where(t){return Ju("where")}select(t,e,n){return Ju("select")}topk(t,e,n){return Ju("topk")}min(t,e){return Ju("min")}minimum(t,e){return Ju("minimum")}mod(t,e){return Ju("mod")}max(t,e){return Ju("max")}maximum(t,e){return Ju("maximum")}all(t,e){return Ju("all")}any(t,e){return Ju("any")}squaredDifference(t,e){return Ju("squaredDifference")}ceil(t){return Ju("ceil")}floor(t){return Ju("floor")}round(t){return Ju("round")}sign(t){return Ju("sign")}isNaN(t){return Ju("isNaN")}isInf(t){return Ju("isInf")}isFinite(t){return Ju("isFinite")}pow(t,e){return Ju("pow")}exp(t){return Ju("exp")}expm1(t){return Ju("expm1")}softmax(t,e){return Ju("softmax")}log(t){return Ju("log")}log1p(t){return Ju("log1p")}sqrt(t){return Ju("sqrt")}rsqrt(t){return Ju("rsqrt")}square(t){return Ju("square")}reciprocal(t){return Ju("reciprocal")}relu(t){return Ju("relu")}relu6(t){return Ju("relu6")}prelu(t,e){return Ju("prelu")}elu(t){return Ju("elu")}eluDer(t,e){return Ju("eluDer")}selu(t){return Ju("selu")}int(t){return Ju("int")}clip(t,e,n){return Ju("clip")}abs(t){return Ju("abs")}complexAbs(t){return Ju("complexAbs")}sigmoid(t){return Ju("sigmoid")}softplus(t){return Ju("softplus")}sin(t){return Ju("sin")}cos(t){return Ju("cos")}tan(t){return Ju("tan")}asin(t){return Ju("asin")}acos(t){return Ju("acos")}atan(t){return Ju("atan")}atan2(t,e){return Ju("atan2")}sinh(t){return Ju("sinh")}cosh(t){return Ju("cosh")}tanh(t){return Ju("tanh")}asinh(t){return Ju("asinh")}acosh(t){return Ju("acosh")}atanh(t){return Ju("atanh")}erf(t){return Ju("erf")}step(t,e){return Ju("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return Ju("fusedConv2d")}conv2d(t,e,n){return Ju("conv2d")}conv2dDerInput(t,e,n){return Ju("conv2dDerInput")}conv2dDerFilter(t,e,n){return Ju("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return Ju("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return Ju("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return Ju("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return Ju("depthwiseConv2DDerFilter")}conv3d(t,e,n){return Ju("conv3d")}conv3dDerInput(t,e,n){return Ju("conv3dDerInput")}conv3dDerFilter(t,e,n){return Ju("conv3dDerFilter")}maxPool(t,e){return Ju("maxPool")}maxPoolBackprop(t,e,n,r){return Ju("maxPoolBackprop")}avgPool(t,e){return Ju("avgPool")}avgPoolBackprop(t,e,n){return Ju("avgPoolBackprop")}avgPool3d(t,e){return Ju("avgPool3d")}avgPool3dBackprop(t,e,n){return Ju("avgPool3dBackprop")}maxPool3d(t,e){return Ju("maxPool3d")}maxPool3dBackprop(t,e,n,r){return Ju("maxPool3dBackprop")}reshape(t,e){return Ju("reshape")}cast(t,e){return Ju("cast")}tile(t,e){return Ju("tile")}pad(t,e,n){return Ju("pad")}transpose(t,e){return Ju("transpose")}gather(t,e,n){return Ju("gather")}gatherND(t,e){return Ju("gatherND")}scatterND(t,e,n){return Ju("scatterND")}batchToSpaceND(t,e,n){return Ju("batchToSpaceND")}spaceToBatchND(t,e,n){return Ju("spaceToBatchND")}resizeBilinear(t,e,n,r){return Ju("resizeBilinear")}resizeBilinearBackprop(t,e,n){return Ju("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return Ju("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return Ju("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,a){return Ju("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return Ju("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,a,i){return Ju("LRNGrad")}multinomial(t,e,n,r){return Ju("multinomial")}oneHot(t,e,n,r){return Ju("oneHot")}cumsum(t,e,n,r){return Ju("cumsum")}nonMaxSuppression(t,e,n,r,s){return Ju("nonMaxSuppression")}fft(t){return Ju("fft")}ifft(t){return Ju("ifft")}complex(t,e){return Ju("complex")}real(t){return Ju("real")}imag(t){return Ju("imag")}cropAndResize(t,e,n,r,s,a){return Ju("cropAndResize")}depthToSpace(t,e,n){return Ju("depthToSpace")}split(t,e,n){return Ju("split")}sparseToDense(t,e,n,r){return Ju("sparseToDense")}diag(t){return Ju("diag")}fill(t,e,n){return Ju("fill")}onesLike(t){return Ju("onesLike")}zerosLike(t){return Ju("zerosLike")}linspace(t,e,n){return Ju("linspace")}dispose(){return Ju("dispose")}}function Ju(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}var Zu,Qu;let tc;var ec;dt.prototype.abs=function(){return this.throwIfDisposed(),va(this)},dt.prototype.acos=function(){return this.throwIfDisposed(),ka(this)},dt.prototype.acosh=function(){return this.throwIfDisposed(),Ia(this)},dt.prototype.addStrict=function(t){return this.throwIfDisposed(),Qo(this,t)},dt.prototype.add=function(t){return this.throwIfDisposed(),ae(this,t)},dt.prototype.all=function(t,e){return this.throwIfDisposed(),Sa(this,t,e)},dt.prototype.any=function(t,e){return this.throwIfDisposed(),Ea(this,t,e)},dt.prototype.argMax=function(t){return this.throwIfDisposed(),Aa(this,t)},dt.prototype.argMin=function(t){return this.throwIfDisposed(),Na(this,t)},dt.prototype.asScalar=function(){return this.throwIfDisposed(),C(1===this.size,()=>"The array must have only 1 element."),oe(this,[])},dt.prototype.asType=function(t){return this.throwIfDisposed(),Ot(this,t)},dt.prototype.as1D=function(){return this.throwIfDisposed(),oe(this,[this.size])},dt.prototype.as2D=function(t,e){return this.throwIfDisposed(),oe(this,[t,e])},dt.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),oe(this,[t,e,n])},dt.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),oe(this,[t,e,n,r])},dt.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),oe(this,[t,e,n,r,s])},dt.prototype.asin=function(){return this.throwIfDisposed(),Ra(this)},dt.prototype.asinh=function(){return this.throwIfDisposed(),$a(this)},dt.prototype.atan=function(){return this.throwIfDisposed(),Ta(this)},dt.prototype.atan2=function(t){return this.throwIfDisposed(),_a(this,t)},dt.prototype.atanh=function(){return this.throwIfDisposed(),Da(this)},dt.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Fa(this,t,e,n,r)},dt.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Yr(this,t,e)},dt.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),za(this,t,e,n,r,s)},dt.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Va(this,t)},dt.prototype.cast=function(t){return this.throwIfDisposed(),Ot(this,t)},dt.prototype.ceil=function(){return this.throwIfDisposed(),Ha(this)},dt.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),qa(this,t,e)},dt.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof dt&&(t=[t]),es([this,...t],e)},dt.prototype.conv1d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Ja(this,t,e,n,r,s,a)},dt.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Za(this,t,e,n,r,s)},dt.prototype.conv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),en(this,t,e,n,r,s,a)},dt.prototype.cos=function(){return this.throwIfDisposed(),Tr(this)},dt.prototype.cosh=function(){return this.throwIfDisposed(),Dr(this)},dt.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),dn(this,t,e,n)},dt.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ei(this,t,e)},dt.prototype.depthwiseConv2D=function(t,e,n,r,s,a){return fa("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),ni(this,t,e,n,r,s,a)},dt.prototype.depthwiseConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),ni(this,t,e,n,r,s,a)},dt.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),si(this,t,e,n,r,s)},dt.prototype.divNoNan=function(t){return this.throwIfDisposed(),ai(this,t)},dt.prototype.divStrict=function(t){return this.throwIfDisposed(),tl(this,t)},dt.prototype.div=function(t){return this.throwIfDisposed(),Wt(this,t)},dt.prototype.dot=function(t){return this.throwIfDisposed(),ii(this,t)},dt.prototype.elu=function(){return this.throwIfDisposed(),oi(this)},dt.prototype.equalStrict=function(t){return this.throwIfDisposed(),jo(this,t)},dt.prototype.equal=function(t){return this.throwIfDisposed(),Vn(this,t)},dt.prototype.erf=function(){return this.throwIfDisposed(),li(this)},dt.prototype.exp=function(){return this.throwIfDisposed(),wn(this)},dt.prototype.expandDims=function(t){return this.throwIfDisposed(),ms(this,t)},dt.prototype.expm1=function(){return this.throwIfDisposed(),ui(this)},dt.prototype.fft=function(){return this.throwIfDisposed(),hi(this)},dt.prototype.flatten=function(){return this.throwIfDisposed(),oe(this,[this.size])},dt.prototype.floor=function(){return this.throwIfDisposed(),er(this)},dt.prototype.floorDiv=function(t){return this.throwIfDisposed(),Pt(this,t)},dt.prototype.gather=function(t,e){return this.throwIfDisposed(),vs(this,t,e)},dt.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Ko(this,t)},dt.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ge(this,t)},dt.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Xo(this,t)},dt.prototype.greater=function(t){return this.throwIfDisposed(),Qn(this,t)},dt.prototype.ifft=function(){return this.throwIfDisposed(),pi(this)},dt.prototype.irfft=function(){return this.throwIfDisposed(),gi(this)},dt.prototype.isFinite=function(){return this.throwIfDisposed(),bi(this)},dt.prototype.isInf=function(){return this.throwIfDisposed(),yi(this)},dt.prototype.isNaN=function(){return this.throwIfDisposed(),xi(this)},dt.prototype.leakyRelu=function(t){return this.throwIfDisposed(),wi(this,t)},dt.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Yo(this,t)},dt.prototype.lessEqual=function(t){return this.throwIfDisposed(),He(this,t)},dt.prototype.lessStrict=function(t){return this.throwIfDisposed(),Jo(this,t)},dt.prototype.less=function(t){return this.throwIfDisposed(),qn(this,t)},dt.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),vi(this,t,e,n,r)},dt.prototype.logSigmoid=function(){return this.throwIfDisposed(),Ci(this)},dt.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Ei(this,t)},dt.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Ai(this,t,e)},dt.prototype.log=function(){return this.throwIfDisposed(),cr(this)},dt.prototype.log1p=function(){return this.throwIfDisposed(),ki(this)},dt.prototype.logicalAnd=function(t){return this.throwIfDisposed(),qe(this,t)},dt.prototype.logicalNot=function(){return this.throwIfDisposed(),Sr(this)},dt.prototype.logicalOr=function(t){return this.throwIfDisposed(),Ni(this,t)},dt.prototype.logicalXor=function(t){return this.throwIfDisposed(),Ri(this,t)},dt.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Le(this,t,e,n)},dt.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),$i(this,t,e,n,r)},dt.prototype.max=function(t,e){return this.throwIfDisposed(),Si(this,t,e)},dt.prototype.maximumStrict=function(t){return this.throwIfDisposed(),el(this,t)},dt.prototype.maximum=function(t){return this.throwIfDisposed(),ks(this,t)},dt.prototype.mean=function(t,e){return this.throwIfDisposed(),Di(this,t,e)},dt.prototype.min=function(t,e){return this.throwIfDisposed(),Fi(this,t,e)},dt.prototype.minimumStrict=function(t){return this.throwIfDisposed(),nl(this,t)},dt.prototype.minimum=function(t){return this.throwIfDisposed(),Mi(this,t)},dt.prototype.modStrict=function(t){return this.throwIfDisposed(),rl(this,t)},dt.prototype.mod=function(t){return this.throwIfDisposed(),Oi(this,t)},dt.prototype.mulStrict=function(t){return this.throwIfDisposed(),sl(this,t)},dt.prototype.mul=function(t){return this.throwIfDisposed(),Lt(this,t)},dt.prototype.neg=function(){return this.throwIfDisposed(),Ut(this)},dt.prototype.norm=function(t,e,n){return this.throwIfDisposed(),ll(this,t,e,n)},dt.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Zo(this,t)},dt.prototype.notEqual=function(t){return this.throwIfDisposed(),Pi(this,t)},dt.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),sa(this,t,e,n)},dt.prototype.onesLike=function(){return this.throwIfDisposed(),Wi(this)},dt.prototype.pad=function(t,e){return this.throwIfDisposed(),Mr(this,t,e)},dt.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),ji(this,t,e,n,r,s)},dt.prototype.powStrict=function(t){return this.throwIfDisposed(),al(this,t)},dt.prototype.pow=function(t){return this.throwIfDisposed(),hr(this,t)},dt.prototype.prelu=function(t){return this.throwIfDisposed(),Ki(this,t)},dt.prototype.prod=function(t,e){return this.throwIfDisposed(),Xi(this,t,e)},dt.prototype.reciprocal=function(){return this.throwIfDisposed(),mo(this)},dt.prototype.relu=function(){return this.throwIfDisposed(),go(this)},dt.prototype.relu6=function(){return this.throwIfDisposed(),bo(this)},dt.prototype.reshapeAs=function(t){return this.throwIfDisposed(),oe(this,t.shape)},dt.prototype.reshape=function(t){return this.throwIfDisposed(),oe(this,t)},dt.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),jl(this,t,e)},dt.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),Kl(this,t,e)},dt.prototype.reverse=function(t){return this.throwIfDisposed(),vr(this,t)},dt.prototype.rfft=function(){return this.throwIfDisposed(),ko(this)},dt.prototype.round=function(){return this.throwIfDisposed(),Io(this)},dt.prototype.rsqrt=function(){return this.throwIfDisposed(),En(this)},dt.prototype.selu=function(){return this.throwIfDisposed(),Co(this)},dt.prototype.separableConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),So(this,t,e,n,r,s,a)},dt.prototype.sigmoid=function(){return this.throwIfDisposed(),Kr(this)},dt.prototype.sign=function(){return this.throwIfDisposed(),Ao(this)},dt.prototype.sin=function(){return this.throwIfDisposed(),on(this)},dt.prototype.sinh=function(){return this.throwIfDisposed(),un(this)},dt.prototype.slice=function(t,e){return this.throwIfDisposed(),ds(this,t,e)},dt.prototype.softmax=function(t){return this.throwIfDisposed(),_o(this,t)},dt.prototype.softplus=function(){return this.throwIfDisposed(),Do(this)},dt.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),ze(this,t,e)},dt.prototype.split=function(t,e){return this.throwIfDisposed(),Ye(this,t,e)},dt.prototype.sqrt=function(){return this.throwIfDisposed(),Ht(this)},dt.prototype.square=function(){return this.throwIfDisposed(),qt(this)},dt.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Fo(this,t)},dt.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),il(this,t)},dt.prototype.squeeze=function(t){return this.throwIfDisposed(),Mo(this,t)},dt.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof dt?[this,t]:[this,...t];return gs(n,e)},dt.prototype.step=function(t){return this.throwIfDisposed(),Bt(this,t)},dt.prototype.stridedSlice=function(t,e,n,r,s,a,i,o){return this.throwIfDisposed(),Oo(this,t,e,n,r,s,a,i,o)},dt.prototype.subStrict=function(t){return this.throwIfDisposed(),ol(this,t)},dt.prototype.sub=function(t){return this.throwIfDisposed(),jt(this,t)},dt.prototype.sum=function(t,e){return this.throwIfDisposed(),ge(this,t,e)},dt.prototype.tan=function(){return this.throwIfDisposed(),Lo(this)},dt.prototype.tanh=function(){return this.throwIfDisposed(),Oa(this)},dt.prototype.tile=function(t){return this.throwIfDisposed(),An(this,t)},dt.prototype.toBool=function(){return this.throwIfDisposed(),Ot(this,"bool")},dt.prototype.toFloat=function(){return this.throwIfDisposed(),Ot(this,"float32")},dt.prototype.toInt=function(){return this.throwIfDisposed(),Ot(this,"int32")},dt.prototype.topk=function(t,e){return this.throwIfDisposed(),Po(this,t,e)},dt.prototype.transpose=function(t){return this.throwIfDisposed(),hn(this,t)},dt.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Rn(this,t,e)},dt.prototype.unstack=function(t){return this.throwIfDisposed(),Uo(this,t)},dt.prototype.where=function(t,e){return this.throwIfDisposed(),je(t,this,e)},dt.prototype.zerosLike=function(){return this.throwIfDisposed(),ee(this)},ht=fu,(ec=Zu||(Zu={}))[ec.float32=0]="float32",ec[ec.int32=1]="int32",ec[ec.bool=2]="bool",ec[ec.string=3]="string",ec[ec.complex64=4]="complex64",function(t){t[t.linear=0]="linear",t[t.relu=1]="relu",t[t.relu6=2]="relu6",t[t.prelu=3]="prelu"}(Qu||(Qu={}));const nc={kernelName:"_FusedMatMul",backendName:"wasm",setupFunc:function(t){tc=t.wasm.cwrap("_FusedMatMul",null,["number","array","number","number","array","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a,bias:i,preluActivationWeights:o}=e;if("float32"!==s.dtype||"float32"!==a.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:l,transposeB:u,activation:c}=r,h=n.dataIdMap.get(s.dataId).id,d=n.dataIdMap.get(a.dataId).id;let p=0;if(null!=i){const t=n.dataIdMap.get(i.dataId);if(1!==t.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${t.shape.length}.`);p=t.id}const f=null==o?0:n.dataIdMap.get(o.dataId).id,m=Qu[c];if(null==m)throw new Error(c+" activation not yet supported for FusedConv2D in the wasm backend.");const g=l?s.shape[2]:s.shape[1],b=u?a.shape[1]:a.shape[2],y=s.shape[0],x=n.makeOutput([y,g,b],s.dtype),w=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(s.shape).buffer),k=new Uint8Array(new Int32Array(a.shape).buffer);return tc(h,v,s.shape.length,d,k,a.shape.length,l,u,m,p,f,w),x}};function rc(t){let e;return{kernelName:t,backendName:"wasm",setupFunc:function(n){e=n.wasm.cwrap(t,null,["number","number"])},kernelFunc:function(t){const{backend:n,inputs:{x:r}}=t,s=n.dataIdMap.get(r.dataId).id,a=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(a.dataId).id;return 0===N(a.shape)||e(s,i),a}}}const sc=rc("Abs");function ac(t,e,n){let r;return{kernelName:t,backendName:"wasm",setupFunc:function(e){r=e.wasm.cwrap(t,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(s){const{backend:a,inputs:i}=s,{a:o,b:l}=i,u=a.dataIdMap.get(o.dataId).id,c=a.dataIdMap.get(l.dataId).id,h=null!=n?n:o.dtype,d=Zt(o.shape,l.shape),p=a.makeOutput(d,h);if(0===N(d))return p;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(l.shape).buffer),g=a.dataIdMap.get(p.dataId).id,b=()=>r(u,f,o.shape.length,c,m,l.shape.length,Zu[o.dtype],g);if(e&&"float32"===o.dtype)return b(),p;const y=Yt(o.shape,d),x=Yt(l.shape,d),w=y.every((t,e)=>t===e),v=x.every((t,e)=>t===e);if(w&&v)return b(),p;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${t}.`)}}}const ic=ac("Add",!0);let oc;const lc={kernelName:"AddN",backendName:"wasm",setupFunc:function(t){oc=t.wasm.cwrap("AddN",null,["array","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n}=t,r=n.makeOutput(e[0].shape,e[0].dtype);if(0===N(r.shape))return r;const s=e.map(t=>n.dataIdMap.get(t.dataId).id),a=new Uint8Array(new Int32Array(s).buffer),i=n.dataIdMap.get(r.dataId).id;return oc(a,s.length,Zu[r.dtype],i),r}};function uc(t){const{inputs:{x:e},backend:n}=t,r=n.makeOutput(e.shape,e.dtype),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(r).set(s),r}const cc={kernelName:"Identity",backendName:"wasm",kernelFunc:uc};let hc;function dc(t){const{inputs:e,backend:n,attrs:r}=t,[s,a]=function(t,e){const n=[],r=[];for(let s=0;s<t.length;++s)1!==t[s]&&n.push(t[s]),1!==t[e[s]]&&r.push(e[s]);for(let t=0;t<r.length;++t){let e=-1;for(let n=0;n<r.length;++n)r[n]>=t&&(-1===e||r[e]>r[n])&&(e=n);r[e]=t}return[n,r]}(e.x.shape,r.perm);let i=!0;for(let t=0;t<a.length;t++)a[t]!==t&&(i=!1);const o=function(t,e){const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];return n}(e.x.shape,r.perm),l={dataId:e.x.dataId,shape:s,dtype:e.x.dtype};if(i){const t=uc({inputs:e,backend:n});return t.shape=o,t}const u=n.makeOutput(o,l.dtype),c=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(l.shape).buffer);return hc(c,p,l.shape.length,Zu[l.dtype],h,d,a.length),u}const pc={kernelName:"Transpose",backendName:"wasm",kernelFunc:dc,setupFunc:function(t){hc=t.wasm.cwrap("Transpose",null,["number","array","number","number","number","array","number"])}};function fc(t,e,n){const r=t.shape,s=t.shape.length,a=M(e,r);let i=a;const o=pe(i,s);let l=null,u=!1;if(null!=o){const e=new Array(s);for(let t=0;t<e.length;t++)e[t]=r[o[t]];i=me(i.length,s),l=dc({inputs:{x:t},attrs:{perm:o},backend:n});const a=n.dataIdMap.get(t.dataId).id;n.dataIdMap.get(l.dataId).id!==a&&(u=!0)}return{transposed:l,originalAxes:a,axes:i,inputWasTransposed:u}}let mc;const gc={kernelName:"ArgMax",backendName:"wasm",kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{axis:s}=r,{x:a}=n,i=e.dataIdMap.get(a.dataId).id;let o=i,l=a;const{transposed:u,axes:c,inputWasTransposed:h}=fc(a,s,e);if(h){const t=e.dataIdMap.get(u.dataId).id;t!==i&&(l=u,o=t)}const d=l.shape.slice(0,-1),p=e.makeOutput(d,"int32"),f=e.dataIdMap.get(p.dataId).id,m=N(p.shape),g=l.shape[c[0]];return mc(o,Zu[l.dtype],m,g,f),h&&e.disposeData(u.dataId),p},setupFunc:function(t){mc=t.wasm.cwrap("ArgMax",null,["number","number","number","number","number"])}};let bc;const yc={kernelName:"AvgPool",backendName:"wasm",setupFunc:function(t){bc=t.wasm.cwrap("AvgPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,s=e.x,a=r.dataIdMap.get(s.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,c=ve(s.shape,i,o,1,l,u),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.strideHeight,y=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+c.dataFormat+"'. Please use 'channelsLast'.");if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const w=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return bc(a,s.shape[0],s.shape[1],s.shape[2],h,d,p,f,m,g,b,y,x,v),w}};let xc;const wc={kernelName:"BatchMatMul",backendName:"wasm",setupFunc:function(t){xc=t.wasm.cwrap("BatchMatMul",null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a}=e;if("float32"!==s.dtype||"float32"!==a.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const{transposeA:i,transposeB:o}=r,l=n.dataIdMap.get(s.dataId).id,u=n.dataIdMap.get(a.dataId).id,c=i?s.shape[2]:s.shape[1],h=o?a.shape[1]:a.shape[2],d=s.shape[0],p=n.makeOutput([d,c,h],s.dtype),f=n.dataIdMap.get(p.dataId).id,m=new Uint8Array(new Int32Array(s.shape).buffer),g=new Uint8Array(new Int32Array(a.shape).buffer);return xc(l,m,s.shape.length,u,g,a.shape.length,i,o,f),p}};function vc(t){const{inputs:{x:e},attrs:{dtype:n},backend:r}=t,s=r.makeOutput(e.shape,n),a=r.typedArrayFromHeap(e);return r.typedArrayFromHeap(s).set(a),s}const kc={kernelName:"Cast",backendName:"wasm",kernelFunc:vc};let Ic;const Cc={kernelName:"ClipByValue",backendName:"wasm",setupFunc:function(t){Ic=t.wasm.cwrap("ClipByValue",null,["number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:a,clipValueMax:i}=r,o=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(s.shape,"float32"),u=n.dataIdMap.get(l.dataId).id;return Ic(o,a,i,u),l}},Sc={kernelName:"Concat",backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=M(t.attrs.axis,e[0].shape)[0],s=Qr(e.map(t=>t.shape),r),a=n.makeOutput(s,e[0].dtype),i=N(e[0].shape.slice(0,r));let o=0;const l=e.map(t=>{const e=N(t.shape.slice(r));return o+=e,e}),u=e.map(t=>n.typedArrayFromHeap(t)),c=n.typedArrayFromHeap(a);for(let t=0;t<i;t++){let e=t*o;for(let n=0;n<u.length;n++){const r=l[n],s=t*r,a=u[n].subarray(s,s+r);c.set(a,e),e+=r}}return a}};let Ec;const Ac={kernelName:"Conv2D",backendName:"wasm",setupFunc:function(t){Ec=t.wasm.cwrap("Conv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{x:s,filter:a}=e,i=r.dataIdMap.get(s.dataId).id,o=r.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:h,dataFormat:d}=n,p=_e(d),f=Ie(s.shape,a.shape,l,u,c,h,!1,p),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,C=f.strideWidth,S=f.inChannels,E=f.outChannels,A="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error("wasm backend Conv2D does not support dataFormat:'"+f.dataFormat+"'. Please use 'channelsLast'.");const N=r.makeOutput(f.outShape,"float32"),R=r.dataIdMap.get(N.dataId).id;return Ec(i,s.shape[0],s.shape[1],s.shape[2],o,m,g,b,y,x,w,A,v,k,I,C,S,E,R),N}};let Nc;const Rc={kernelName:"Conv2DBackpropInput",backendName:"wasm",setupFunc:function(t){Nc=t.wasm.cwrap("Conv2DBackpropInput",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{dy:s,filter:a}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:c}=r,h=_e(l),d=Ie(c,a.shape,i,1,o,u,!1,h),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:b,inWidth:y,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=d,C=f-1-d.padInfo.top,S=m-1-d.padInfo.left,E="channelsLast"===d.dataFormat,A=q(d.inShape),N=q(s.shape),[R,$,T]=q(a.shape),_=A[0],D=E?A[1]:A[2],F=E?A[2]:1,M=E?1:A[1],O=N[0],L=E?N[1]:N[2],B=E?N[2]:1,z=E?1:N[1],P=e.makeOutput(d.inShape,"float32"),W=e.dataIdMap.get(P.dataId).id,U=e.dataIdMap.get(s.dataId).id,V=e.dataIdMap.get(a.dataId).id;return Nc(U,V,p,f,m,b,y,g,w,v,x,k,I,C,S,R,$,T,_,D,F,M,O,L,B,z,W),P}},$c=rc("Cos");var Tc;let _c,Dc,Fc,Mc,Oc,Lc,Bc,zc,Pc,Wc,Uc,Vc,Gc,Hc,qc,jc,Kc,Xc,Yc,Jc,Zc,Qc,th,eh,nh;function rh(t,e){const n=new Int32Array(t.wasm.HEAPU8.buffer,e,4),r=n[0],s=n[1],a=n[2],i=n[3];return t.wasm._free(e),{pSelectedIndices:r,selectedSize:s,pSelectedScores:a,pValidOutputs:i}}function sh(t){const{inputs:e,attrs:n}=t,{x:r}=e,{shape:s}=n;return{dataId:r.dataId,shape:s,dtype:r.dtype}}function ah(t){const{inputs:{x:e},attrs:{begin:n,size:r},backend:s}=t,[a,i]=Hr(e,n,r),o=Vr(e.shape,a,i),l=s.typedArrayFromHeap(e),u=s.makeOutput(i,e.dtype),c=s.typedArrayFromHeap(u),h=q(e.shape);if(o){const t=Gr(a,h);return c.set(l.subarray(t,t+N(i))),u}const d=e.shape.length;return 2===d?function(t,e,n,r,s){let a=0;const i=r[0],o=r[1],l=i+s[0];for(let r=i;r<l;r++){const i=r*e+o;n.set(t.subarray(i,i+s[1]),a),a+=s[1]}}(l,h[0],c,a,i):3===d?function(t,e,n,r,s,a){let i=0;const o=s[0],l=s[1],u=s[2],c=o+a[0],h=l+a[1];for(let s=o;s<c;s++)for(let o=l;o<h;o++){const l=s*e+o*n+u;r.set(t.subarray(l,l+a[2]),i),i+=a[2]}}(l,h[0],h[1],c,a,i):4===d?function(t,e,n,r,s,a,i){let o=0;const l=a[0],u=a[1],c=a[2],h=l+i[0],d=u+i[1],p=c+i[2],f=a[3];for(let a=l;a<h;a++)for(let l=u;l<d;l++)for(let u=c;u<p;u++){const c=a*e+l*n+u*r+f;s.set(t.subarray(c,c+i[3]),o),o+=i[3]}}(l,h[0],h[1],h[2],c,a,i):function(t,e,n,r,s){const a=Ga(s,e.dtype,n),i=Ga(e.shape,e.dtype,t);for(let t=0;t<a.size;++t){const e=a.indexToLoc(t).map((t,e)=>t+r[e]);n[t]=i.get(...e)}}(l,e,c,a,i),u}!function(t){t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest"}(Tc||(Tc={}));const ih=[sc,ic,lc,gc,yc,wc,kc,Cc,Sc,Ac,Rc,$c,{kernelName:"CropAndResize",backendName:"wasm",setupFunc:function(t){_c=t.wasm.cwrap("CropAndResize",null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{method:s,extrapolationValue:a,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,c=l.shape[0],[h,d]=i,p=[c,h,d,o.shape[3]];let f,m=e.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=vc({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),m=e.dataIdMap.get(f.dataId));const g=m.id,b=e.dataIdMap.get(l.dataId).id,y=e.dataIdMap.get(u.dataId).id,x=e.makeOutput(p,"float32"),w=e.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return _c(g,b,y,c,v,h,d,Tc[s],a,w),null!=f&&e.disposeData(f.dataId),x}},{kernelName:"DepthwiseConv2dNative",backendName:"wasm",setupFunc:function(t){Dc=t.wasm.cwrap("DepthwiseConv2dNative",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{x:s,filter:a}=e,i=r.dataIdMap.get(s.dataId).id,o=r.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:h}=n,d=null==u?[1,1]:u,p=Ie(s.shape,a.shape,l,d,c,h,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,b=p.padInfo.right,y=p.padInfo.bottom,x=p.padInfo.left,w=p.dilationHeight,v=p.dilationWidth,k=p.strideHeight,I=p.strideWidth,C=p.inChannels,S=p.outChannels,E="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'"+p.dataFormat+"'. Please use 'channelsLast'.");const A=r.makeOutput(p.outShape,"float32"),N=r.dataIdMap.get(A.dataId).id;return Dc(i,s.shape[0],s.shape[1],s.shape[2],o,f,m,g,b,y,x,E,w,v,k,I,C,S,N),A}},ac("Div",!0),ac("Equal",!1,"bool"),rc("Exp"),{kernelName:"Fill",backendName:"wasm",kernelFunc:function(t){const{attrs:{shape:e,value:n,dtype:r},backend:s}=t,a=s.makeOutput(e,r);return s.typedArrayFromHeap(a).fill(n),a}},ac("FloorDiv",!1),nc,{kernelName:"FusedBatchNorm",backendName:"wasm",setupFunc:function(t){Fc=t.wasm.cwrap("FusedBatchNorm",null,["number","number","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{varianceEpsilon:s}=r,{x:a,mean:i,variance:o,offset:l,scale:u}=n,c=e.dataIdMap.get(a.dataId).id,h=e.dataIdMap.get(i.dataId).id,d=e.dataIdMap.get(o.dataId).id,p=null!=l?e.dataIdMap.get(l.dataId).id:0,f=null!=u?e.dataIdMap.get(u.dataId).id:0,m=e.makeOutput(a.shape,a.dtype);if(0===N(a.shape))return m;const g=e.dataIdMap.get(m.dataId).id;return Fc(c,h,d,p,f,s,g),m}},{kernelName:"FusedConv2D",backendName:"wasm",setupFunc:function(t){Mc=t.wasm.cwrap("FusedConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p}=n,f=Ie(s.shape,a.shape,l,c,u,d),m=Qu[p];if(null==m)throw new Error(p+" activation not yet supported for FusedConv2D in the wasm backend.");const g=r.dataIdMap.get(s.dataId).id,b=r.dataIdMap.get(a.dataId).id,y=f.outChannels;let x=0;if(null!=i){const t=r.dataIdMap.get(i.dataId);if(1!==t.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${t.shape.length}.`);if(t.shape[0]!==y)throw new Error(`FusedConv2D bias shape (${t.shape}) does not match the number of output channels (${y})`);x=t.id}const w=f.filterHeight,v=f.filterWidth,k=f.padInfo.top,I=f.padInfo.right,C=f.padInfo.bottom,S=f.padInfo.left,E=f.dilationHeight,A=f.dilationWidth,N=f.strideHeight,R=f.strideWidth,$=f.inChannels,T="SAME"===f.padInfo.type?1:0,_=f.batchSize,D=f.inHeight,F=f.inWidth;if("NHWC"!==h)throw new Error("wasm backend FusedConv2D does not support dataFormat:'"+h+"'. Please use 'NHWC'.");const M=r.makeOutput(f.outShape,"float32"),O=r.dataIdMap.get(M.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return Mc(g,_,D,F,b,w,v,x,k,I,C,S,T,E,A,N,R,$,y,m,L,O),M}},{kernelName:"FusedDepthwiseConv2D",backendName:"wasm",setupFunc:function(t){Oc=t.wasm.cwrap("FusedDepthwiseConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p}=n,f=Ie(s.shape,a.shape,l,c,u,d,!0),m=Qu[p];if(null==m)throw new Error(p+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");const g=r.dataIdMap.get(s.dataId).id,b=r.dataIdMap.get(a.dataId).id,y=f.outChannels;let x=0;if(null!=i){const t=r.dataIdMap.get(i.dataId);if(1!==t.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${t.shape.length}.`);if(t.shape[0]!==y)throw new Error(`FusedDepthwiseConv2D bias shape (${t.shape}) does not match the number of output channels (${y})`);x=t.id}const w=f.filterHeight,v=f.filterWidth,k=f.padInfo.top,I=f.padInfo.right,C=f.padInfo.bottom,S=f.padInfo.left,E=f.dilationHeight,A=f.dilationWidth,N=f.strideHeight,R=f.strideWidth,$=f.inChannels,T="SAME"===f.padInfo.type?1:0,_=f.batchSize,D=f.inHeight,F=f.inWidth;if("NHWC"!==h)throw new Error("wasm backend FusedDepthwiseConv2D does not support dataFormat:'"+h+"'. Please use 'NHWC'.");const M=r.makeOutput(f.outShape,"float32"),O=r.dataIdMap.get(M.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return Oc(g,_,D,F,b,w,v,x,k,I,C,S,T,E,A,N,R,$,y,m,L,O),M}},{kernelName:"GatherNd",backendName:"wasm",setupFunc:function(t){Lc=t.wasm.cwrap("GatherNd",null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(t){const{backend:e,inputs:n}=t,{params:r,indices:s}=n,[a,i,o,l]=oa(r,s),u=e.makeOutput(a,r.dtype);if(0===i)return u;const c=s.shape,h=c[c.length-1],d=e.dataIdMap.get(r.dataId).id,p=e.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=e.dataIdMap.get(u.dataId).id;return Lc(d,Zu[r.dtype],p,i,h,o,f,m),u}},{kernelName:"GatherV2",backendName:"wasm",setupFunc:function(t){Bc=t.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{x:s,indices:a}=n,{axis:i}=r,o=s.shape.slice();o[i]=N(a.shape);const l=s.shape.length-1,u=e.makeOutput(o,s.dtype);if(0===N(s.shape))return u;const c=e.dataIdMap.get(s.dataId).id,h=e.dataIdMap.get(a.dataId).id,d=e.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(q(s.shape)).buffer),f=new Uint8Array(new Int32Array(q(o)).buffer);Bc(c,Zu[s.dtype],p,l,h,i,f,d);const m=xs(s,a,M(i,s.shape)[0]);return u.shape=m.outputShape,u}},ac("Greater",!1,"bool"),ac("GreaterEqual",!1,"bool"),cc,ac("Less",!1,"bool"),ac("LessEqual",!1,"bool"),rc("Log"),ac("LogicalAnd",!1,"bool"),{kernelName:$t,backendName:"wasm",setupFunc:function(t){zc=t.wasm.cwrap($t,null,["number, number, number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{reductionIndices:s,keepDims:a}=r,{x:i}=n;let o=e.dataIdMap.get(i.dataId).id,l=i;const{transposed:u,axes:c,originalAxes:h,inputWasTransposed:d}=fc(i,s,e);d&&(l=u,o=e.dataIdMap.get(u.dataId).id);de("max",c,l.shape.length);const[p,f]=ce(l.shape,c),m=N(f),g=e.makeOutput(p,i.dtype);if(0!==N(l.shape)){const t=e.dataIdMap.get(g.dataId).id;zc(o,m,t)}if(d&&e.disposeData(u.dataId),a){const t=he(g.shape,h);g.shape=t}return g}},ac("Maximum",!1),{kernelName:"MaxPool",backendName:"wasm",setupFunc:function(t){Pc=t.wasm.cwrap("MaxPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,s=e.x,a=r.dataIdMap.get(s.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,c=ve(s.shape,i,o,1,l,u),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.dilationHeight,y=c.dilationWidth,x=c.strideHeight,w=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+c.dataFormat+"'. Please use 'channelsLast'.");const I=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(I.dataId).id;return Pc(a,s.shape[0],s.shape[1],s.shape[2],h,d,p,f,m,g,b,y,x,w,v,k,C),I}},{kernelName:"Min",backendName:"wasm",setupFunc:function(t){Wc=t.wasm.cwrap("Min",null,["number, number, number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{axis:s,keepDims:a}=r,{x:i}=n,o=e.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=fc(i,s,e);if(p){const t=e.dataIdMap.get(c.dataId).id;t!==o&&(u=c,l=t)}de("min",h,u.shape.length);const[f,m]=ce(u.shape,h),g=N(m),b=e.makeOutput(f,u.dtype);if(0!==N(u.shape)){const t=e.dataIdMap.get(b.dataId).id;Wc(l,g,t)}if(p&&e.disposeData(c.dataId),a){const t=he(b.shape,d);b.shape=t}return b}},ac("Minimum",!1),ac("Multiply",!0),rc("Negate"),{kernelName:"NonMaxSuppressionV3",backendName:"wasm",setupFunc:function(t){Uc=t.wasm.cwrap("NonMaxSuppressionV3","number",["number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{iouThreshold:s,maxOutputSize:a,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=e.dataIdMap.get(o.dataId).id,c=e.dataIdMap.get(l.dataId).id,h=Uc(u,c,a,s,i),{pSelectedIndices:d,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=rh(e,h);return e.wasm._free(f),e.wasm._free(m),e.makeOutput([p],"int32",d)}},{kernelName:"NonMaxSuppressionV4",backendName:"wasm",setupFunc:function(t){Vc=t.wasm.cwrap("NonMaxSuppressionV4","number",["number","number","number","number","number","bool"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{iouThreshold:s,maxOutputSize:a,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,c=e.dataIdMap.get(l.dataId).id,h=e.dataIdMap.get(u.dataId).id,d=Vc(c,h,a,s,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rh(e,d);return e.wasm._free(m),[e.makeOutput([f],"int32",p),e.makeOutput([],"int32",g)]}},{kernelName:"NonMaxSuppressionV5",backendName:"wasm",setupFunc:function(t){Gc=t.wasm.cwrap("NonMaxSuppressionV5","number",["number","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{iouThreshold:s,maxOutputSize:a,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,c=e.dataIdMap.get(l.dataId).id,h=e.dataIdMap.get(u.dataId).id,d=Gc(c,h,a,s,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rh(e,d);return e.wasm._free(g),[e.makeOutput([f],"int32",p),e.makeOutput([f],"float32",m)]}},ac("NotEqual",!1,"bool"),{kernelName:"OneHot",backendName:"wasm",setupFunc:function(t){Hc=t.wasm.cwrap("OneHot",null,["number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:a,onValue:i,offValue:o}=r,l=n.makeOutput([...s.shape,a],"int32"),u=n.dataIdMap.get(l.dataId).id,c=n.dataIdMap.get(s.dataId).id;return Hc(c,a,i,o,u),l}},{kernelName:"OnesLike",backendName:"wasm",kernelFunc:function(t){const{inputs:{x:e},backend:n}=t,r=n.makeOutput(e.shape,e.dtype);return n.typedArrayFromHeap(r).fill(1),r}},{kernelName:"PadV2",backendName:"wasm",kernelFunc:function(t){const{inputs:{x:e},backend:n,attrs:{paddings:r,constantValue:s}}=t,a=r.map((t,n)=>t[0]+e.shape[n]+t[1]),i=n.dataIdMap.get(e.dataId).id,o=n.makeOutput(a,e.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),c=r.map(t=>t[0]),h=r.map(t=>t[1]),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return qc(i,u,e.shape.length,Zu[e.dtype],d,p,s,l),o},setupFunc:function(t){qc=t.wasm.cwrap("PadV2",null,["number","array","number","number","array","array","number","number"])}},ac("Pow",!1),{kernelName:"Prelu",backendName:"wasm",setupFunc:function(t){jc=t.wasm.cwrap("Prelu",null,["number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,a=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(s.dataId).id,o=n.makeOutput(r.shape,"float32"),l=n.dataIdMap.get(o.dataId).id;return jc(a,i,l),o}},rc("Relu"),rc("Relu6"),{kernelName:"Reshape",backendName:"wasm",kernelFunc:sh},{kernelName:"ResizeBilinear",backendName:"wasm",setupFunc:function(t){Kc=t.wasm.cwrap("ResizeBilinear",null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{images:s}=n,{alignCorners:a,size:i}=r,[o,l]=i,[u,c,h,d]=s.shape,p=[u,o,l,d];let f,m=e.dataIdMap.get(s.dataId);"float32"!==m.dtype&&(f=vc({backend:e,inputs:{x:s},attrs:{dtype:"float32"}}),m=e.dataIdMap.get(f.dataId));const g=m.id,b=e.makeOutput(p,"float32");if(0===N(s.shape))return b;const y=e.dataIdMap.get(b.dataId).id;return Kc(g,u,c,h,d,o,l,a?1:0,y),null!=f&&e.disposeData(f.dataId),b}},{kernelName:"Reverse",backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:a}=r,i=M(a,s.shape);if(0===s.shape.length)return uc({inputs:{x:s},backend:n});const o=n.makeOutput(s.shape,s.dtype),l=n.dataIdMap.get(s.dataId).id,u=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(s.shape).buffer);return Xc(l,c,i.length,h,s.shape.length,u),sh({inputs:{x:o},attrs:{shape:s.shape},backend:n})},setupFunc:function(t){Xc=t.wasm.cwrap("Reverse",null,["number","array","number","array","number","number"])}},{kernelName:"RotateWithOffset",backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s}=e,{radians:a,fillValue:i,center:o}=r,l=n.makeOutput(s.shape,s.dtype),u=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(l.dataId).id,[h,d,p,f]=s.shape,[m,g]=Au(o,d,p),b="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],y=new Uint8Array(new Int32Array(b).buffer);return Yc(u,h,d,p,f,a,m,g,y,b.length,c),l},setupFunc:function(t){Yc=t.wasm.cwrap("RotateWithOffset",null,["number","number","number","number","number","number","number","number","array","number","number"])}},rc("Rsqrt"),{kernelName:"ScatterNd",backendName:"wasm",setupFunc:function(t){Jc=t.wasm.cwrap("ScatterNd",null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{indices:s,updates:a}=n,{shape:i}=r,o=e.makeOutput(i,a.dtype);if(0===N(i))return o;const{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ca(0,s,i),p=e.dataIdMap.get(s.dataId).id,f=e.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=e.dataIdMap.get(o.dataId).id;return Jc(p,f,Zu[a.dtype],l,u,c,m,d,g),o}},{kernelName:"SelectV2",backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:a}=e,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,l=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(s.shape,s.dtype),c=n.dataIdMap.get(u.dataId).id,h=r.shape.length,d=s.shape.length,p=0===h||h>1||1===d?1:N(s.shape.slice(1));return Zc(i,o,l,p,c),u},setupFunc:function(t){Zc=t.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(t){Qc=t.wasm.cwrap("Sigmoid",null,["number","number"])},kernelFunc:function(t){const{backend:e,inputs:{x:n}}=t,r=e.dataIdMap.get(n.dataId).id,s=e.makeOutput(n.shape,n.dtype),a=e.dataIdMap.get(s.dataId).id;return 0===N(s.shape)||Qc(r,a),s}},rc("Sin"),{kernelName:"Slice",backendName:"wasm",kernelFunc:ah},{kernelName:"Softmax",backendName:"wasm",setupFunc:function(t){th=t.wasm.cwrap("Softmax",null,["number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:{logits:n},attrs:{dim:r}}=t,s=e.dataIdMap.get(n.dataId).id,a=e.makeOutput(n.shape,n.dtype),i=e.dataIdMap.get(a.dataId).id,o=n.shape[r],l=N(n.shape)/o;return 0===N(a.shape)||th(s,i,o,l),a}},{kernelName:"SplitV",backendName:"wasm",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{numOrSizeSplits:a,axis:i}=n,o=M(i,s.shape)[0],l=Xe(s,a,i),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map(t=>{const e=[...c];e[o]=t;const n=ah({inputs:{x:s},attrs:{begin:u,size:e},backend:r});return u[o]+=t,n})}},rc("Sqrt"),rc("Square"),ac("Sub",!0),{kernelName:"Sum",backendName:"wasm",setupFunc:function(t){eh=t.wasm.cwrap("Sum",null,["number, number, number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{axis:s,keepDims:a}=r,{x:i}=n,o=e.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=fc(i,s,e);let f=h;if(p){const t=e.dataIdMap.get(c.dataId).id;t!==o&&(u=c,l=t,f=me(f.length,u.shape.length))}de("sum",f,u.shape.length);const[m,g]=ce(u.shape,f),b=N(g),y=e.makeOutput(m,u.dtype);if(0!==N(u.shape)){const t=e.dataIdMap.get(y.dataId).id;eh(l,b,t)}if(p&&e.disposeData(c.dataId),a){const t=he(y.shape,d);y.shape=t}return y}},rc("Tanh"),{kernelName:"Tile",backendName:"wasm",setupFunc:function(t){nh=t.wasm.cwrap("Tile",null,["number","array","number","array","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,a=n.dataIdMap.get(s.dataId).id,{reps:i}=r,o=new Array(s.shape.length);for(let t=0;t<o.length;t++)o[t]=s.shape[t]*i[t];const l=new Uint8Array(new Int32Array(s.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,s.dtype),h=n.dataIdMap.get(c.dataId).id;return nh(a,l,s.shape.length,u,o.length,Zu[c.dtype],h),c}},pc,{kernelName:"Unpack",backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e,{axis:a}=r,i=s.shape[a],o=s.shape.length,l=new Array(o-1);let u=0;for(let t=0;t<o;t++)t!==a&&(l[u++]=s.shape[t]);const c=new Array(i),h=new Array(o).fill(0),d=s.shape.slice();d[a]=1;for(let t=0;t<c.length;t++)h[a]=t,c[t]=ah({inputs:{x:s},attrs:{begin:h,size:d},backend:n});return c.map(({dataId:t,dtype:e})=>({dataId:t,dtype:e,shape:l}))}},{kernelName:"ZerosLike",backendName:"wasm",kernelFunc:function(t){const{inputs:{x:e},backend:n}=t,r=n.makeOutput(e.shape,e.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const t of ih)y(t);function oh(t,e){return t(e={exports:{}},e.exports),e.exports}l().registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));var lh=oh((function(t,e){var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(t){var e,r=void 0!==(t=t||{})?t:{},s={};for(e in r)r.hasOwnProperty(e)&&(s[e]=r[e]);var o,l,u,c;o="object"==typeof window,l="function"==typeof importScripts,u="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,c=!o&&!u&&!l;var h,d,p,f,m="";u?(m=l?a.default.dirname(m)+"/":__dirname+"/",h=function(t,e){return p||(p=i.default),f||(f=a.default),t=f.normalize(t),p.readFileSync(t,e?null:"utf8")},d=function(t){var e=h(t,!0);return e.buffer||(e=new Uint8Array(e)),k(e.buffer),e},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",(function(t){if(!(t instanceof ot))throw t})),process.on("unhandledRejection",q),r.inspect=function(){return"[Emscripten Module object]"}):c?("undefined"!=typeof read&&(h=function(t){return read(t)}),d=function(t){var e;return"function"==typeof readbuffer?new Uint8Array(readbuffer(t)):(k("object"==typeof(e=read(t,"binary"))),e)},"undefined"!=typeof scriptArgs&&scriptArgs,"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(o||l)&&(l?m=self.location.href:document.currentScript&&(m=document.currentScript.src),n&&(m=n),m=0!==m.indexOf("blob:")?m.substr(0,m.lastIndexOf("/")+1):"",h=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},l&&(d=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}));var g,b,y=r.print||console.log.bind(console),x=r.printErr||console.warn.bind(console);for(e in s)s.hasOwnProperty(e)&&(r[e]=s[e]);s=null,r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,r.quit&&r.quit,r.wasmBinary&&(g=r.wasmBinary),r.noExitRuntime&&r.noExitRuntime,"object"!=typeof WebAssembly&&x("no native wasm support detected");var w=new WebAssembly.Table({initial:151,maximum:151,element:"anyfunc"}),v=!1;function k(t,e){t||q("Assertion failed: "+e)}function I(t){var e=r["_"+t];return k(e,"Cannot call unknown function "+t+", make sure it is exported"),e}function C(t,e,n,r,s){var a={string:function(t){var e=0;if(null!=t&&0!==t){var n=1+(t.length<<2);!function(t,e,n){(function(t,e,n,r){if(!(r>0))return 0;for(var s=n,a=n+r-1,i=0;i<t.length;++i){var o=t.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),o<=127){if(n>=a)break;e[n++]=o}else if(o<=2047){if(n+1>=a)break;e[n++]=192|o>>6,e[n++]=128|63&o}else if(o<=65535){if(n+2>=a)break;e[n++]=224|o>>12,e[n++]=128|o>>6&63,e[n++]=128|63&o}else{if(n+3>=a)break;e[n++]=240|o>>18,e[n++]=128|o>>12&63,e[n++]=128|o>>6&63,e[n++]=128|63&o}}e[n]=0})(t,$,e,n)}(t,e=at(n),n)}return e},array:function(t){var e=at(t.length);return function(t,e){R.set(t,e)}(t,e),e}},i=I(t),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var c=a[n[u]];c?(0===l&&(l=st()),o[u]=c(r[u])):o[u]=r[u]}var h=i.apply(null,o);return h=function(t){return"string"===e?A(t):"boolean"===e?Boolean(t):t}(h),0!==l&&it(l),h}var S="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function E(t,e,n){for(var r=e+n,s=e;t[s]&&!(s>=r);)++s;if(s-e>16&&t.subarray&&S)return S.decode(t.subarray(e,s));for(var a="";e<s;){var i=t[e++];if(128&i){var o=63&t[e++];if(192!=(224&i)){var l=63&t[e++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&t[e++])<65536)a+=String.fromCharCode(i);else{var u=i-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&i)<<6|o)}else a+=String.fromCharCode(i)}return a}function A(t,e){return t?E($,t,e):""}var N,R,$,T;function _(t,e){return t%e>0&&(t+=e-t%e),t}function D(t){N=t,r.HEAP8=R=new Int8Array(t),r.HEAP16=new Int16Array(t),r.HEAP32=T=new Int32Array(t),r.HEAPU8=$=new Uint8Array(t),r.HEAPU16=new Uint16Array(t),r.HEAPU32=new Uint32Array(t),r.HEAPF32=new Float32Array(t),r.HEAPF64=new Float64Array(t)}var F=r.INITIAL_MEMORY||16777216;function M(t){for(;t.length>0;){var e=t.shift();if("function"!=typeof e){var n=e.func;"number"==typeof n?void 0===e.arg?r.dynCall_v(n):r.dynCall_vi(n,e.arg):n(void 0===e.arg?null:e.arg)}else e(r)}}(b=r.wasmMemory?r.wasmMemory:new WebAssembly.Memory({initial:F/65536,maximum:32768}))&&(N=b.buffer),F=N.byteLength,D(N),T[2872]=5254528;var O=[],L=[],B=[],z=[];function P(t){O.unshift(t)}function W(t){z.unshift(t)}var U=Math.ceil,V=Math.floor,G=0,H=null;function q(t){throw r.onAbort&&r.onAbort(t),y(t+=""),x(t),v=!0,t="abort("+t+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(t)}function j(t,e){return String.prototype.startsWith?t.startsWith(e):0===t.indexOf(e)}r.preloadedImages={},r.preloadedAudios={};function K(t){return j(t,"data:application/octet-stream;base64,")}function X(t){return j(t,"file://")}var Y="tfjs-backend-wasm-simd.wasm";function J(){try{if(g)return new Uint8Array(g);if(d)return d(Y);throw"both async and sync fetching of the wasm failed"}catch(t){q(t)}}function Z(t){try{return b.grow(t-N.byteLength+65535>>>16),D(b.buffer),1}catch(t){}}K(Y)||(Y=function(t){return r.locateFile?r.locateFile(t,m):m+t}(Y)),L.push({func:function(){rt()}});var Q={mappings:{},buffers:[null,[],[]],printChar:function(t,e){var n=Q.buffers[t];0===e||10===e?((1===t?y:x)(E(n,0)),n.length=0):n.push(e)},varargs:void 0,get:function(){return Q.varargs+=4,T[Q.varargs-4>>2]},getStr:function(t){return A(t)},get64:function(t,e){return t}};var tt={a:function(){q()},e:function(t,e,n){$.copyWithin(t,e,e+n)},f:function(t){t>>>=0;var e=$.length;if(t>2147483648)return!1;for(var n=1;n<=4;n*=2){var r=e*(1+.2/n);if(r=Math.min(r,t+100663296),Z(Math.min(2147483648,_(Math.max(16777216,t,r),65536))))return!0}return!1},g:function(t){return 0},d:function(t,e,n,r,s){},c:function(t,e,n,r){for(var s=0,a=0;a<n;a++){for(var i=T[e+8*a>>2],o=T[e+(8*a+4)>>2],l=0;l<o;l++)Q.printChar(t,$[i+l]);s+=o}return T[r>>2]=s,0},memory:b,b:function(t){return(t=+t)>=0?+V(t+.5):+U(t-.5)},table:w},et=function(){var t={a:tt};function e(t,e){var n=t.exports;r.asm=n,function(t){if(G--,r.monitorRunDependencies&&r.monitorRunDependencies(G),0==G&&H){var e=H;H=null,e()}}()}function n(t){e(t.instance)}function s(e){return(g||!o&&!l||"function"!=typeof fetch||X(Y)?new Promise((function(t,e){t(J())})):fetch(Y,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at '"+Y+"'";return t.arrayBuffer()})).catch((function(){return J()}))).then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(t){x("failed to asynchronously prepare wasm: "+t),q(t)}))}if(G++,r.monitorRunDependencies&&r.monitorRunDependencies(G),r.instantiateWasm)try{return r.instantiateWasm(t,e)}catch(t){return x("Module.instantiateWasm callback failed with error: "+t),!1}return function(){if(g||"function"!=typeof WebAssembly.instantiateStreaming||K(Y)||X(Y)||"function"!=typeof fetch)return s(n);fetch(Y,{credentials:"same-origin"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(n,(function(t){x("wasm streaming compile failed: "+t),x("falling back to ArrayBuffer instantiation"),s(n)}))}))}(),{}}();r.asm=et;var nt,rt=r.___wasm_call_ctors=function(){return(rt=r.___wasm_call_ctors=r.asm.h).apply(null,arguments)},st=(r._init=function(){return(r._init=r.asm.i).apply(null,arguments)},r._register_tensor=function(){return(r._register_tensor=r.asm.j).apply(null,arguments)},r._dispose_data=function(){return(r._dispose_data=r.asm.k).apply(null,arguments)},r._dispose=function(){return(r._dispose=r.asm.l).apply(null,arguments)},r._Abs=function(){return(r._Abs=r.asm.m).apply(null,arguments)},r._Add=function(){return(r._Add=r.asm.n).apply(null,arguments)},r._AddN=function(){return(r._AddN=r.asm.o).apply(null,arguments)},r._ArgMax=function(){return(r._ArgMax=r.asm.p).apply(null,arguments)},r._AvgPool=function(){return(r._AvgPool=r.asm.q).apply(null,arguments)},r._BatchMatMul=function(){return(r._BatchMatMul=r.asm.r).apply(null,arguments)},r._ClipByValue=function(){return(r._ClipByValue=r.asm.s).apply(null,arguments)},r._Conv2D=function(){return(r._Conv2D=r.asm.t).apply(null,arguments)},r._Conv2DBackpropInput=function(){return(r._Conv2DBackpropInput=r.asm.u).apply(null,arguments)},r._Cos=function(){return(r._Cos=r.asm.v).apply(null,arguments)},r._CropAndResize=function(){return(r._CropAndResize=r.asm.w).apply(null,arguments)},r._DepthwiseConv2dNative=function(){return(r._DepthwiseConv2dNative=r.asm.x).apply(null,arguments)},r._Div=function(){return(r._Div=r.asm.y).apply(null,arguments)},r._Equal=function(){return(r._Equal=r.asm.z).apply(null,arguments)},r._Exp=function(){return(r._Exp=r.asm.A).apply(null,arguments)},r._FloorDiv=function(){return(r._FloorDiv=r.asm.B).apply(null,arguments)},r._FusedBatchNorm=function(){return(r._FusedBatchNorm=r.asm.C).apply(null,arguments)},r._FusedConv2D=function(){return(r._FusedConv2D=r.asm.D).apply(null,arguments)},r._FusedDepthwiseConv2D=function(){return(r._FusedDepthwiseConv2D=r.asm.E).apply(null,arguments)},r._Gather=function(){return(r._Gather=r.asm.F).apply(null,arguments)},r._GatherNd=function(){return(r._GatherNd=r.asm.G).apply(null,arguments)},r._Greater=function(){return(r._Greater=r.asm.H).apply(null,arguments)},r._GreaterEqual=function(){return(r._GreaterEqual=r.asm.I).apply(null,arguments)},r._Less=function(){return(r._Less=r.asm.J).apply(null,arguments)},r._LessEqual=function(){return(r._LessEqual=r.asm.K).apply(null,arguments)},r._Log=function(){return(r._Log=r.asm.L).apply(null,arguments)},r._LogicalAnd=function(){return(r._LogicalAnd=r.asm.M).apply(null,arguments)},r._Max=function(){return(r._Max=r.asm.N).apply(null,arguments)},r._MaxPool=function(){return(r._MaxPool=r.asm.O).apply(null,arguments)},r._Maximum=function(){return(r._Maximum=r.asm.P).apply(null,arguments)},r._Min=function(){return(r._Min=r.asm.Q).apply(null,arguments)},r._Minimum=function(){return(r._Minimum=r.asm.R).apply(null,arguments)},r._Multiply=function(){return(r._Multiply=r.asm.S).apply(null,arguments)},r._Negate=function(){return(r._Negate=r.asm.T).apply(null,arguments)},r._NonMaxSuppressionV3=function(){return(r._NonMaxSuppressionV3=r.asm.U).apply(null,arguments)},r._NonMaxSuppressionV4=function(){return(r._NonMaxSuppressionV4=r.asm.V).apply(null,arguments)},r._NonMaxSuppressionV5=function(){return(r._NonMaxSuppressionV5=r.asm.W).apply(null,arguments)},r._NotEqual=function(){return(r._NotEqual=r.asm.X).apply(null,arguments)},r._OneHot=function(){return(r._OneHot=r.asm.Y).apply(null,arguments)},r._PadV2=function(){return(r._PadV2=r.asm.Z).apply(null,arguments)},r._Pow=function(){return(r._Pow=r.asm._).apply(null,arguments)},r._Prelu=function(){return(r._Prelu=r.asm.$).apply(null,arguments)},r._Relu=function(){return(r._Relu=r.asm.aa).apply(null,arguments)},r._Relu6=function(){return(r._Relu6=r.asm.ba).apply(null,arguments)},r._ResizeBilinear=function(){return(r._ResizeBilinear=r.asm.ca).apply(null,arguments)},r._Reverse=function(){return(r._Reverse=r.asm.da).apply(null,arguments)},r._RotateWithOffset=function(){return(r._RotateWithOffset=r.asm.ea).apply(null,arguments)},r._Rsqrt=function(){return(r._Rsqrt=r.asm.fa).apply(null,arguments)},r._ScatterNd=function(){return(r._ScatterNd=r.asm.ga).apply(null,arguments)},r._SelectV2=function(){return(r._SelectV2=r.asm.ha).apply(null,arguments)},r._Sigmoid=function(){return(r._Sigmoid=r.asm.ia).apply(null,arguments)},r._Sin=function(){return(r._Sin=r.asm.ja).apply(null,arguments)},r._Softmax=function(){return(r._Softmax=r.asm.ka).apply(null,arguments)},r._Sqrt=function(){return(r._Sqrt=r.asm.la).apply(null,arguments)},r._Square=function(){return(r._Square=r.asm.ma).apply(null,arguments)},r._Sub=function(){return(r._Sub=r.asm.na).apply(null,arguments)},r._Sum=function(){return(r._Sum=r.asm.oa).apply(null,arguments)},r._Tanh=function(){return(r._Tanh=r.asm.pa).apply(null,arguments)},r._Tile=function(){return(r._Tile=r.asm.qa).apply(null,arguments)},r._Transpose=function(){return(r._Transpose=r.asm.ra).apply(null,arguments)},r.__FusedMatMul=function(){return(r.__FusedMatMul=r.asm.sa).apply(null,arguments)},r._malloc=function(){return(r._malloc=r.asm.ta).apply(null,arguments)},r._free=function(){return(r._free=r.asm.ua).apply(null,arguments)},r.stackSave=function(){return(st=r.stackSave=r.asm.va).apply(null,arguments)}),at=r.stackAlloc=function(){return(at=r.stackAlloc=r.asm.wa).apply(null,arguments)},it=r.stackRestore=function(){return(it=r.stackRestore=r.asm.xa).apply(null,arguments)};function ot(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function lt(t){function e(){nt||(nt=!0,r.calledRun=!0,v||(M(L),M(B),r.onRuntimeInitialized&&r.onRuntimeInitialized(),function(){if(r.postRun)for("function"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)W(r.postRun.shift());M(z)}()))}G>0||(function(){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)P(r.preRun.shift());M(O)}(),G>0||(r.setStatus?(r.setStatus("Running..."),setTimeout((function(){setTimeout((function(){r.setStatus("")}),1),e()}),1)):e()))}if(r.dynCall_vi=function(){return(r.dynCall_vi=r.asm.ya).apply(null,arguments)},r.dynCall_v=function(){return(r.dynCall_v=r.asm.za).apply(null,arguments)},r.asm=et,r.cwrap=function(t,e,n,r){var s=(n=n||[]).every((function(t){return"number"===t}));return"string"!==e&&s&&!r?I(t):function(){return C(t,e,n,arguments)}},r.then=function(t){if(nt)t(r);else{var e=r.onRuntimeInitialized;r.onRuntimeInitialized=function(){e&&e(),t(r)}}return r},H=function t(){nt||lt(),nt||(H=t)},r.run=lt,r.preInit)for("function"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();return lt(),t});t.exports=r})),uh=oh((function(t,e){var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(t){var e,r=void 0!==(t=t||{})?t:{},s={};for(e in r)r.hasOwnProperty(e)&&(s[e]=r[e]);var o,l,u,c;o="object"==typeof window,l="function"==typeof importScripts,u="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,c=!o&&!u&&!l;var h,d,p,f,m="";u?(m=l?a.default.dirname(m)+"/":__dirname+"/",h=function(t,e){return p||(p=i.default),f||(f=a.default),t=f.normalize(t),p.readFileSync(t,e?null:"utf8")},d=function(t){var e=h(t,!0);return e.buffer||(e=new Uint8Array(e)),k(e.buffer),e},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",(function(t){if(!(t instanceof ot))throw t})),process.on("unhandledRejection",q),r.inspect=function(){return"[Emscripten Module object]"}):c?("undefined"!=typeof read&&(h=function(t){return read(t)}),d=function(t){var e;return"function"==typeof readbuffer?new Uint8Array(readbuffer(t)):(k("object"==typeof(e=read(t,"binary"))),e)},"undefined"!=typeof scriptArgs&&scriptArgs,"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(o||l)&&(l?m=self.location.href:document.currentScript&&(m=document.currentScript.src),n&&(m=n),m=0!==m.indexOf("blob:")?m.substr(0,m.lastIndexOf("/")+1):"",h=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},l&&(d=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}));var g,b,y=r.print||console.log.bind(console),x=r.printErr||console.warn.bind(console);for(e in s)s.hasOwnProperty(e)&&(r[e]=s[e]);s=null,r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,r.quit&&r.quit,r.wasmBinary&&(g=r.wasmBinary),r.noExitRuntime&&r.noExitRuntime,"object"!=typeof WebAssembly&&x("no native wasm support detected");var w=new WebAssembly.Table({initial:146,maximum:146,element:"anyfunc"}),v=!1;function k(t,e){t||q("Assertion failed: "+e)}function I(t){var e=r["_"+t];return k(e,"Cannot call unknown function "+t+", make sure it is exported"),e}function C(t,e,n,r,s){var a={string:function(t){var e=0;if(null!=t&&0!==t){var n=1+(t.length<<2);!function(t,e,n){(function(t,e,n,r){if(!(r>0))return 0;for(var s=n,a=n+r-1,i=0;i<t.length;++i){var o=t.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),o<=127){if(n>=a)break;e[n++]=o}else if(o<=2047){if(n+1>=a)break;e[n++]=192|o>>6,e[n++]=128|63&o}else if(o<=65535){if(n+2>=a)break;e[n++]=224|o>>12,e[n++]=128|o>>6&63,e[n++]=128|63&o}else{if(n+3>=a)break;e[n++]=240|o>>18,e[n++]=128|o>>12&63,e[n++]=128|o>>6&63,e[n++]=128|63&o}}e[n]=0})(t,$,e,n)}(t,e=at(n),n)}return e},array:function(t){var e=at(t.length);return function(t,e){R.set(t,e)}(t,e),e}},i=I(t),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var c=a[n[u]];c?(0===l&&(l=st()),o[u]=c(r[u])):o[u]=r[u]}var h=i.apply(null,o);return h=function(t){return"string"===e?A(t):"boolean"===e?Boolean(t):t}(h),0!==l&&it(l),h}var S="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function E(t,e,n){for(var r=e+n,s=e;t[s]&&!(s>=r);)++s;if(s-e>16&&t.subarray&&S)return S.decode(t.subarray(e,s));for(var a="";e<s;){var i=t[e++];if(128&i){var o=63&t[e++];if(192!=(224&i)){var l=63&t[e++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&t[e++])<65536)a+=String.fromCharCode(i);else{var u=i-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&i)<<6|o)}else a+=String.fromCharCode(i)}return a}function A(t,e){return t?E($,t,e):""}var N,R,$,T;function _(t,e){return t%e>0&&(t+=e-t%e),t}function D(t){N=t,r.HEAP8=R=new Int8Array(t),r.HEAP16=new Int16Array(t),r.HEAP32=T=new Int32Array(t),r.HEAPU8=$=new Uint8Array(t),r.HEAPU16=new Uint16Array(t),r.HEAPU32=new Uint32Array(t),r.HEAPF32=new Float32Array(t),r.HEAPF64=new Float64Array(t)}var F=r.INITIAL_MEMORY||16777216;function M(t){for(;t.length>0;){var e=t.shift();if("function"!=typeof e){var n=e.func;"number"==typeof n?void 0===e.arg?r.dynCall_v(n):r.dynCall_vi(n,e.arg):n(void 0===e.arg?null:e.arg)}else e(r)}}(b=r.wasmMemory?r.wasmMemory:new WebAssembly.Memory({initial:F/65536,maximum:32768}))&&(N=b.buffer),F=N.byteLength,D(N),T[2940]=5254800;var O=[],L=[],B=[],z=[];function P(t){O.unshift(t)}function W(t){z.unshift(t)}var U=Math.ceil,V=Math.floor,G=0,H=null;function q(t){throw r.onAbort&&r.onAbort(t),y(t+=""),x(t),v=!0,t="abort("+t+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(t)}function j(t,e){return String.prototype.startsWith?t.startsWith(e):0===t.indexOf(e)}r.preloadedImages={},r.preloadedAudios={};function K(t){return j(t,"data:application/octet-stream;base64,")}function X(t){return j(t,"file://")}var Y="tfjs-backend-wasm.wasm";function J(){try{if(g)return new Uint8Array(g);if(d)return d(Y);throw"both async and sync fetching of the wasm failed"}catch(t){q(t)}}function Z(t){try{return b.grow(t-N.byteLength+65535>>>16),D(b.buffer),1}catch(t){}}K(Y)||(Y=function(t){return r.locateFile?r.locateFile(t,m):m+t}(Y)),L.push({func:function(){rt()}});var Q={mappings:{},buffers:[null,[],[]],printChar:function(t,e){var n=Q.buffers[t];0===e||10===e?((1===t?y:x)(E(n,0)),n.length=0):n.push(e)},varargs:void 0,get:function(){return Q.varargs+=4,T[Q.varargs-4>>2]},getStr:function(t){return A(t)},get64:function(t,e){return t}};var tt={a:function(){q()},e:function(t,e,n){$.copyWithin(t,e,e+n)},f:function(t){t>>>=0;var e=$.length;if(t>2147483648)return!1;for(var n=1;n<=4;n*=2){var r=e*(1+.2/n);if(r=Math.min(r,t+100663296),Z(Math.min(2147483648,_(Math.max(16777216,t,r),65536))))return!0}return!1},g:function(t){return 0},d:function(t,e,n,r,s){},c:function(t,e,n,r){for(var s=0,a=0;a<n;a++){for(var i=T[e+8*a>>2],o=T[e+(8*a+4)>>2],l=0;l<o;l++)Q.printChar(t,$[i+l]);s+=o}return T[r>>2]=s,0},memory:b,b:function(t){return(t=+t)>=0?+V(t+.5):+U(t-.5)},table:w},et=function(){var t={a:tt};function e(t,e){var n=t.exports;r.asm=n,function(t){if(G--,r.monitorRunDependencies&&r.monitorRunDependencies(G),0==G&&H){var e=H;H=null,e()}}()}function n(t){e(t.instance)}function s(e){return(g||!o&&!l||"function"!=typeof fetch||X(Y)?new Promise((function(t,e){t(J())})):fetch(Y,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at '"+Y+"'";return t.arrayBuffer()})).catch((function(){return J()}))).then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(t){x("failed to asynchronously prepare wasm: "+t),q(t)}))}if(G++,r.monitorRunDependencies&&r.monitorRunDependencies(G),r.instantiateWasm)try{return r.instantiateWasm(t,e)}catch(t){return x("Module.instantiateWasm callback failed with error: "+t),!1}return function(){if(g||"function"!=typeof WebAssembly.instantiateStreaming||K(Y)||X(Y)||"function"!=typeof fetch)return s(n);fetch(Y,{credentials:"same-origin"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(n,(function(t){x("wasm streaming compile failed: "+t),x("falling back to ArrayBuffer instantiation"),s(n)}))}))}(),{}}();r.asm=et;var nt,rt=r.___wasm_call_ctors=function(){return(rt=r.___wasm_call_ctors=r.asm.h).apply(null,arguments)},st=(r._init=function(){return(r._init=r.asm.i).apply(null,arguments)},r._register_tensor=function(){return(r._register_tensor=r.asm.j).apply(null,arguments)},r._dispose_data=function(){return(r._dispose_data=r.asm.k).apply(null,arguments)},r._dispose=function(){return(r._dispose=r.asm.l).apply(null,arguments)},r._Abs=function(){return(r._Abs=r.asm.m).apply(null,arguments)},r._Add=function(){return(r._Add=r.asm.n).apply(null,arguments)},r._AddN=function(){return(r._AddN=r.asm.o).apply(null,arguments)},r._ArgMax=function(){return(r._ArgMax=r.asm.p).apply(null,arguments)},r._AvgPool=function(){return(r._AvgPool=r.asm.q).apply(null,arguments)},r._BatchMatMul=function(){return(r._BatchMatMul=r.asm.r).apply(null,arguments)},r._ClipByValue=function(){return(r._ClipByValue=r.asm.s).apply(null,arguments)},r._Conv2D=function(){return(r._Conv2D=r.asm.t).apply(null,arguments)},r._Conv2DBackpropInput=function(){return(r._Conv2DBackpropInput=r.asm.u).apply(null,arguments)},r._Cos=function(){return(r._Cos=r.asm.v).apply(null,arguments)},r._CropAndResize=function(){return(r._CropAndResize=r.asm.w).apply(null,arguments)},r._DepthwiseConv2dNative=function(){return(r._DepthwiseConv2dNative=r.asm.x).apply(null,arguments)},r._Div=function(){return(r._Div=r.asm.y).apply(null,arguments)},r._Equal=function(){return(r._Equal=r.asm.z).apply(null,arguments)},r._Exp=function(){return(r._Exp=r.asm.A).apply(null,arguments)},r._FloorDiv=function(){return(r._FloorDiv=r.asm.B).apply(null,arguments)},r._FusedBatchNorm=function(){return(r._FusedBatchNorm=r.asm.C).apply(null,arguments)},r._FusedConv2D=function(){return(r._FusedConv2D=r.asm.D).apply(null,arguments)},r._FusedDepthwiseConv2D=function(){return(r._FusedDepthwiseConv2D=r.asm.E).apply(null,arguments)},r._Gather=function(){return(r._Gather=r.asm.F).apply(null,arguments)},r._GatherNd=function(){return(r._GatherNd=r.asm.G).apply(null,arguments)},r._Greater=function(){return(r._Greater=r.asm.H).apply(null,arguments)},r._GreaterEqual=function(){return(r._GreaterEqual=r.asm.I).apply(null,arguments)},r._Less=function(){return(r._Less=r.asm.J).apply(null,arguments)},r._LessEqual=function(){return(r._LessEqual=r.asm.K).apply(null,arguments)},r._Log=function(){return(r._Log=r.asm.L).apply(null,arguments)},r._LogicalAnd=function(){return(r._LogicalAnd=r.asm.M).apply(null,arguments)},r._Max=function(){return(r._Max=r.asm.N).apply(null,arguments)},r._MaxPool=function(){return(r._MaxPool=r.asm.O).apply(null,arguments)},r._Maximum=function(){return(r._Maximum=r.asm.P).apply(null,arguments)},r._Min=function(){return(r._Min=r.asm.Q).apply(null,arguments)},r._Minimum=function(){return(r._Minimum=r.asm.R).apply(null,arguments)},r._Multiply=function(){return(r._Multiply=r.asm.S).apply(null,arguments)},r._Negate=function(){return(r._Negate=r.asm.T).apply(null,arguments)},r._NonMaxSuppressionV3=function(){return(r._NonMaxSuppressionV3=r.asm.U).apply(null,arguments)},r._NonMaxSuppressionV4=function(){return(r._NonMaxSuppressionV4=r.asm.V).apply(null,arguments)},r._NonMaxSuppressionV5=function(){return(r._NonMaxSuppressionV5=r.asm.W).apply(null,arguments)},r._NotEqual=function(){return(r._NotEqual=r.asm.X).apply(null,arguments)},r._OneHot=function(){return(r._OneHot=r.asm.Y).apply(null,arguments)},r._PadV2=function(){return(r._PadV2=r.asm.Z).apply(null,arguments)},r._Pow=function(){return(r._Pow=r.asm._).apply(null,arguments)},r._Prelu=function(){return(r._Prelu=r.asm.$).apply(null,arguments)},r._Relu=function(){return(r._Relu=r.asm.aa).apply(null,arguments)},r._Relu6=function(){return(r._Relu6=r.asm.ba).apply(null,arguments)},r._ResizeBilinear=function(){return(r._ResizeBilinear=r.asm.ca).apply(null,arguments)},r._Reverse=function(){return(r._Reverse=r.asm.da).apply(null,arguments)},r._RotateWithOffset=function(){return(r._RotateWithOffset=r.asm.ea).apply(null,arguments)},r._Rsqrt=function(){return(r._Rsqrt=r.asm.fa).apply(null,arguments)},r._ScatterNd=function(){return(r._ScatterNd=r.asm.ga).apply(null,arguments)},r._SelectV2=function(){return(r._SelectV2=r.asm.ha).apply(null,arguments)},r._Sigmoid=function(){return(r._Sigmoid=r.asm.ia).apply(null,arguments)},r._Sin=function(){return(r._Sin=r.asm.ja).apply(null,arguments)},r._Softmax=function(){return(r._Softmax=r.asm.ka).apply(null,arguments)},r._Sqrt=function(){return(r._Sqrt=r.asm.la).apply(null,arguments)},r._Square=function(){return(r._Square=r.asm.ma).apply(null,arguments)},r._Sub=function(){return(r._Sub=r.asm.na).apply(null,arguments)},r._Sum=function(){return(r._Sum=r.asm.oa).apply(null,arguments)},r._Tanh=function(){return(r._Tanh=r.asm.pa).apply(null,arguments)},r._Tile=function(){return(r._Tile=r.asm.qa).apply(null,arguments)},r._Transpose=function(){return(r._Transpose=r.asm.ra).apply(null,arguments)},r.__FusedMatMul=function(){return(r.__FusedMatMul=r.asm.sa).apply(null,arguments)},r._malloc=function(){return(r._malloc=r.asm.ta).apply(null,arguments)},r._free=function(){return(r._free=r.asm.ua).apply(null,arguments)},r.stackSave=function(){return(st=r.stackSave=r.asm.va).apply(null,arguments)}),at=r.stackAlloc=function(){return(at=r.stackAlloc=r.asm.wa).apply(null,arguments)},it=r.stackRestore=function(){return(it=r.stackRestore=r.asm.xa).apply(null,arguments)};function ot(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function lt(t){function e(){nt||(nt=!0,r.calledRun=!0,v||(M(L),M(B),r.onRuntimeInitialized&&r.onRuntimeInitialized(),function(){if(r.postRun)for("function"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)W(r.postRun.shift());M(z)}()))}G>0||(function(){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)P(r.preRun.shift());M(O)}(),G>0||(r.setStatus?(r.setStatus("Running..."),setTimeout((function(){setTimeout((function(){r.setStatus("")}),1),e()}),1)):e()))}if(r.dynCall_vi=function(){return(r.dynCall_vi=r.asm.ya).apply(null,arguments)},r.dynCall_v=function(){return(r.dynCall_v=r.asm.za).apply(null,arguments)},r.asm=et,r.cwrap=function(t,e,n,r){var s=(n=n||[]).every((function(t){return"number"===t}));return"string"!==e&&s&&!r?I(t):function(){return C(t,e,n,arguments)}},r.then=function(t){if(nt)t(r);else{var e=r.onRuntimeInitialized;r.onRuntimeInitialized=function(){e&&e(),t(r)}}return r},H=function t(){nt||lt(),nt||(H=t)},r.run=lt,r.preInit)for("function"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();return lt(),t});t.exports=r}));class ch extends Yu{constructor(t){super(),this.wasm=t,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new Xu(this,ma())}write(t,e,n){const r={};return this.move(r,t,e,n),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(t){const e=Z();return t(),{kernelMs:Z()-e}}move(t,e,n,r){const s=this.dataIdNextNumber++;if("string"===r){const a=e;return void this.dataIdMap.set(t,{id:s,stringBytes:a,shape:n,dtype:r,memoryOffset:null})}const a=N(n),i=a*P(r),o=this.wasm._malloc(i);this.dataIdMap.set(t,{id:s,memoryOffset:o,shape:n,dtype:r}),this.wasm.tfjs.registerTensor(s,a,o),null!=e&&this.wasm.HEAPU8.set(new Uint8Array(e.buffer,e.byteOffset,i),o)}async read(t){return this.readSync(t)}readSync(t){const{memoryOffset:e,dtype:n,shape:r,stringBytes:s}=this.dataIdMap.get(t);return"string"===n?s:function(t,e){switch(e){case"float32":return new Float32Array(t);case"int32":return new Int32Array(t);case"bool":return new Uint8Array(t);default:throw new Error("Unknown dtype "+e)}}(this.wasm.HEAPU8.slice(e,e+N(r)*P(n)).buffer,n)}disposeData(t){const e=this.dataIdMap.get(t);this.wasm._free(e.memoryOffset),this.wasm.tfjs.disposeData(e.id),this.dataIdMap.delete(t)}floatPrecision(){return 32}getMemoryOffset(t){return this.dataIdMap.get(t).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(t,e,n){let r;if(null==n)r=this.write(null,t,e);else{r={};const s=this.dataIdNextNumber++;this.dataIdMap.set(r,{id:s,memoryOffset:n,shape:t,dtype:e});const a=N(t);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:r,shape:t,dtype:e}}typedArrayFromHeap({shape:t,dtype:e,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=N(t);switch(e){case"float32":return new Float32Array(r,s,a);case"int32":return new Int32Array(r,s,a);case"bool":return new Uint8Array(r,s,a);default:throw new Error("Uknown dtype "+e)}}}wa("wasm",async()=>{const{wasm:t}=await async function(){const t=await l().getAsync("WASM_HAS_SIMD_SUPPORT");return new Promise((e,n)=>{const r={},s=t?lh(r):uh(r);s.tfjs={init:s.cwrap("init",null,[]),registerTensor:s.cwrap("register_tensor",null,["number","number","number"]),disposeData:s.cwrap("dispose_data",null,["number"]),dispose:s.cwrap("dispose",null,[])};let a=!1;s.onRuntimeInitialized=()=>{a=!0,dh=!1,e({wasm:s})},s.onAbort=()=>{a||dh||(dh=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))}})}();return new ch(t)},2);let hh,dh=!1;function ph(){return null==hh&&(hh=Et.backend.epsilon()),hh}class fh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,fh.prototype)}}class mh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,mh.prototype)}}class gh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,gh.prototype)}}class bh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,bh.prototype)}}class yh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,yh.prototype)}}function xh(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function wh(t,e){if(!t)throw new yh(e)}function vh(t,e){let n=0;for(const r of t)r===e&&n++;return n}function kh(t){return 1===t.length?t[0]:t}function Ih(t){return Array.isArray(t)?t:[t]}function Ch(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Sh(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Eh={};function Ah(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Nh(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in Eh)a=Eh[s];else if(a=e[s],null==a)throw new gh(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new gh(r+": Improper config format: "+JSON.stringify(a)+".\n'className' and 'config' must set.");const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Eh?[o,l]=Eh.className:i in e&&([o,l]=e[i]),null==o)throw new gh(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Eh))t[e]=Eh[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},Eh);for(const t of Object.keys(n))Eh[t]=n[t];!function t(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>t(e));else{const n=Object.keys(e);for(const r of n){const n=e[r];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?t(n):e[r]=n.value)}}}(a.config);const r=l(o,a.config,n,s);return Eh=Object.assign({},e),r}{const t=Object.assign({},Eh);for(const t of Object.keys(n))Eh[t]=n[t];const e=new o(a.config);return Eh=Object.assign({},t),e}}}function Rh(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function $h(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Th(t){if(null==t)throw new gh("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function _h(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new gh(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Dh(t,e,n=0,r=1/0){return wh(n>=0),wh(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function Fh(t,e){Array.isArray(t)?(C(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,n)=>Fh(t,`element ${n+1} of ${e}`))):C(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got `+function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}(t)+".")}function Mh(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Oh(t,e){return ba(()=>Ht(ge(Lt(t,t),e,!0)))}class Lh extends ha{getConfig(){return{}}}class Bh extends Lh{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ba(()=>{const e=Oh(t,this.axis),n=qa(e,0,this.maxValue);return Lt(t,Wt(n,ae(ph(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Bh.className="MaxNorm",pa(Bh);class zh extends Lh{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ba(()=>Wt(t,ae(ph(),Oh(t,this.axis))))}getConfig(){return{axis:this.axis}}}zh.className="UnitNorm",pa(zh);class Ph extends Lh{apply(t){return go(t)}}Ph.className="NonNeg",pa(Ph);class Wh extends Lh{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ba(()=>{const e=Oh(t,this.axis),n=ae(Lt(this.rate,qa(e,this.minValue,this.maxValue)),Lt(1-this.rate,e));return Lt(t,Wt(n,ae(ph(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Wh.className="MinMaxNorm",pa(Wh);const Uh={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Vh(t){return Ah(t)}function Gh(t,e={}){return Nh(t,da.getMap().classNameMap,e,"constraint")}function Hh(t){if(null==t)return null;if("string"==typeof t){return Gh({className:t in Uh?Uh[t]:t,config:{}})}return t instanceof Lh?t:Gh(t)}const qh=["channelsFirst","channelsLast"],jh=["valid","same","causal"],Kh=["max","avg"],Xh=["sum","mul","concat","ave"],Yh=new Map;function Jh(t){_h(qh,"DataFormat",t)}function Zh(t){_h(jh,"PaddingMode",t)}function Qh(t){_h(Kh,"PoolMode",t)}const td=[];function ed(t,e){td.push(t);try{const t=e();return td.pop(),t}catch(t){throw td.pop(),t}}function nd(t){if(!ad(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===td.length?"":td.join("/")+"/")+t}function rd(t){if(!ad(t))throw new Error("Not a valid tensor name: '"+t+"'");Yh.has(t)||Yh.set(t,0);const e=Yh.get(t);if(Yh.set(t,Yh.get(t)+1),e>0){const n=`${t}_${e}`;return Yh.set(n,1),n}return t}const sd=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ad(t){return!!t.match(sd)}function id(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function od(t){return po(t=Array.isArray(t)?new Float32Array(t):t)}function ld(t){return Fi(od(t)).dataSync()[0]}function ud(t){return Si(od(t)).dataSync()[0]}function cd(t,e){if(e<t)throw new gh(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function hd(t,e){return t.asType(e)}function dd(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function pd(t,e,n){return ba(()=>{switch(t.rank){case 1:return No(t,e,n);case 2:return Ro(t,[e,0],[n,t.shape[1]]);case 3:return $o(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return To(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return ds(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return ds(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new gh("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function fd(t,e,n){return ba(()=>{switch(t.rank){case 1:return No(t,e,n);case 2:return Ro(t,[0,e],[t.shape[0],n]);case 3:return $o(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return To(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new gh("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function md(t,e,n,r){return ba(()=>{switch(t.rank){case 1:return No(t,e,n);case 2:switch(r){case 1:return pd(t,e,n);case 2:return fd(t,e,n);default:throw new gh("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return pd(t,e,n);case 2:return $o(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return fd(t,e,n);default:throw new gh("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return pd(t,e,n);case 2:return To(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return To(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return fd(t,e,n);default:throw new gh("The axis is not within the rank of the tensor "+r)}default:throw new gh("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function gd(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),es(t,e)}function bd(t,e){switch(t.rank){case 1:return ja([t,e]);case 2:return Ka([t,e],0);case 3:return Xa([t,e],0);case 4:return Ya([t,e],0);default:throw new gh("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function yd(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new gh(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return An(t,e)}function xd(t,e=0,n=1,r,s){return co(t,e,n,r,s)}function wd(t,e,n,r){if(t.rank<2||e.rank<2)throw new bh(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new bh(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape)}if(2===t.rank&&2===e.rank){return Il({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Id(t.rank,r,"channelsLast"):null,activation:n})}{const s=t.shape.slice(),a=s.pop();t=t.reshape([-1,a]);const i=e.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(c).reshape([l,-1]);const h=[...s,...u];return Il({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Id(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function vd(t,e,n){return ba(()=>(e=Array.isArray(e)?po(e,"int32"):e.toInt(),vs(t,e,n)))}function kd(t){return Lt(t,t)}function Id(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new gh("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new gh("Unsupported input rank by biasAdd: "+e.rank)}function Cd(t,e,n){return ba(()=>(null==n&&(n="channelsLast"),Jh(n),t.add(Id(t.rank,e,n))))}function Sd(t,e,n,r){return ba(()=>pl(t,e,n,r))}function Ed(t,e,n=!1){return n?t():e()}const Ad=["fanIn","fanOut","fanAvg"],Nd=["normal","uniform","truncatedNormal"];class Rd extends ha{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class $d extends Rd{apply(t,e){return ir(t,e)}}$d.className="Zeros",pa($d);class Td extends Rd{apply(t,e){return ls(t,e)}}Td.className="Ones",pa(Td);class _d extends Rd{constructor(t){if(super(),"object"!=typeof t)throw new gh("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new gh("config must have value set but got "+t);this.value=t.value}apply(t,e){return ba(()=>Lt(Gt(this.value),ls(t,e)))}getConfig(){return{value:this.value}}}_d.className="Constant",pa(_d);class Dd extends Rd{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return ho(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Dd.className="RandomUniform",pa(Dd);class Fd extends Rd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new bh(`randomNormal does not support dType ${e}.`);return xd(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Fd.className="RandomNormal",pa(Fd);class Md extends Rd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new bh(`truncatedNormal does not support dType ${e}.`);return Wo(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Md.className="TruncatedNormal",pa(Md);class Od extends Rd{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return ba(()=>{if(2!==t.length||t[0]!==t[1])throw new gh("Identity matrix initializer can only be used for 2D square matrices.");return Lt(this.gain,ci(t[0]))})}getConfig(){return{gain:this.gain}}}Od.className="Identity",pa(Od);class Ld extends Rd{constructor(t){if(super(),t.scale<0)throw new gh("scale must be a positive float. Got: "+t.scale);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,_h(Ad,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){_h(Nd,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Jh(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=id(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=id(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=id(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new bh(`${this.getClassName()} does not support dType ${e}.`);return Wo(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return ho(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ld.className="VarianceScaling",pa(Ld);class Bd extends Ld{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ld.className}}Bd.className="GlorotUniform",pa(Bd);class zd extends Ld{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ld.className}}zd.className="GlorotNormal",pa(zd);class Pd extends Ld{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ld.className}}Pd.className="HeNormal",pa(Pd);class Wd extends Ld{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ld.className}}Wd.className="HeUniform",pa(Wd);class Ud extends Ld{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ld.className}}Ud.className="LeCunNormal",pa(Ud);class Vd extends Ld{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ld.className}}Vd.className="LeCunNormal",pa(Vd);class Gd extends Rd{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new bh("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return ba(()=>{if(2!==t.length)throw new bh("The Orthogonal Initializer does not support non-2D shapes yet.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=xd(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=du.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Lt(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Gd.className="Orthogonal",pa(Gd);const Hd={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qd(t,e={}){return Nh(t,da.getMap().classNameMap,e,"initializer")}function jd(t){return Ah(t)}function Kd(t){if("string"==typeof t){const e=t in Hd?Hd[t]:t;if("GlorotNormal"===e)return new zd;if("GlorotUniform"===e)return new Bd;if("HeNormal"===e)return new Pd;if("HeUniform"===e)return new Wd;if("LeCunNormal"===e)return new Ud;if("LeCunUniform"===e)return new Vd;{const t={};return t.className=e,t.config={},qd(t)}}return t instanceof Rd?t:qd(t)}let Xd=0;function Yd(){return Xd++}const Jd={};function Zd(t=""){return t in Jd||(Jd[t]=0),Jd[t]+=1,t+Jd[t].toString()}function Qd(t){return Array.isArray(t)&&Array.isArray(t[0])}function tp(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function ep(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new gh("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function np(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new gh("Expected exactly 1 Shape; got "+t.length)}return t}function rp(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}class sp{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Yd(),n=null==n?"Variable":n,this.originalName=nd(n),this.name=rd(this.originalName),this.trainable_=r,this.constraint=s,this.val=Vo(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function ap(t){return t.map(t=>t.read())}function ip(t){t.forEach(t=>{t[0].write(t[1])})}class op{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class lp{constructor(t,e,n,r,s,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Yd(),null!=a&&(this.originalName=nd(a),this.name=rd(this.originalName)),this.rank=e.length}}let up=0;class cp{constructor(t,e){this.callArgs=e,this.id=up++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let hp=0;class dp extends ha{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=hp++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Ch(t)+"_"+Zd(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new mh(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new gh(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return kh(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return kh(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new fh("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new fh("Layer "+this.name+" is not connected, no input to return.");return kh(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new fh("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new fh("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return kh(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Ih(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Ih(this.inputSpec);if(t.length!==e.length)throw new gh(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new gh(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new gh(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new gh(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new gh(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new gh(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new gh(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Ih(t);let r=!0;for(const t of n)if(!(t instanceof lp)){r=!1;break}let s=!0;for(const t of n)if(t instanceof lp){s=!1;break}if(r===s)throw new gh("Arguments to apply() must be all SymbolicTensors or all Tensors");return ed(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Ih(t))e.push(n.shape);this.build(kh(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Ih(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=kh(a),null!=this.activityRegularizer)throw new bh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Ih(t);const e=[];for(const n of t)e.push(n.shape);return kh(e)}(t),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new lp(a,n,this,Ih(t),e,this.name,r)):new lp(a,r,this,Ih(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new bh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new fh(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new fh(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new mh(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rp(this.weights)}build(t){this.built=!0}getWeights(t=!1){return ap(t?this.trainableWeights:this.weights)}setWeights(t){ba(()=>{const e=this.weights;if(e.length!==t.length)throw new gh(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=ap(e);for(let s=0;s<r.length;++s){const a=r[s],i=e[s],o=t[s];if(!R(a.shape,o.shape))throw new gh(`Layer weight shape ${a.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}ip(n)})}addWeight(t,e,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new gh(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Kd("zeros"));const o=r.apply(e,n),l=new sp(o,n,t,a,i);return o.dispose(),null!=s&&this.addLoss(()=>s.apply(l.read())),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Ih(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,s,a,i=null){const o=Ih(t);e=Ih(e),n=Ih(n),r=Ih(r),s=tp(s),a=tp(a);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new cp({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}class pp extends dp{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Zd("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new gh("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new gh("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new gh("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new lp(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new cp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new gh("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function fp(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];ya(r)}}function mp(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var gp;pp.className="InputLayer",pa(pp),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(gp||(gp={}));class bp{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class yp{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class xp extends bp{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=ba(()=>ae(this.totals[t],Lt(r,n)));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:ba(()=>{const n=Lt(Wt(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),xa(e[t])}))}}class wp extends bp{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];t.push(i.data()),e.push(r),n.push(a)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}}class vp extends bp{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");U(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=Z();return(...s)=>{const a=Z();return a-r<e||(r=a,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await fp(n),r.push(this.yield(t,e,n))),r.push(Eu()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await fp(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await fp(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Eu()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await fp(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await fp(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Eu()):U(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await fp(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await fp(t),await this.trainEnd(t))}}function kp(t,e){if(null==t&&(t={}),t instanceof bp)return[t];if(Array.isArray(t)&&t[0]instanceof bp)return t;return Ih(t).map(t=>new vp(t,e))}class Ip{constructor(){}static registerCallbackConstructor(t,e){C(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),Ip.checkForDuplicate(e),null==Ip.constructors[t]&&(Ip.constructors[t]=[]),Ip.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Ip.constructors){Ip.constructors[+e].forEach(e=>{if(e===t)throw new gh("Duplicate callback constructor.")})}}static clear(){Ip.constructors={}}static createCallbacks(t){const e=[];for(const n in Ip.constructors){const r=+n;t>=r&&e.push(...Ip.constructors[r])}return e.map(t=>new t)}}function Cp(t,e,n,r,s,a,i,o,l){const u=new wp,c=[new xp,...Ip.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new yp(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Sp(t,e={},n=!1){return Nh(t,da.getMap().classNameMap,e,"layer",n)}function Ep(t,e){return ba(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=ge(kd(t),e,!0),r=di(n.shape,ph()),s=Ht(ks(n,r));return Wt(t,s)})}function Ap(t,e){return ba(()=>Di(kd(jt(e,t)),-1))}function Np(t,e){return ba(()=>Di(va(jt(e,t)),-1))}function Rp(t,e){return ba(()=>{const n=jt(t,e),r=qa(va(t),ph(),Number.MAX_VALUE),s=va(Wt(n,r));return Lt(100,Di(s,-1))})}function $p(t,e,n=!1){return ba(()=>{if(n)e=_o(e);else{const t=ge(e,e.shape.length-1,!0);e=Wt(e,t)}return e=qa(e,ph(),1-ph()),Ut(ge(Lt(t.toFloat(),cr(e)),e.shape.length-1))})}function Tp(t,e,n=!1){return ba(()=>{const r=er(function(t){const e=[id(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=qa(e,ph(),1-ph())).shape;return $p(sa(r,s[s.length-1]).reshape(s),e,n)})}function _p(t,e){return ba(()=>{let n;return n=qa(e,ph(),1-ph()),n=cr(Wt(n,jt(1,n))),Di(function(t,e){if(!R(t.shape,e.shape))throw new gh(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return ba(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function Dp(t,e){return ba(()=>{const n=Ep(t,-1),r=Ep(e,-1),s=Lt(n,r);return Ut(ge(s,-1))})}Ip.constructors={};const Fp={meanSquaredError:Ap,meanAbsoluteError:Np,meanAbsolutePercentageError:Rp,meanSquaredLogarithmicError:function(t,e){return ba(()=>{const n=qa(e,ph(),Number.MAX_VALUE),r=cr(ae(1,n)),s=qa(t,ph(),Number.MAX_VALUE),a=cr(ae(1,s));return Di(kd(jt(r,a)),-1)})},squaredHinge:function(t,e){return ba(()=>{const n=ks(0,jt(1,Lt(t,e)));return Di(kd(n),-1)})},hinge:function(t,e){return ba(()=>{const n=ks(0,jt(1,Lt(t,e)));return Di(n,-1)})},categoricalHinge:function(t,e){return ba(()=>{const n=ge(Lt(t,e),-1),r=Si(Lt(jt(1,t),e),-1);return ks(0,ae(1,jt(r,n)))})},logcosh:function(t,e){return ba(()=>{const n=Math.log(2),r=jt(e,t),s=jt(ae(r,Do(Lt(-2,r))),n);return Di(s,-1)})},categoricalCrossentropy:$p,sparseCategoricalCrossentropy:Tp,binaryCrossentropy:_p,kullbackLeiblerDivergence:function(t,e){return ba(()=>{const n=qa(t,ph(),1),r=qa(e,ph(),1);return ge(Lt(t,cr(Wt(n,r))),-1)})},poisson:function(t,e){return ba(()=>{const n=cr(ae(ph(),e));return Di(jt(e,Lt(t,n)),-1)})},cosineProximity:Dp};function Mp(t){if("string"==typeof t){if(t in Fp)return Fp[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new gh(e)}return t}function Op(t,e){return ba(()=>{const n=Lt(.5,Wi(e)),r=hd(Qn(e,n),t.dtype);return Di(Vn(t,r),-1)})}function Lp(t,e){return ba(()=>hd(Vn(Aa(t,-1),Aa(e,-1)),"float32"))}function Bp(t,e){return _p(t,e)}function zp(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),Vn(t,e).asType("float32")}const Pp=$p,Wp=Tp,Up={binaryAccuracy:Op,categoricalAccuracy:Lp,precision:function(t,e){return ba(()=>{const n=function(t,e){return ba(()=>qe(t.equal(1),e.equal(1)).sum().cast("float32"))}(t,e),r=function(t,e){return ba(()=>qe(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),s=n.add(r);return je(Qn(s,0),n.div(s),0).cast("float32")})},categoricalCrossentropy:Pp,sparseCategoricalCrossentropy:Wp,mse:Ap,MSE:Ap,mae:Np,MAE:Np,mape:Rp,MAPE:Rp,cosine:Dp};function Vp(t){if("string"==typeof t&&t in Up)return Up[t];if("string"!=typeof t&&null!=t)return t;throw new gh("Unknown metric "+t)}function Gp(t){if(wh(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(Fp))if(Fp[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Up))if(Up[n]===t){e=n;break}return void 0!==e?e:t.name}}function Hp(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!function t(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const n=Object.keys(e);for(const r of n){if("string"!=typeof r)return!1;if(!t(e[r]))return!1}return!0}if(Array.isArray(e)){for(const n of e)if(!t(n))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function qp(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!s){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),jp(a,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?Kp(o[t],n,r):Xp(o[t],n,i,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;e=null!=t.collectedTrainableWeights?rp(t.collectedTrainableWeights):rp(t.trainableWeights);return e}(t),u=rp(t.nonTrainableWeights);r("Total params: "+(l+u)),r("Trainable params: "+l),r("Non-trainable params: "+u),r("_".repeat(e))}function jp(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function Kp(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}jp([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Xp(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const i=t.name,o=t.getClassName(),l=0===a.length?"":a[0];jp([`${i} (${o})`,s,t.countParams().toString(),l],e,r);for(let t=1;t<a.length;++t)jp(["","","",a[t]],e,r)}function Yp(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}class Jp{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Jp)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new gh(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Ot(e,t.dtype)}catch(n){throw new gh(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof lp){if(null==this.id2Value[t.id])throw new gh("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new gh("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof lp){if(null==this.id2Value[t.id])throw new gh("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new gh("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&ya(this.id2Mask)}}const Zp={},Qp={};function tf(t,e,n,r){const s=null!=n&&n.training,a=Array.isArray(t),i=a?t:[t],o=i.map(t=>t.name),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,d;if(null==Zp[c]){const t=function(t,e){C(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const s=nf(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:i}=nf(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:ef(r)}}(i,e);h=t.sorted,d=t.recipientCounts,Zp[c]=h,Qp[c]=d}h=Zp[c],d={},s||Object.assign(d,Qp[c]);const p=new Jp(e);for(let t=0;t<h.length;++t){if(null!=r){const t=ga().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const a=h[t],i=a.sourceLayer;if(i instanceof pp)continue;const u=[],c=[],f=[];let m=!1;for(const t of a.inputs){const n=p.getValue(t),r=p.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),s||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Ih(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=rf(a),x=Array.isArray(y)?y:[y];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],g[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||ya(f)}return p.disposeMasks(),a?l:l[0]}function ef(t){const e={};for(const n in t)e[n]=t[n].size;return e}function nf(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function rf(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class sf extends dp{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Zd(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],$h(this.inputs).length!==this.inputs.length)throw new gh("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));$h(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;wh(0===n,"input layer has >1 nodes"),wh(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof pp))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},s={},a={},i=[],o=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new mh(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(sf.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],a=u.nodeIndices[t],i=u.tensorIndices[t];o(r,e,n,s,a,i)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=i.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];a=Math.max(a,i),r[t.outboundLayer.id]=a,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],o=s.inboundNodes[i],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(s[t])}let p=Object.keys(d).map(t=>parseInt(t,10)).sort(Rh);this.layers=[];for(const t of p){const e=d[t];e.sort((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof sf&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map(t=>parseInt(t,10)).sort(Rh);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new mh("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+m);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map(t=>t.name);for(const t of g){const e=g.filter(e=>e===t).length;if(1!==e)throw new mh(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new cp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new gh("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new gh("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const s=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[r]]);else if(e)throw new gh("Provided weight data has no target variable: "+r);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new gh(`${t.length} of ${r} weights are not set: `+t)}ip(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.1.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=function t(e,n){if(null==e)return null;if("string"==typeof e)return Ch(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const r=[],s=e.length;for(let a=0;a<s;++a){const s=e[a];Yp(n,a,s)?r.push(s):r.push(t(s,n))}return r}{const n={};for(const r of Object.keys(e)){const s=e[r],a=Ch(r);n[a]="name"!==r&&"className"!==r||"string"!=typeof s?t(s,r):s}return n}}(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return ba(()=>{t=Ih(t);const n=new Jp;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return tf(this.outputs,n,e)})}computeMask(t,e){return ba(()=>{let n;return t=Ih(t),n=null==e?xh(null,t.length):Ih(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=tp(t);if(e.length!==this.inputLayers.length)throw new gh(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(Rh);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=tp(e.computeOutputShape(kh(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;a.push(s)}for(let t=0;t<a.length;t++){const e=a[t];wh(e in n),s.push(n[e])}return kh(s)}runInternalGraph(t,e){null==e&&(e=xh(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=t[r],i=e[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(Rh);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=Ih(e.call(t,u)),l=Ih(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map(t=>t[0]),i=a.map(t=>t[1]),null==u.mask&&(u.mask=i),o=Ih(e.call(r,u)),l=Ih(e.computeMask(r,i));if(e.activityRegularizer)throw new bh("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],a=l[t];n[e.id]=[r,a]}}}}const s=[],a=[],i=[];for(const t of this.outputs){wh(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];i.push(e.shape),s.push(e),a.push(r)}return[s,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof sf?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=sf.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new gh(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new gh("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new gh("No such layer: "+t)}calculateLosses(){return ba(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=sf.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=sf.nodeKey(t,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[sf.nodeKey(s,a)];null==l&&(l=0),t.push([s.name,l,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],a=sf.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,i,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],a=sf.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,i,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let r;for(const a of e){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(t,e);const c=s[o];if(c.inboundNodes.length<=l)return void i(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(kh(n),r)}function l(t){const n=t.name,a=Sp(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new gh("Corrupted configuration, expected array for nodeData: "+t);i(a,t)})}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!Th(a);)for(const t of c){const e=s[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];wh(e in s);const a=s[e].inboundNodes[n].outputTensors;h.push(a[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];wh(e in s);const a=s[e].inboundNodes[n].outputTensors;d.push(a[r])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new gh("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){ba(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function af(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function of(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=ba(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());ya(e);const s=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])}),po(s,"float32")}return null}function lf(t,e){return Lt(t,e)}function uf(t,e){let n,r;const s=e;n=s.xs,r=s.ys,C(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const a=cf("input",t.inputNames,n),i=cf("output",t.outputNames,r),o=a[0].shape[0];C(a.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),C(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let e=0;e<a.length;e++)C(a[e].shape[0]===o,()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);for(let e=0;e<i.length;e++)C(i[e].shape[0]===o,()=>`Batch size mismatch: output ${t.outputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);return{xs:a,ys:i}}function cf(t,e,n){if(n instanceof dt)return[n];if(Array.isArray(n))return C(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const s of e){if(null==n[s])throw new gh(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}async function hf(t,e,n){const r=null!=n.batchesPerEpoch;if(C(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),C(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),C(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),C(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),C(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(df(n.validationData))C(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=function(t){if(3===t.length)throw new bh("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,i=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map(t=>"val_"+t)):l.slice();const c=kp(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Cp(c,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,s,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=uf(t,e.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const e=af(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await of(s[t],null,e[t]))}const u=r.concat(s).concat(i),p=o(u);ya(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];a[e]=n,xa(n)}await d.onBatchEnd(h,a),mp(a),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=df(n.validationData)?Ih(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ih(t.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function df(t){return"function"==typeof t.iterator}function pf(t){C(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function ff(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>pd(t,e,n-e)):pd(t,e,n-e)}function mf(t,e){return ba(()=>null==t?null:Array.isArray(t)?t.map(t=>mf(t,e)):vd(t,"int32"===e.dtype?e:e.toInt()))}function gf(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}async function bf(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,l,u,c;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;pf(h);const d=!1,p=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,d,h);s=p[0],a=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new bh("validationData including sample weights is not supported yet."):new gh("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");i=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(i,o,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=ff(s,t,e),s=ff(s,0,t),u=ff(a,t,e),a=ff(a,0,t),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);const g=s.concat(a).concat(c);t.checkTrainableWeightsConsistency();const b=t.makeTrainFunction(),y=t.getDedupedMetricsNames();let x,w;m?(t.makeTestFunction(),x=t.testFunction,w=y.slice().concat(y.map(t=>"val_"+t))):(x=null,f=[],w=y.slice());const k=kp(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,a,i,o,l,u,c,h,d,p,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==p))throw new gh("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=t.checkNumSamples(n,s,p,"steps_per_epoch");let b;null!=g&&(b=cd(0,g)),null==i&&(i=1);const{callbackList:y,history:x}=Cp(o,i,a,d,g,p,s,m,h);y.setModel(t),t.history=x,await y.onTrainBegin(),t.stopTraining_=!1;for(let i=d;i<a;++i){await y.onEpochBegin(i);const a={};if(null!=p)throw new bh("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new bh("batch shuffling is not implemneted yet");c&&v(b);const i=po(b),o=gf(g,s);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),ba(()=>{const d=o[c][0],p=o[c][1],f=pd(i,d,p-d);h.batch=c,h.size=p-d;const g=mf(n,f),b=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=b[t];h[e]=n,xa(n)}if(c===o.length-1&&m){const e=t.testLoop(l,u,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];xa(s),a["val_"+n]=s}}}),await y.onBatchEnd(c,h),mp(h),t.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,a),t.stopTraining_)break}return await y.onTrainEnd(),await t.history.syncData(),t.history}(t,b,g,y,h,r.epochs,r.verbose,k,x,f,r.shuffle,w,r.initialEpoch,null,null)}finally{t.isTraining=!1,xf(s,e),xf(a,n),xf(l,i),xf(u,o),null!=c&&ya(c)}}function yf(t){const e=[];t instanceof dt&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(dd(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function xf(t,e){if(null==t)return;const n=[];if(e instanceof dt)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof dt)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach(t=>{t.isDisposed||t.dispose()})}function wf(t){return Array.isArray(t)}function vf(t){return!function(t){return t instanceof dt}(t)&&!wf(t)}function kf(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(wf(t)&&t.length>0)e=!0;else if(vf(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new gh(`Error when checking model ${s} expected no data, but got `+t)}return[]}if(null==t)return e.map(t=>null);let a;if(vf(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new gh(`No data provided for "${n}". Need data for each key in: `+e);a.push(t[n])}}else if(wf(t)){if((t=t).length!==e.length)throw new gh(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);a=t}else{if(t=t,e.length>1)throw new gh(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);a=[t]}if(a=yf(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new gh(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape `+i.shape);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l>=0&&o!==l)throw new gh(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function If(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new gh(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new gh(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new gh(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape `+JSON.stringify(i.shape));for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l!==o)throw new gh(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Cf extends sf{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new gh("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");qp(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Cu.adagrad(.01),Adadelta:()=>Cu.adadelta(1,.95,ph()),Adam:()=>Cu.adam(.001,.9,.999,ph()),Adamax:()=>Cu.adamax(.002,.9,.999,ph(),0),RMSProp:()=>Cu.rmsprop(.001,.9,0,ph()),SGD:()=>Cu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new gh("Unknown Optimizer "+t)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof mu))throw new gh("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new gh(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>Mp(t))}else{const n=Mp(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new gh(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Mp(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ed("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};ed("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===_p?-1!==["accuracy","acc"].indexOf(i)?r=Op:-1!==["crossentropy","ce"].indexOf(i)&&(r=Bp):this.lossFunctions[t]===Tp?-1!==["accuracy","acc"].indexOf(i)?r=zp:-1!==["crossentropy","ce"].indexOf(i)&&(r=Wp):-1!==["accuracy","acc"].indexOf(i)?r=Lp:-1!==["crossentropy","ce"].indexOf(i)&&(r=Pp),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const t=Vp(i);a=t,n=""+Gp(i)}let e;ed(n,()=>{e=a}),s(t,n,e)}})(r[t])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;pf(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return kh(this.testLoop(i,a,r,n.verbose,n.steps))}finally{xf(s[0],t),xf(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let a=[];if(n.verbose>0)throw new bh("Verbose mode is not implemented yet.");C(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const i="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await i.next();if(a=ba(()=>{if(e.value){const{xs:n,ys:r}=uf(t,e.value),i=n.concat(r),u=ba(()=>s(i));if(ya(i),0===l)for(let t=0;t<u.length;++t)a.push(Gt(0));const c=i[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=a[t];a[t]=ba(()=>ae(a[t],Lt(c,e))),l>0&&ya(n)}ya(u),o+=c,++l}return a}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=Wt(a[t],o),ya(e)}return kh(a)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new gh(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new gh("Either the input data should have a defined shape, or "+r+" shoud be specified.");s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new gh("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),a=new Jp;if(t instanceof dt&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new gh(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new gh("No value is provided for the model's input "+e.name);a.add(e,n)}const i=tf(s,a);return n?i:i[0]}retrieveSymbolicTensors(t){const e=xh(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(t=>t.name);for(let r=0;r<t.length;++r){const i=a.indexOf(t[r]);if(-1!==i&&(e[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new gh("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return ba(()=>{const r=this.checkNumSamples(t);if(n)throw new bh("Verbose predictLoop() is not implemented yet.");const s=gf(r,e),a=this.outputs.map(t=>[]);for(let e=0;e<s.length;++e){ba(()=>{const n=s[e][0],r=s[e][1],a=ff(t,n,r),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new Jp(i);return tf(this.outputs,o)}).forEach((t,e)=>a[e].push(t))}return kh(a.map(t=>es(t,0)))})}predict(t,e={}){const n=yf(t);If(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return pf(r),this.predictLoop(n,r)}finally{xf(n,t)}}predictOnBatch(t){If(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new mh("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Tp?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=$h(t.map(t=>t.shape[0]));r.sort();const s=$h(e.map(t=>t.shape[0]));if(s.sort(),r.length>1)throw new gh("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(t=>t.shape)));if(s.length>1)throw new gh("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&s.length>0&&!R(r,s))throw new gh(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=kf(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=kf(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Ap,_p,$p];for(let s=0;s<t.length;++s){const a=t[s],i=e[s],o=n[s];if(null!=i){if(i===$p&&1===a.shape[a.shape.length-1])throw new gh(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new gh(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new gh(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=af(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await of(o[e],null,t[e]))}return[i,o,l]}testLoop(t,e,n,r=0,s){return ba(()=>{const a=this.checkNumSamples(e,n,s,"steps"),i=[];if(r>0)throw new bh("Verbose mode is not implemented yet.");if(null!=s)throw new bh("steps mode in testLoop() is not implemented yet");{const r=gf(a,n),s=po(cd(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=pd(s,a,o-a),u=mf(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)i.push(Gt(0));for(let t=0;t<c.length;++t){const e=c[t];i[t]=ae(i[t],Lt(o-a,e))}}for(let t=0;t<i.length;++t)i[t]=Wt(i[t],a)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;if(vh(t,r)>1){s+="_"+vh(t.slice(0,n),r)}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Jp(t),o=tf(this.outputs,i,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=lf(n,s[t]));const a=Di(n);e.push(a),l=0===t?n:ae(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=Di(e(r[s],o[s]))}xa(n),a.push(n)}return l=Di(l),this.calculateLosses().forEach(t=>{l=ae(l,t)}),l},!0,i)].concat(a)}}makeTestFunction(){this.testFunction=t=>ba(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:r[t]});const i=new Jp(a),o=tf(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],a=Di(r(s[t],o[t]));n=0===t?a:ae(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],a=Di(n(s[r],o[r]));e.push(a)}return e})}async fit(t,e,n={}){return bf(this,t,e,n)}async fitDataset(t,e){return hf(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const t of a){const e=await t.data();i.push(e[0])}return ya(a),kh(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=ga().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-ga().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Ch(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>Ch(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Ch(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ch(Gp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ch(Gp(t)));{const t={};for(const e in this.metrics)t[e]=Ch(Gp(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Sp(function t(e,n){if(null===e)return null;if("string"==typeof e)return Sh(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const r=[],s=e.length;for(let a=0;a<s;++a){const s=e[a];Yp(n,a,s)?r.push(s):r.push(t(s,n))}return r}{const n={};for(const r of Object.keys(e)){const s=e[r];if("name"===r&&"string"==typeof s)n[r]=s;else{const e=Sh(r);n[e]=t(s,e)}}return n}}(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Sh(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>Sh(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Sh(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>Sh(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Sh(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,Fs.getSaveHandlers(n));if(0===e.length)throw new gh(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new gh(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new gh("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Ns(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.1.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await Ns(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=_s([r.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Hp(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){Hp(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Cf.className="Model",pa(Cf);class Sf extends Cf{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Zd("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new gh("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof Sf||t instanceof Cf;let n;if(e){if(n=t,1!==n.outputs.length)throw new gh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new gh("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new gh("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new gh("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new pp({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new gh(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new gh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[r];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=t(e.inputTensors[r],e.inboundLayers[r],e.nodeIndices[r]);for(const t of s)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new cp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:xh(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(np(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Cf({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new mh("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new mh("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new mh("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new mh("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new gh("Legacy serialization format not supported yet.");s=e}else C(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof Sf))throw new bh("Sequential.fromConfig called on non-Sequential input: "+i);for(const t of s){const e=Sp(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new gh("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new gh("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Sf.className="Sequential",pa(Sf);class Ef extends ha{getConfig(){return{}}}class Af extends Ef{apply(t,e=1){return function(t,e=1){if(1!==e)throw new bh(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return oi(t)}(t,e)}}Af.className="elu",pa(Af);class Nf extends Ef{apply(t){return Co(t)}}Nf.className="selu",pa(Nf);class Rf extends Ef{apply(t){return go(t)}}Rf.className="relu",pa(Rf);class $f extends Ef{apply(t){return ba(()=>Mi(6,go(t)))}}$f.className="relu6",pa($f);class Tf extends Ef{apply(t){return t}}Tf.className="linear",pa(Tf);class _f extends Ef{apply(t){return Kr(t)}}_f.className="sigmoid",pa(_f);class Df extends Ef{apply(t){return function(t){return ba(()=>{const e=ae(.5,Lt(.2,t));return qa(e,0,1)})}(t)}}Df.className="hardSigmoid",pa(Df);class Ff extends Ef{apply(t){return Do(t)}}Ff.className="softplus",pa(Ff);class Mf extends Ef{apply(t){return function(t){return ba(()=>Wt(t,va(t).add(1)))}(t)}}Mf.className="softsign",pa(Mf);class Of extends Ef{apply(t){return Oa(t)}}Of.className="tanh",pa(Of);class Lf extends Ef{apply(t,e=-1){return _o(t,e)}}Lf.className="softmax",pa(Lf);class Bf extends Ef{apply(t,e=-1){return Ei(t,e)}}function zf(t){return t.getClassName()}function Pf(t,e={}){return Nh(t,da.getMap().classNameMap,e,"activation")}function Wf(t){if(null==t){const t={className:"linear",config:{}};return Pf(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},Pf(e)}return t instanceof Ef?t:Pf(t)}Bf.className="logSoftmax",pa(Bf);class Uf extends ha{}class Vf extends Uf{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return ba(()=>{let e=ir([1]);return this.hasL1&&(e=ae(e,ge(Lt(this.l1,va(t))))),this.hasL2&&(e=ae(e,ge(Lt(this.l2,kd(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Vf.className="L1L2",pa(Vf);const Gf={l1l2:"L1L2"};function Hf(t){return Ah(t)}function qf(t,e={}){return Nh(t,da.getMap().classNameMap,e,"regularizer")}function jf(t){if(null==t)return null;if("string"==typeof t){return qf({className:t in Gf?Gf[t]:t,config:{}})}return t instanceof Uf?t:qf(t)}class Kf extends dp{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=ep(t);let n=go(t);return null!=this.maxValue&&(n=qa(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Kf.className="ReLU",pa(Kf);class Xf extends dp{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ep(t);return wi(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Xf.className="LeakyReLU",pa(Xf);class Yf extends dp{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Kd(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=jf(t.alphaRegularizer),this.alphaConstraint=Hh(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new gh("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=np(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new op({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=ep(t),Ki(t,this.alpha.read())}getConfig(){const t={alphaInitializer:jd(this.alphaInitializer),alphaRegularizer:Hf(this.alphaRegularizer),alphaConstraint:Vh(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Yf.className="PReLU",pa(Yf);class Jf extends dp{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new bh(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ep(t);return oi(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Jf.className="ELU",pa(Jf);class Zf extends dp{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=ep(t);return n.mul(hd(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Zf.className="ThresholdedReLU",pa(Zf);class Qf extends dp{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Lf).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=ep(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function tm(t,e,n){if("number"==typeof t)return xh(t,e);if(t.length!==e)throw new gh(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if((r=a)!==parseInt(r.toString(),10))throw new gh(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+a)}return t;var r}function em(t,e,n,r,s=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((a+r-1)/r)}function nm(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+ud([n-e,0]);else{if("same"!==r)throw new gh(`Unsupport padding mode: ${r}.`);t*=e}return t}function rm(t,e){return ba(()=>(Jh(e),"channelsFirst"===e?hn(t,[0,2,3,1]):t))}function sm(t,e){return ba(()=>(Jh(e),"channelsFirst"===e?hn(t,[0,2,3,4,1]):t))}function am(t,e,n,r=[1,1],s="valid",a,i,o=null){return ba(()=>{if(null==a&&(a="channelsLast"),Jh(a),3!==t.rank&&4!==t.rank)throw new gh(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new gh(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=rm(t,a);if("causal"===s)throw new bh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=vl({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=hn(l,[0,3,1,2])),l})}Qf.className="Softmax",pa(Qf);class im extends dp{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",im.verifyArgs(e),this.rank=t,Fh(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new bh(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tm(e.kernelSize,t,"kernelSize"),this.strides=tm(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Zh(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jh(this.dataFormat),this.activation=Wf(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Kd(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Hh(e.biasConstraint),this.biasRegularizer=jf(e.biasRegularizer),this.activityRegularizer=jf(e.activityRegularizer),this.dilationRate=tm(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new gh("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new gh("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new gh("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(wh("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Dh(t.kernelSize,"number",1,3))throw new gh(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:zf(this.activation),useBias:this.useBias,biasInitializer:jd(this.biasInitializer),biasRegularizer:Hf(this.biasRegularizer),activityRegularizer:Hf(this.activityRegularizer),biasConstraint:Vh(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class om extends im{constructor(t,e){super(t,e),this.kernel=null,om.verifyArgs(e),this.filters=e.filters,Fh(this.filters,"filters"),this.kernelInitializer=Kd(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Hh(e.kernelConstraint),this.kernelRegularizer=jf(e.kernelRegularizer)}build(t){t=np(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new gh("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return ba(()=>{let e;t=ep(t);const n=null==this.bias?null:this.bias.read(),r=Mh(this.activation.getClassName());if(null!=r&&2===this.rank)e=am(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",a,i=1){return ba(()=>{if(null==a&&(a="channelsLast"),Jh(a),3!==t.shape.length)throw new gh("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new gh("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new gh("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===a&&(t=hn(t,[0,2,1])),"causal"===s)throw new bh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ja(t,e,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Cd(o,n)),o})}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=am(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new bh("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",a,i){return ba(()=>{if(null==a&&(a="channelsLast"),Jh(a),4!==t.rank&&5!==t.rank)throw new gh("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new gh("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let o=sm(t,a);if("causal"===s)throw new bh("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Qa(o,e,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Cd(o,n)),"channelsFirst"===a&&(o=hn(o,[0,4,1,2,3])),o})}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=np(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=em(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:jd(this.kernelInitializer),kernelRegularizer:Hf(this.kernelRegularizer),kernelConstraint:Vh(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new gh("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class lm extends om{constructor(t){super(2,t),lm.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Dh(t.kernelSize,"number",1,2))throw new gh(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}lm.className="Conv2D",pa(lm);class um extends om{constructor(t){super(3,t),um.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new gh(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}um.className="Conv3D",pa(um);class cm extends lm{constructor(t){if(super(t),this.inputSpec=[new op({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new gh("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=np(t)).length)throw new gh("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new gh("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new op({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return ba(()=>{let e=ep(t);if(4!==e.shape.length)throw new gh("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,nm(i,c,l,this.padding),nm(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=hn(e,[0,2,3,1]));let p=Za(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=hn(p,[0,3,1,2])),null!=this.bias&&(p=Cd(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(t){const e=(t=np(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=nm(e[r],o,a,this.padding),e[s]=nm(e[s],l,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}cm.className="Conv2DTranspose",pa(cm);class hm extends om{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new gh("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new gh("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new gh(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Kd(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=jf(e.depthwiseRegularizer),this.depthwiseConstraint=Hh(e.depthwiseConstraint),this.pointwiseInitializer=Kd(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=jf(e.pointwiseRegularizer),this.pointwiseConstraint=Hh(e.pointwiseConstraint)}build(t){if((t=np(t)).length<this.rank+2)throw new gh(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new gh("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new op({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return ba(()=>{let e;if(t=ep(t),1===this.rank)throw new bh("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=hn(t,[0,2,3,1])),e=So(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Cd(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=hn(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=jd(this.depthwiseInitializer),t.pointwiseInitializer=jd(this.pointwiseInitializer),t.depthwiseRegularizer=Hf(this.depthwiseRegularizer),t.pointwiseRegularizer=Hf(this.pointwiseRegularizer),t.depthwiseConstraint=Vh(this.depthwiseConstraint),t.pointwiseConstraint=Vh(this.pointwiseConstraint),t}}hm.className="SeparableConv";class dm extends hm{constructor(t){super(2,t)}}dm.className="SeparableConv2D",pa(dm);class pm extends om{constructor(t){super(1,t),pm.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Dh(t.kernelSize,"number",1,1))throw new gh(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}pm.className="Conv1D",pa(pm);class fm extends dp{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return ba(()=>{if(t=ep(t),"channelsLast"===this.dataFormat){const e=md(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return md(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=md(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return md(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}fm.className="Cropping2D",pa(fm);class mm extends dp{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return ba(()=>{let e=ep(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=hn(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return hn(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}mm.className="UpSampling2D",pa(mm);class gm extends im{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Kd(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Hh(t.depthwiseConstraint),this.depthwiseRegularizer=jf(t.depthwiseRegularizer)}build(t){if((t=np(t)).length<4)throw new gh(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new gh(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ba(()=>{let e=function(t,e,n=[1,1],r="valid",s,a){return ba(()=>{null==s&&(s="channelsLast"),Jh(s);let i=rm(t,s);if(4!==t.rank)throw new gh("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new gh("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return i=ni(i,e,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=hn(i,[0,3,1,2])),i})}(t=ep(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Cd(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=np(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=em(e,this.kernelSize[0],this.padding,this.strides[0]),a=em(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=jd(this.depthwiseInitializer),t.depthwiseRegularizer=Hf(this.depthwiseRegularizer),t.depthwiseConstraint=Vh(this.depthwiseRegularizer),t}}gm.className="DepthwiseConv2D",pa(gm);class bm extends dp{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return ba(()=>{this.invokeCallHook(t,e);const n=ep(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Ed(()=>Sd(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}bm.className="Dropout",pa(bm);class ym extends bm{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}ym.className="SpatialDropout1D",pa(ym);class xm extends dp{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Fh(this.units,"units"),this.activation=Wf(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Kd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Kd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Hh(t.kernelConstraint),this.biasConstraint=Hh(t.biasConstraint),this.kernelRegularizer=jf(t.kernelRegularizer),this.biasRegularizer=jf(t.biasRegularizer),this.activityRegularizer=jf(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=np(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=np(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return ba(()=>{this.invokeCallHook(t,e);const n=ep(t),r=Mh(this.activation.getClassName());let s;return null!=r?s=wd(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=wd(n,this.kernel.read()),null!=this.bias&&(s=Cd(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const t={units:this.units,activation:zf(this.activation),useBias:this.useBias,kernelInitializer:jd(this.kernelInitializer),biasInitializer:jd(this.biasInitializer),kernelRegularizer:Hf(this.kernelRegularizer),biasRegularizer:Hf(this.biasRegularizer),activityRegularizer:Hf(this.activityRegularizer),kernelConstraint:Vh(this.kernelConstraint),biasConstraint:Vh(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}xm.className="Dense",pa(xm);class wm extends dp{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=np(t);for(const e of t.slice(1))if(null==e)throw new gh(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],id(t,1)]}call(t,e){return ba(()=>{this.invokeCallHook(t,e);let n=ep(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new gh(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],id(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}wm.className="Flatten",pa(wm);class vm extends dp{constructor(t){super(t),this.supportsMasking=!0,this.activation=Wf(t.activation)}call(t,e){return ba(()=>{this.invokeCallHook(t,e);const n=ep(t);return this.activation.apply(n)})}getConfig(){const t={activation:zf(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}vm.className="Activation",pa(vm);class km extends dp{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return ba(()=>function(t,e){return ba(()=>{if(2!==t.shape.length)throw new gh(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return yd(dd(t,1),[1,e,1])})}(t=ep(t),this.n))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}km.className="RepeatVector",pa(km);class Im extends dp{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==a)throw new gh("Can only specifiy one unknown dimension.");a=t}else s*=e}const i=id(t);if(null!==a){if(0===s||i%s!=0)throw new gh(n);r[a]=i/s}else if(i!==s)throw new gh(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return ba(()=>{this.invokeCallHook(t,e);const n=ep(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Im.className="Reshape",pa(Im);class Cm extends dp{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=cd(1,t.dims.length+1);if(!R(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new op({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=np(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return hn(ep(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Cm.className="Permute",pa(Cm);class Sm extends dp{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=ep(t);return Ea(Pi(n,this.maskValue),-1)}call(t,e){return ba(()=>{this.invokeCallHook(t,e);const n=ep(t),r=Ea(Pi(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}Sm.className="Masking",pa(Sm);class Em extends dp{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Ih(t.inputLength))}this.inputDim=t.inputDim,Fh(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Fh(this.outputDim,"outputDim"),this.embeddingsInitializer=Kd(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=jf(t.embeddingsRegularizer),this.activityRegularizer=jf(t.activityRegularizer),this.embeddingsConstraint=Hh(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return ba(()=>this.maskZero?(t=ep(t),Pi(t,ee(t))):null)}computeOutputShape(t){if(t=np(t),null==this.inputLength)return[...t,this.outputDim];const e=Ih(this.inputLength);if(e.length!==t.length-1)throw new gh(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new gh(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return ba(()=>{this.invokeCallHook(t,e);let n=ep(t);"int32"!==n.dtype&&(n=hd(n,"int32"));return vd(this.embeddings.read(),n.as1D()).reshape(np(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:jd(this.embeddingsInitializer),embeddingsRegularizer:Hf(this.embeddingsRegularizer),activityRegularizer:Hf(this.activityRegularizer),embeddingsConstraint:Vh(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Em.className="Embedding",pa(Em);class Am extends dp{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new bh}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new gh("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[np(t)]),(t=t).length<2)throw new gh(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=$h(e),e.length>1)throw new gh(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===$h(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return ba(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=ud(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=dd(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],a=t.slice(1).concat([s]);let i=r.reshape([s].concat(id(t.slice(1))));i=hn(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const s=cd(1,t).concat([0]);e.push(hn(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=hn(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(cd(0,s-1));r=hn(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=$h(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return ba(()=>{if(null==e)return null;if(!Array.isArray(e))throw new gh("`mask` should be an Array");if(!Array.isArray(t))throw new gh("`inputs` should be an Array");if(e.length!==t.length)throw new gh(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:ms(t,0)))[0];for(let t=1;t<e.length-1;++t)n=qe(n,e[t]);return n})}}class Nm extends Am{constructor(t){super(t)}mergeFunction(t){return ba(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ae(e,t[n]);return e})}}Nm.className="Add",pa(Nm);class Rm extends Am{constructor(t){super(t)}mergeFunction(t){return ba(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Lt(e,t[n]);return e})}}Rm.className="Multiply",pa(Rm);class $m extends Am{constructor(t){super(t)}mergeFunction(t){return ba(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ae(e,t[n]);return Lt(1/t.length,e)})}}$m.className="Average",pa($m);class Tm extends Am{constructor(t){super(t)}mergeFunction(t){return ba(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ks(e,t[n]);return e})}}Tm.className="Maximum",pa(Tm);class _m extends Am{constructor(t){super(t)}mergeFunction(t){return ba(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Mi(e,t[n]);return e})}}_m.className="Minimum",pa(_m);class Dm extends Am{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new gh("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(R(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new gh("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return ba(()=>gd(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new gh("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new gh("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new gh("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new gh(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return ba(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(Wi(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(ms(e[n],-1)):r.push(e[n]);const s=es(r,this.axis);return Sa(s,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Fm(t,e){for(;t<0;)t+=e;return t}Dm.className="Concatenate",pa(Dm);class Mm extends Am{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){C(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new bh("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new gh(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new gh(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>Fm(e,t[n].shape.length)):[Fm(this.axes,n.shape.length),Fm(this.axes,r.shape.length)],this.normalize&&(n=Ep(n,e[0]),r=Ep(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new bh("batchDot is not implemented for tensors of 4D or higher rank yet");if(C(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),C(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new bh("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return ba(()=>{let n,i;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=a[0]===a[1]?t.mul(e).sum(a[0]):t.transpose([1,0]).mul(e).sum(a[1]);else{const n=a[0]!==t.shape.length-1,r=a[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Fm(this.axes,t.length),Fm(this.axes,e.length)],n}computeOutputShape(t){C(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new bh("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Mm.className="Dot",pa(Mm);class Om extends dp{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return ba(()=>{this.invokeCallHook(t,e);const n=ep(t);return Ed(()=>xd(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}Om.className="GaussianNoise",pa(Om);class Lm extends dp{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return ba(()=>{this.invokeCallHook(t,e);const n=ep(t);if(this.rate>0&&this.rate<1){return Ed(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(xd(n.shape,1,t))},()=>n,e.training||!1)}return n})}}Lm.className="GaussianDropout",pa(Lm);class Bm extends dp{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ep(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return ba(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Ed(()=>{const e=ep(t),r=-1.7580993408473766;let s=Ge(ho(n),this.rate);s=hd(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)},()=>ep(t),e.training||!1)}return t})}}function zm(t,e,n,r,s,a=.001){let i;if(2===t.rank)i=Pa(t,e,n,r,s,a);else if(3===t.rank)i=Wa(t,e,n,r,s,a);else{if(4!==t.rank)throw new bh(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=Ua(t,e,n,r,s,a)}return i}function Pm(t,e,n,r,s=.001){return R(r.slice().sort(),cd(0,t.rank-1))?function(t,e,n,r,s=.001){return ba(()=>{const a=Li(t,r),i=a.mean,o=a.variance;return[zm(t,i,o,n,e,s),i,o]})}(t,e,n,r,s):function(t,e,n,r,s=.001){return ba(()=>{const a=Li(t,r),i=a.mean,o=a.variance,l=[];for(const e of cd(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=i.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),d=null==n?null:n.reshape(l);return[zm(t,u,c,d,h,s),i,o]})}(t,e,n,r,s)}Bm.className="AlphaDropout",pa(Bm);class Wm extends dp{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Kd(t.betaInitializer||"zeros"),this.gammaInitializer=Kd(t.gammaInitializer||"ones"),this.movingMeanInitializer=Kd(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Kd(t.movingVarianceInitializer||"ones"),this.betaConstraint=Hh(t.betaConstraint),this.gammaConstraint=Hh(t.gammaConstraint),this.betaRegularizer=jf(t.betaRegularizer),this.gammaRegularizer=jf(t.gammaRegularizer)}build(t){t=np(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new gh(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new op({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return ba(()=>{const n=null!=e.training&&e.training,r=ep(t),s=r.shape,a=s.length,i=cd(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=xh(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!R(u,cd(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return zm(r,t,e,n,s,this.epsilon)}return zm(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=Pm(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(t,e,n)=>{ba(()=>{const r=1-n,s=t.read(),a=s.sub(e).mul(r);t.write(s.sub(a))})};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:jd(this.betaInitializer),gammaInitializer:jd(this.gammaInitializer),movingMeanInitializer:jd(this.movingMeanInitializer),movingVarianceInitializer:jd(this.movingVarianceInitializer),betaRegularizer:Hf(this.betaRegularizer),gammaRegularizer:Hf(this.gammaRegularizer),betaConstraint:Vh(this.betaConstraint),gammaConstraint:Vh(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Wm.className="BatchNormalization",pa(Wm);class Um extends dp{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Kd(t.betaInitializer||"zeros"),this.gammaInitializer=Kd(t.gammaInitializer||"ones"),this.betaRegularizer=jf(t.betaRegularizer),this.gammaRegularizer=jf(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=np(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error("Invalid axis: "+t);if(this.axis.length!==$h(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=ep(t),r=n.shape,s=r.length;return ba(()=>{let{mean:t,variance:e}=Li(n,this.axis,!0);const a=xh(1,s);for(const t of this.axis)a[t]=r[t];const i=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(a):t;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),zm(n,t,e,l,o,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:jd(this.betaInitializer),gammaInitializer:jd(this.gammaInitializer),betaRegularizer:Hf(this.betaRegularizer),gammaRegularizer:Hf(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Um.className="LayerNormalization",pa(Um);class Vm extends dp{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new gh(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new gh(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new gh(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new op({ndim:4})]}computeOutputShape(t){let e,n;return t=np(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return ba(()=>{return e=ep(t),n=this.padding,r=this.dataFormat,ba(()=>{if(4!==e.rank)throw new gh("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new gh("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new gh(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Mr(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Gm(t,e,n,r,s,a){return ba(()=>{let i;Jh(s),Qh(a),Zh(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=rm(t,s);const o="same"===r?"same":"valid";return i="max"===a?$i(t,e,n,o):Fa(t,e,n,o),"channelsFirst"===s&&(i=hn(i,[0,3,1,2])),i})}function Hm(t,e,n,r,s,a){return ba(()=>{let i;Jh(s),Qh(a),Zh(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=sm(t,s);const o="same"===r?"same":"valid";return i="max"===a?Ti(t,e,n,o):Ma(t,e,n,o),"channelsFirst"===s&&(i=hn(i,[0,4,1,2,3])),i})}Vm.className="ZeroPadding2D",pa(Vm);class qm extends dp{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new gh("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(Fh(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new gh("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}Fh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Zh(this.padding),this.inputSpec=[new op({ndim:3})]}computeOutputShape(t){const e=em((t=np(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return ba(()=>{this.invokeCallHook(t,e),t=dd(ep(t),2);const n=this.poolingFunction(ep(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Mo(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class jm extends qm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Jh(s),Zh(r),Gm(t,e,n,r,s,"max")}}jm.className="MaxPooling1D",pa(jm);class Km extends qm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Jh(s),Zh(r),Gm(t,e,n,r,s,"avg")}}Km.className="AveragePooling1D",pa(Km);class Xm extends dp{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new gh("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];Fh(this.poolSize,"poolSize"),Fh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jh(this.dataFormat),Zh(this.padding),this.inputSpec=[new op({ndim:4})]}computeOutputShape(t){t=np(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=em(e,this.poolSize[0],this.padding,this.strides[0]),n=em(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return ba(()=>(this.invokeCallHook(t,e),this.poolingFunction(ep(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ym extends Xm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Jh(s),Zh(r),Gm(t,e,n,r,s,"max")}}Ym.className="MaxPooling2D",pa(Ym);class Jm extends Xm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Jh(s),Zh(r),Gm(t,e,n,r,s,"avg")}}Jm.className="AveragePooling2D",pa(Jm);class Zm extends dp{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new gh("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Fh(this.poolSize,"poolSize"),Fh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jh(this.dataFormat),Zh(this.padding),this.inputSpec=[new op({ndim:5})]}computeOutputShape(t){t=np(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=em(e,this.poolSize[0],this.padding,this.strides[0]),n=em(n,this.poolSize[1],this.padding,this.strides[1]),r=em(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return ba(()=>(this.invokeCallHook(t,e),this.poolingFunction(ep(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Qm extends Zm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Jh(s),Zh(r),Hm(t,e,n,r,s,"max")}}Qm.className="MaxPooling3D",pa(Qm);class tg extends Zm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Jh(s),Zh(r),Hm(t,e,n,r,s,"avg")}}tg.className="AveragePooling3D",pa(tg);class eg extends dp{constructor(t){super(t),this.inputSpec=[new op({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new bh}}class ng extends eg{constructor(t){super(t||{})}call(t,e){return ba(()=>{const e=ep(t);return Di(e,1)})}}ng.className="GlobalAveragePooling1D",pa(ng);class rg extends eg{constructor(t){super(t||{})}call(t,e){return ba(()=>{const e=ep(t);return Si(e,1)})}}rg.className="GlobalMaxPooling1D",pa(rg);class sg extends dp{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jh(this.dataFormat),this.inputSpec=[new op({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new bh}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ag extends sg{call(t,e){return ba(()=>{const e=ep(t);return"channelsLast"===this.dataFormat?Di(e,[1,2]):Di(e,[2,3])})}}ag.className="GlobalAveragePooling2D",pa(ag);class ig extends sg{call(t,e){return ba(()=>{const e=ep(t);return"channelsLast"===this.dataFormat?Si(e,[1,2]):Si(e,[2,3])})}}function og(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new gh("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function lg(t,e,n,r=!1,s,a,i=!1,o=!1){return ba(()=>{const l=e.shape.length;if(l<3)throw new gh(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(cd(2,l));if(e=hn(e,u),null!=a)throw new bh("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=ms(s,-1)),s=hn(s,u)),r&&(e=vr(e,0),null!=s&&(s=vr(s,0)));const c=[];let h,d=n;const p=e.shape[0],f=Uo(e);let m,g;null!=s&&(m=Uo(s));for(let e=0;e<p;++e){const n=f[e],r=ba(()=>t(n,d));if(null==s)h=r[0],d=r[1];else{const t=ba(()=>{const t=m[e],n=Wi(t).sub(t);return{output:r[0].mul(t).add(d[0].mul(n)),newStates:d.map((e,s)=>r[1][s].mul(t).add(e.mul(n)))}});h=t.output,d=t.newStates}o&&c.push(h)}if(o){g=gs(c,1)}return[h,g,d]})}ig.className="GlobalMaxPooling2D",pa(ig);class ug extends dp{constructor(t){let e;if(super(t),null==t.cell)throw new gh("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new bg({cells:t.cell}):t.cell,null==e.stateSize)throw new gh("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new op({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return cd(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Qd(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return ba(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new bh("Constants support is not implemented in RNN yet.");Qd(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t[t.length-1];this.inputSpec[0]=new op({shape:[e,null,n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!R(this.stateSpec.map(t=>t.shape[t.shape.length-1]),s))throw new gh(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=s.map(t=>new op({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){ba(()=>{if(!this.stateful)throw new fh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new gh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>ir([n,t])):this.states_=[ir([n,this.cell.stateSize])];else if(null==t)ya(this.states_),null!=this.keptStates&&(ya(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>ir([n,t])):this.states_[0]=ir([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new gh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):ya(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,s];if(!R(r.shape,a))throw new gh(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>xa(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=og(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new op({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof lp){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return ba(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=ep(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new gh(`RNN Layer has ${a} state(s) but was passed `+s.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=lg((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]},t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h})}getInitialState(t){return ba(()=>{let e=ir(t.shape);return e=ge(e,[1,2]),e=dd(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?yd(e,[1,t]):e):this.cell.stateSize>1?[yd(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const e=this.cell.getConfig();t.cell={className:this.cell.getClassName(),config:e};const n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,e,n={}){const r=Sp(e.cell,n);return new t(Object.assign(e,{cell:r}))}}ug.className="RNN",pa(ug);class cg extends dp{}class hg extends cg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Fh(this.units,"units"),this.activation=Wf(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Kd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Kd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Kd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=jf(t.kernelRegularizer),this.recurrentRegularizer=jf(t.recurrentRegularizer),this.biasRegularizer=jf(t.biasRegularizer),this.kernelConstraint=Hh(t.kernelConstraint),this.recurrentConstraint=Hh(t.recurrentConstraint),this.biasConstraint=Hh(t.biasConstraint),this.dropout=ld([1,ud([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ld([1,ud([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=np(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ba(()=>{if(2!==(t=t).length)throw new gh(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yg(()=>Wi(t),this.dropout,r)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yg(()=>Wi(n),this.recurrentDropout,r));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=wd(null!=a?Lt(t,a):t,this.kernel.read()),null!=this.bias&&(s=Cd(s,this.bias.read())),null!=i&&(n=Lt(n,i));let o=ae(s,wd(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const t={units:this.units,activation:zf(this.activation),useBias:this.useBias,kernelInitializer:jd(this.kernelInitializer),recurrentInitializer:jd(this.recurrentInitializer),biasInitializer:jd(this.biasInitializer),kernelRegularizer:Hf(this.kernelRegularizer),recurrentRegularizer:Hf(this.recurrentRegularizer),biasRegularizer:Hf(this.biasRegularizer),activityRegularizer:Hf(this.activityRegularizer),kernelConstraint:Vh(this.kernelConstraint),recurrentConstraint:Vh(this.recurrentConstraint),biasConstraint:Vh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return Object.assign(t,e),t}}hg.className="SimpleRNNCell",pa(hg);class dg extends ug{constructor(t){t.cell=new hg(t),super(t)}call(t,e){return ba(()=>{null!=this.cell.dropoutMask&&(ya(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ya(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}getConfig(){const t={units:this.units,activation:zf(this.activation),useBias:this.useBias,kernelInitializer:jd(this.kernelInitializer),recurrentInitializer:jd(this.recurrentInitializer),biasInitializer:jd(this.biasInitializer),kernelRegularizer:Hf(this.kernelRegularizer),recurrentRegularizer:Hf(this.recurrentRegularizer),biasRegularizer:Hf(this.biasRegularizer),activityRegularizer:Hf(this.activityRegularizer),kernelConstraint:Vh(this.kernelConstraint),recurrentConstraint:Vh(this.recurrentConstraint),biasConstraint:Vh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return new t(e)}}dg.className="SimpleRNN",pa(dg);class pg extends cg{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new gh("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Fh(this.units,"units"),this.activation=Wf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Wf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Kd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Kd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Kd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=jf(t.kernelRegularizer),this.recurrentRegularizer=jf(t.recurrentRegularizer),this.biasRegularizer=jf(t.biasRegularizer),this.kernelConstraint=Hh(t.kernelConstraint),this.recurrentConstraint=Hh(t.recurrentConstraint),this.biasConstraint=Hh(t.biasConstraint),this.dropout=ld([1,ud([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ld([1,ud([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=np(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ba(()=>{if(2!==(t=t).length)throw new gh("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yg(()=>Wi(t),this.dropout,n,3)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yg(()=>Wi(r),this.recurrentDropout,n,3));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(t=Lt(t,s[0]));let u=wd(t,this.kernel.read());this.useBias&&(u=Cd(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Lt(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=Ye(c,[2*this.units,this.units],c.rank-1),p=wd(r,h),[f,m,g]=Ye(u,3,u.rank-1),[b,y]=Ye(p,2,p.rank-1);i=this.recurrentActivation.apply(ae(f,b)),o=this.recurrentActivation.apply(ae(m,y));const x=wd(Lt(o,r),d);l=this.activation.apply(ae(g,x));const w=ae(Lt(i,r),Lt(ae(1,Ut(i)),l));return[w,w]})}getConfig(){const t={units:this.units,activation:zf(this.activation),recurrentActivation:zf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:jd(this.kernelInitializer),recurrentInitializer:jd(this.recurrentInitializer),biasInitializer:jd(this.biasInitializer),kernelRegularizer:Hf(this.kernelRegularizer),recurrentRegularizer:Hf(this.recurrentRegularizer),biasRegularizer:Hf(this.biasRegularizer),activityRegularizer:Hf(this.activityRegularizer),kernelConstraint:Vh(this.kernelConstraint),recurrentConstraint:Vh(this.recurrentConstraint),biasConstraint:Vh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return Object.assign(t,e),t}}pg.className="GRUCell",pa(pg);class fg extends ug{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new pg(t),super(t)}call(t,e){return ba(()=>{null!=this.cell.dropoutMask&&(ya(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ya(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:zf(this.activation),recurrentActivation:zf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:jd(this.kernelInitializer),recurrentInitializer:jd(this.recurrentInitializer),biasInitializer:jd(this.biasInitializer),kernelRegularizer:Hf(this.kernelRegularizer),recurrentRegularizer:Hf(this.recurrentRegularizer),biasRegularizer:Hf(this.biasRegularizer),activityRegularizer:Hf(this.activityRegularizer),kernelConstraint:Vh(this.kernelConstraint),recurrentConstraint:Vh(this.recurrentConstraint),biasConstraint:Vh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}fg.className="GRU",pa(fg);class mg extends cg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Fh(this.units,"units"),this.activation=Wf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Wf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Kd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Kd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Kd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=jf(t.kernelRegularizer),this.recurrentRegularizer=jf(t.recurrentRegularizer),this.biasRegularizer=jf(t.biasRegularizer),this.kernelConstraint=Hh(t.kernelConstraint),this.recurrentConstraint=Hh(t.recurrentConstraint),this.biasConstraint=Hh(t.biasConstraint),this.dropout=ld([1,ud([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ld([1,ud([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=np(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Rd{apply(e,r){const s=t.apply([n]),a=(new Td).apply([n]),i=t.apply([2*n]);return bd(bd(s,a),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return ba(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new gh("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yg(()=>Wi(t),this.dropout,n,4)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yg(()=>Wi(r),this.recurrentDropout,n,4));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Lt(t,a[0]));let h=wd(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Lt(r,i[0])),h=ae(h,wd(r,this.recurrentKernel.read())),this.useBias&&(h=Cd(h,this.bias.read()));const[d,p,f,m]=Ye(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=ae(Lt(l,s),Lt(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Lt(c,this.activation.apply(u));return[g,g,u]})}getConfig(){const t={units:this.units,activation:zf(this.activation),recurrentActivation:zf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:jd(this.kernelInitializer),recurrentInitializer:jd(this.recurrentInitializer),biasInitializer:jd(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Hf(this.kernelRegularizer),recurrentRegularizer:Hf(this.recurrentRegularizer),biasRegularizer:Hf(this.biasRegularizer),activityRegularizer:Hf(this.activityRegularizer),kernelConstraint:Vh(this.kernelConstraint),recurrentConstraint:Vh(this.recurrentConstraint),biasConstraint:Vh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}mg.className="LSTMCell",pa(mg);class gg extends ug{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new mg(t),super(t)}call(t,e){return ba(()=>{null!=this.cell.dropoutMask&&(ya(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ya(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get unitForgetBias(){return this.cell.unitForgetBias}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:zf(this.activation),recurrentActivation:zf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:jd(this.kernelInitializer),recurrentInitializer:jd(this.recurrentInitializer),biasInitializer:jd(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Hf(this.kernelRegularizer),recurrentRegularizer:Hf(this.recurrentRegularizer),biasRegularizer:Hf(this.biasRegularizer),activityRegularizer:Hf(this.activityRegularizer),kernelConstraint:Vh(this.kernelConstraint),recurrentConstraint:Vh(this.recurrentConstraint),biasConstraint:Vh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}gg.className="LSTM",pa(gg);class bg extends cg{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return ba(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)})}build(t){let e;Qd(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{ed("RNNCell_"+r,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=[];for(const e of this.cells)t.push({className:e.getClassName(),config:e.getConfig()});const e={cells:t},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(Sp(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return ap(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}ip(e)}}function yg(t,e,n=null,r=1){function s(){return Sd(t(),e)}if(r>1){const e=[];for(let a=0;a<r;a++)e.push(Ed(s,t,n));return e.map(t=>xa(t.clone()))}return xa(Ed(s,t,n).clone())}bg.className="StackedRNNCells",pa(bg);class xg extends dp{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Sp(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class wg extends xg{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=np(t)).length<3)throw new gh("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=np(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return ba(()=>lg((t,n)=>[ep(this.layer.call(t,e)),[]],t=ep(t),[],!1,null,null,!1,!0)[1])}}wg.className="TimeDistributed",pa(wg);class vg extends xg{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Sp(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Sp(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,_h(Xh,"BidirectionalMergeMode",s),t.weights)throw new bh("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):kh(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=og(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new gh("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const r=n.map(t=>new op({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new bh("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof lp;for(const t of a)if(t instanceof lp!==o)throw new gh("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return ba(()=>{const n=e.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=vr(s,1)),"concat"===this.mergeMode?i=gd([r,s]):"sum"===this.mergeMode?i=ae(r,s):"ave"===this.mergeMode?i=Lt(.5,ae(r,s)):"mul"===this.mergeMode?i=Lt(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ed(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ed(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Sp(e.layer);if(delete e.layer,null!=e.numConstants)throw new bh("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}var kg,Ig,Cg;function Sg(t,e,n,r){const s=L(r,N(n));for(let n=0;n<s.length;++n){const r=n*e;let a=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>a&&(a=e)}s[n]=a}return s}function Eg(t,e,n,r,s){const a=e.length,i=N(e),o=q(e),l=q(s),u=L(n,N(s));for(let e=0;e<i;++e){const n=nt(e,a,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[et(s,a,l)]=t[e]}return u}vg.className="Bidirectional",pa(vg),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(kg||(kg={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Ig||(Ig={})),function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(Cg||(Cg={}));var Ag=Object.freeze({__proto__:null,maxImpl:Sg,transposeImpl:Eg});function Ng(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&C("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}function Rg(t,e,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ga(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*b,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let b=0;b<s.outHeight;++b){const w=b*i-d,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=n+b*y;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,y=0,w=0;for(let n=v;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<d;n+=u){const i=t[s+n*r[2]+e];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,w++)}if(isNaN(b))break}g[I+n*x+e]="avg"===a?y/w:b}}}return m}function $g(t,e,n,r,s=!1,a=!1){const i=Ga(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Ga(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<y;n+=u){const i=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=m.get(t,n,o,e);u>w&&(w=u,v=s?a?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:i*d+l)}}i.set(v,t,n,o,e)}}return i}const Tg=Ml,_g=qu,Dg=ju,Fg=Ku,Mg=Go;function Og(t,e,n,r){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return t.elu(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,r);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class Lg extends Yu{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Xu(this,ma())}write(t,e,n){this.firstUse&&(this.firstUse=!1,l().get("IS_NODE")&&Du("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n}),r}move(t,e,n,r){this.data.set(t,{values:e,dtype:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensors:n}=this.data.get(t);if("complex64"===e){return Fu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>tt(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ga(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return ma().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensors:e}=this.data.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}}async time(t){const e=Z();t();return{kernelMs:Z()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}complex(t,e){const n=this.makeOutput(null,t.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:ma().keep(t.clone()),imag:ma().keep(e.clone())},n}real(t){return this.data.get(t.dataId).complexTensors.real.clone()}imag(t){return this.data.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){Ng(t,"slice");if(Vr(t.shape,e,n)){const r=Gr(e,t.strides),s=N(n);return ts(this.readSync(t.dataId).subarray(r,r+s),n,t.dtype)}const r=Ga(n,t.dtype),s=this.bufferSync(t);for(let t=0;t<r.size;++t){const n=r.indexToLoc(t).map((t,n)=>t+e[n]);r.values[t]=s.get(...n)}return r.toTensor()}stridedSlice(t,e,n,r){Ng(t,"stridedSlice");const s=Lr(e,n,r);if(s.some(t=>0===t))return ts([],s);const a=Ga(s,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;t++){const n=a.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];a.set(i.get(...s),...n)}return a.toTensor()}diag(t){const e=this.readSync(t.dataId),n=Ga([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(r);return o}reverse(t,e){Ng(t,"reverse");const n=Ga(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const a=n.indexToLoc(s),i=a.slice();e.forEach(e=>i[e]=t.shape[e]-1-i[e]),n.set(r.get(...i),...a)}return n.toTensor()}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>mi(t)),r=t.map(t=>fi(t));return ar(this.concat(n,e),this.concat(r,e))}const n=t.map(t=>{const n=N(t.shape.slice(e));return t.as2D(-1,n)}),r=Qr(n.map(t=>t.shape),1),s=Ga(r,t[0].dtype).values;if(1===n[0].shape[0]){let t=0;n.forEach(e=>{s.set(this.readSync(e.dataId),t),t+=e.size})}else{let t=0;n.forEach(e=>{const n=this.readSync(e.dataId);let a=0;for(let i=0;i<e.shape[0];++i){const o=i*r[1]+t;for(let t=0;t<e.shape[1];++t)s[o+t]=n[a++]}t+=e.shape[1]})}const a=Qr(t.map(t=>t.shape),e);return ts(s,a,t[0].dtype)}neg(t){return Ng(t,"neg"),this.multiply(Gt(-1),t)}add(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t+n,imag:e+r})):this.broadcastedBinaryOp(t,e,wt(t.dtype,e.dtype),(t,e)=>t+e)}addN(t){Ng(t,"addN");const e=t.map(t=>this.readSync(t.dataId)),n=Ga(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=M([e],t.shape),r=Si(t,n),s=he(r.shape,n),a=this.subtract(t,r.reshape(s)),i=this.exp(a),o=this.sum(i,n).reshape(s);return Wt(i,o)}subtract(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t-n,imag:e-r})):this.broadcastedBinaryOp(t,e,wt(t.dtype,e.dtype),(t,e)=>t-e)}pow(t,e){return Ng([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.pow(t,e))}batchMatMul(t,e,n,r){Ng([t,e],"matMul");const s=n?t.shape[1]:t.shape[2],a=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],o=t.shape[0],l=this.readSync(t.dataId),u=this.readSync(e.dataId),[c,h,d]=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],[p,f,m]=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],g=a*i,b=Ga([o,a,i],t.dtype),y=b.values,x=this.blockSize;for(let t=0;t<o;t++)for(let e=0;e<a;e+=x)for(let n=0;n<i;n+=x)for(let r=0;r<s;r+=x){const o=Math.min(e+x,a),b=Math.min(n+x,i),w=Math.min(r+x,s);for(let s=e;s<o;s++)for(let e=n;e<b;e++){let n=0;for(let a=r;a<w;a++)n+=l[t*c+s*h+a*d]*u[a*p+e*f+t*m];y[t*g+(s*i+e)]+=n}}return b.toTensor()}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){let o=this.batchMatMul(t,e,n,r);return s&&(o=this.add(o,s)),a&&(o=Og(this,o,a,i)),o}multiply(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})):this.broadcastedBinaryOp(t,e,wt(t.dtype,e.dtype),(t,e)=>t*e)}floorDiv(t,e){Ng([t,e],"floorDiv");return this.broadcastedBinaryOp(t,e,"int32",(t,e)=>Math.floor(t/e))}sum(t,e){Ng(t,"sum"),de("sum",e,t.rank);const[n,r]=ce(t.shape,e),s=ir(n,wt(t.dtype,"int32")),a=N(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=0;for(let t=0;t<a;++t)n+=o[e+t];i[t]=n}return s}prod(t,e){Ng(t,"sum");const[n,r]=ce(t.shape,e),s=ir(n,wt(t.dtype,"int32")),a=N(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=1;for(let t=0;t<a;++t)n*=o[e+t];i[t]=n}return s}unsortedSegmentSum(t,e,n){Ng(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let t=0;t<s;++t)e=e.expandDims(t+1);for(let s=0;s<n;++s){const n=Gt(s,"int32"),a=Vn(n,e).asType("float32").mul(t).sum(0);r.push(a)}return gs(r)}argMin(t,e){Ng(t,"argMin");const n=[e];de("argMin",n,t.rank);const[r,s]=ce(t.shape,n),a=ir(r,"int32"),i=N(s),o=this.readSync(a.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=l[e],r=0;for(let t=0;t<i;++t){const s=l[e+t];s<n&&(n=s,r=t)}o[t]=r}return a}argMax(t,e){Ng(t,"argMax");const n=[e];de("argMax",n,t.rank);const[r,s]=ce(t.shape,n),a=ir(r,"int32"),i=N(s),o=this.readSync(a.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=l[e],r=0;for(let t=0;t<i;++t){const s=l[e+t];s>n&&(n=s,r=t)}o[t]=r}return a}cumsum(t,e,n,r){if(Ng(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=wt(t.dtype,"int32"),a=ir(t.shape,s),i=this.readSync(a.dataId),o=this.readSync(t.dataId),l=t.shape[t.rank-1],u=r?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=l)for(let e=0;e<l;e++){const r=u(t,e);if(0===e)i[r]=n?0:o[r];else{const s=u(t,e-1);i[r]=n?o[s]+i[s]:o[r]+i[s]}}return a}equal(t,e){return Ng([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t===e?1:0)}notEqual(t,e){return Ng([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t!==e?1:0)}less(t,e){return Ng([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<e?1:0)}lessEqual(t,e){return Ng([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<=e?1:0)}greater(t,e){return Ng([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>e?1:0)}greaterEqual(t,e){return Ng([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>=e?1:0)}logicalNot(t){Ng(t,"logicalNot");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n[t]=e[t]?0:1;return this.makeOutput(n,t.shape,"bool")}logicalAnd(t,e){return Ng([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t&&e)}logicalOr(t,e){return Ng([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t||e)}select(t,e,n){Ng([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),a=this.readSync(n.dataId),i=ir(e.shape,wt(e.dtype,n.dtype)),o=this.readSync(i.dataId);let l=0;const u=0===t.rank||t.rank>1||1===e.rank?1:N(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<u;e++)1===r[t]?o[l++]=s[t]:o[l++]=a[t];return i}where(t){Ng([t],"where");const e=this.readSync(t.dataId);return Mg(t.shape,e)}topk(t,e,n){Ng(t,"topk");const r=this.readSync(t.dataId);return Fg(r,t.shape,t.dtype,e)}min(t,e){Ng(t,"min"),de("min",e,t.rank);const[n,r]=ce(t.shape,e),s=ir(n,t.dtype),a=N(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];r<n&&(n=r)}i[t]=n}return s}minimum(t,e){return Ng([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.min(t,e))}mod(t,e){return Ng([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})}maximum(t,e){return Ng([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.max(t,e))}all(t,e){Ng(t,"all"),de("all",e,t.rank);const[n,r]=ce(t.shape,e),s=ir(n,t.dtype),a=N(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n&&r}i[t]=n}return s}any(t,e){Ng(t,"any"),de("any",e,t.rank);const[n,r]=ce(t.shape,e),s=ir(n,t.dtype),a=N(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n||r}i[t]=n}return s}squaredDifference(t,e){return Ng([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t-e;return n*n})}ceil(t){Ng(t,"ceil");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.ceil(e[t]);return this.makeOutput(n,t.shape,"float32")}floor(t){Ng(t,"floor");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.floor(e[t]);return this.makeOutput(n,t.shape,"float32")}sign(t){Ng(t,"x");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)e[t]<0?n[t]=-1:e[t]>0?n[t]=1:n[t]=0;return this.makeOutput(n,t.shape,"float32")}isNaN(t){Ng(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isNaN(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isInf(t){Ng(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Math.abs(e[t])===1/0&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isFinite(t){Ng(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isFinite(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}round(t){Ng(t,"round");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=Math.floor(e[t]);e[t]-r<.5?n[t]=Math.floor(e[t]):e[t]-r>.5?n[t]=Math.ceil(e[t]):n[t]=r%2==0?r:r+1}return this.makeOutput(n,t.shape,"float32")}exp(t){Ng(t,"exp");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.exp(e[t]);return this.makeOutput(n,t.shape,"float32")}expm1(t){Ng(t,"expm1");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.expm1(e[t]);return this.makeOutput(n,t.shape,"float32")}log(t){Ng(t,"log");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.log(r)}return this.makeOutput(n,t.shape,"float32")}log1p(t){Ng(t,"log1p");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.log1p(r)}return this.makeOutput(n,t.shape,"float32")}sqrt(t){Ng(t,"sqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.sqrt(r)}return this.makeOutput(n,t.shape,"float32")}rsqrt(t){Ng(t,"rsqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=1/Math.sqrt(r)}return this.makeOutput(n,t.shape,"float32")}reciprocal(t){Ng(t,"reciprocal");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=1/e[t];return this.makeOutput(n,t.shape,"float32")}linear(t){return t}relu(t){Ng(t,"relu");const e=ir(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t)n[t]=Math.max(0,r[t]);return e}relu6(t){Ng(t,"relu");const e=ir(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t)n[t]=Math.min(Math.max(0,r[t]),6);return e}prelu(t,e){return Ng([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>t<0?e*t:t)}elu(t){Ng(t,"elu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const r=n[t];e[t]=r>=0?r:Math.exp(r)-1}return this.makeOutput(e,t.shape,"float32")}eluDer(t,e){Ng([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}selu(t){Ng(t,"selu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const r=n[t];e[t]=r>=0?1.0507009873554805*r:1.7580993408473768*(Math.exp(r)-1)}return this.makeOutput(e,t.shape,"float32")}clip(t,e,n){Ng(t,"clip");const r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const a=s[t];r[t]=a>n?n:a<e?e:a}return this.makeOutput(r,t.shape,"float32")}abs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return this.makeOutput(e,t.shape,"float32")}complexAbs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<t.size;++r){const t=n[2*r],s=n[2*r+1];e[r]=Math.hypot(t,s)}return this.makeOutput(e,t.shape,"float32")}int(t){Ng(t,"int");const e=new Int32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=n[t];return this.makeOutput(e,t.shape,"int32")}sigmoid(t){Ng(t,"sigmoid");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=1/(1+Math.exp(-n[t]));return this.makeOutput(e,t.shape,"float32")}softplus(t){Ng(t,"softplus");const e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const s=r[t]>-e,a=r[t]<e,i=Math.exp(r[t]);let o;o=a?i:s?r[t]:Math.log(1+i),n[t]=o}return this.makeOutput(n,t.shape,"float32")}sin(t){Ng(t,"sin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sin(n[t]);return this.makeOutput(e,t.shape,"float32")}cos(t){Ng(t,"cos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.cos(n[t]);return this.makeOutput(e,t.shape,"float32")}tan(t){Ng(t,"tan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.tan(n[t]);return this.makeOutput(e,t.shape,"float32")}asin(t){Ng(t,"asin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asin(n[t]);return this.makeOutput(e,t.shape,"float32")}acos(t){Ng(t,"acos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acos(n[t]);return this.makeOutput(e,t.shape,"float32")}atan(t){Ng(t,"atan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atan(n[t]);return this.makeOutput(e,t.shape,"float32")}atan2(t,e){return Ng([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.atan2(t,e))}sinh(t){Ng(t,"sinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sinh(n[t]);return this.makeOutput(e,t.shape,"float32")}cosh(t){Ng(t,"cosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.cosh(n[t]);return this.makeOutput(e,t.shape,"float32")}tanh(t){Ng(t,"tanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=T(n[t]);return this.makeOutput(e,t.shape,"float32")}asinh(t){Ng(t,"asinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asinh(n[t]);return this.makeOutput(e,t.shape,"float32")}acosh(t){Ng(t,"acosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acosh(n[t]);return this.makeOutput(e,t.shape,"float32")}atanh(t){Ng(t,"atanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atanh(n[t]);return this.makeOutput(e,t.shape,"float32")}erf(t){Ng(t,"erf");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const r=Math.sign(n[t]),s=Math.abs(n[t]),a=1/(1+.3275911*s);e[t]=r*(1-((((1.061405429*a-1.453152027)*a+1.421413741)*a-.284496736)*a+.254829592)*a*Math.exp(-s*s))}return this.makeOutput(e,t.shape,"float32")}step(t,e=0){Ng(t,"step");const n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const s=r[t];isNaN(s)?n[t]=NaN:n[t]=s>0?1:e}return this.makeOutput(n,t.shape,"float32")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){let i=this.conv2d(t,e,n);return r&&(i=this.add(i,r)),s&&(i=Og(this,i,s,a)),i}conv2d(t,e,n){Ng([t,e],"conv2d");const r=n.filterHeight,s=n.filterWidth,a=n.dilationHeight,i=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u="channelsLast"===n.dataFormat,c=Ga(n.outShape,t.dtype),h=t.strides[0],d=u?t.strides[1]:t.strides[2],p=u?t.strides[2]:1,f=u?1:t.strides[1],m=c.strides[0],g=u?c.strides[1]:c.strides[2],b=u?c.strides[2]:1,y=u?1:c.strides[1],x=this.readSync(t.dataId),w=this.readSync(e.dataId),v=c.values;for(let t=0;t<n.batchSize;++t){const u=t*h,c=t*m;for(let t=0;t<n.outHeight;++t){const h=c+t*g,m=t*n.strideHeight-l;for(let t=0;t<r;t++){const r=m+t*a;if(r<0||r>=n.inHeight)continue;const l=t*e.strides[0],c=u+r*d;for(let t=0;t<n.outWidth;++t){const r=h+t*b,a=t*n.strideWidth-o;for(let t=0;t<s;t++){const s=a+t*i;if(s<0||s>=n.inWidth)continue;const o=c+s*p;let u=l+t*e.strides[1];for(let t=0;t<n.inChannels;++t){const e=x[o+t*f];for(let t=0;t<n.outChannels;++t)v[r+t*y]+=e*w[u+t];u+=n.outChannels}}}}}}return c.toTensor()}conv3d(t,e,n){const r=n.filterDepth,s=n.filterHeight,a=n.filterWidth,i=n.dilationDepth,o=n.dilationHeight,l=n.dilationWidth,u=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,d=Ga(n.outShape,t.dtype),p=this.readSync(t.dataId),f=this.readSync(e.dataId),m=d.values;for(let g=0;g<n.batchSize;++g){const b=g*t.strides[0],y=g*d.strides[0];for(let g=0;g<n.outDepth;++g){const x=y+g*d.strides[1],w=g*n.strideDepth-u;for(let u=0;u<r;u++){const r=w+u*i;if(r<0||r>=n.inDepth)continue;const g=u*e.strides[0],y=b+r*t.strides[1];for(let r=0;r<n.outHeight;++r){const i=x+r*d.strides[2],u=r*n.strideHeight-h;for(let r=0;r<s;r++){const s=u+r*o;if(s<0||s>=n.inHeight)continue;const h=g+r*e.strides[1],d=y+s*t.strides[2];for(let t=0;t<n.outWidth;++t){const r=i+t*n.outChannels,s=t*n.strideWidth-c;for(let t=0;t<a;t++){const a=s+t*l;if(a<0||a>=n.inWidth)continue;const i=h+t*e.strides[2],o=d+a*n.inChannels;let u=i;for(let t=0;t<n.inChannels;++t){const e=p[o+t];for(let t=0;t<n.outChannels;++t)m[r+t]+=e*f[u+t];u+=n.outChannels}}}}}}}}return d.toTensor()}conv2dDerInput(t,e,n){Ng([t,e],"conv2dDerInput");const r=Ga(n.inShape,"float32"),s=r.values,a=this.readSync(t.dataId),i=this.readSync(e.dataId),[o,l,u]=e.strides,{batchSize:c,filterHeight:h,filterWidth:d,inChannels:p,inHeight:f,inWidth:m,outChannels:g,outHeight:b,outWidth:y,strideHeight:x,strideWidth:w,dataFormat:v}=n,k=h-1-n.padInfo.top,I=d-1-n.padInfo.left,C="channelsLast"===v,S=r.strides[0],E=C?r.strides[1]:r.strides[2],A=C?r.strides[2]:1,N=C?1:r.strides[1],R=t.strides[0],$=C?t.strides[1]:t.strides[2],T=C?t.strides[2]:1,_=C?1:t.strides[1];for(let t=0;t<c;++t)for(let e=0;e<p;++e)for(let n=0;n<f;++n){const r=n-k,c=Math.max(0,Math.ceil(r/x)),p=Math.min(b,(h+r)/x);for(let f=0;f<m;++f){const m=f-I,b=Math.max(0,Math.ceil(m/w)),v=Math.min(y,(d+m)/w);let k=0;for(let n=c;n<p;++n){const s=n*x-r;for(let r=b;r<v;++r){const c=R*t+$*n+T*r,p=o*(h-1-s)+l*(d-1-(r*w-m))+u*e;for(let t=0;t<g;++t){k+=a[c+_*t]*i[p+t]}}}s[S*t+E*n+A*f+N*e]=k}}return r.toTensor()}conv3dDerInput(t,e,n){const r=Ga(n.inShape,"float32"),s=r.values,[a,i,o,l]=r.strides,u=this.readSync(t.dataId),[c,h,d,p]=t.strides,f=this.readSync(e.dataId),[m,g,b,y]=e.strides,{batchSize:x,filterDepth:w,filterHeight:v,filterWidth:k,inChannels:I,inDepth:C,inHeight:S,inWidth:E,outChannels:A,outDepth:N,outHeight:R,outWidth:$,strideDepth:T,strideHeight:_,strideWidth:D}=n,F=w-1-n.padInfo.front,M=v-1-n.padInfo.top,O=k-1-n.padInfo.left;for(let t=0;t<x;++t)for(let e=0;e<I;++e)for(let n=0;n<C;++n){const r=n-F,x=Math.max(0,Math.ceil(r/T)),I=Math.min(N,(w+r)/T);for(let C=0;C<S;++C){const S=C-M,N=Math.max(0,Math.ceil(S/_)),F=Math.min(R,(v+S)/_);for(let R=0;R<E;++R){const E=R-O,M=Math.max(0,Math.ceil(E/D)),L=Math.min($,(k+E)/D);let B=0;for(let n=x;n<I;++n){const s=n*T-r;for(let r=N;r<F;++r){const a=r*_-S;for(let i=M;i<L;++i){const o=c*t+h*n+d*r+p*i,l=m*(w-1-s)+g*(v-1-a)+b*(k-1-(i*D-E))+y*e;for(let t=0;t<A;++t){B+=u[o+t]*f[l+t]}}}}s[a*t+i*n+o*C+l*R+e]=B}}}return r.toTensor()}conv2dDerFilter(t,e,n){Ng([t,e],"conv2dDerFilter");const r=n.strideHeight,s=n.strideWidth,a=n.filterHeight,i=n.filterWidth,o="channelsLast"===n.dataFormat,l=Ga(n.filterShape,"float32"),u=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<a;++t){const e=Math.max(0,Math.ceil((c-t)/r)),a=Math.min(n.outHeight,(n.inHeight+c-t)/r);for(let p=0;p<i;++p){const i=Math.max(0,Math.ceil((u-p)/s)),f=Math.min(n.outWidth,(n.inWidth+u-p)/s);for(let m=0;m<n.inChannels;++m)for(let g=0;g<n.outChannels;++g){let b=0;for(let l=0;l<n.batchSize;++l)for(let n=e;n<a;++n){const e=t+n*r-c;for(let t=i;t<f;++t){const r=p+t*s-u;b+=o?h.get(l,e,r,m)*d.get(l,n,t,g):h.get(l,m,e,r)*d.get(l,g,n,t)}}l.set(b,t,p,m,g)}}}return l.toTensor()}conv3dDerFilter(t,e,n){const r=n.strideDepth,s=n.strideHeight,a=n.strideWidth,i=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=Ga(n.filterShape,"float32"),c=u.values,[h,d,p,f]=u.strides,m=this.readSync(e.dataId),[g,b,y,x]=e.strides,w=this.readSync(t.dataId),[v,k,I,C]=t.strides,S=n.padInfo.front,E=n.padInfo.left,A=n.padInfo.top;for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((S-t)/r)),i=Math.min(n.outDepth,(n.inDepth+S-t)/r),u=t*h;for(let h=0;h<o;++h){const o=Math.max(0,Math.ceil((A-h)/s)),N=Math.min(n.outHeight,(n.inHeight+A-h)/s),R=h*d+u;for(let u=0;u<l;++u){const l=Math.max(0,Math.ceil((E-u)/a)),d=Math.min(n.outWidth,(n.inWidth+E-u)/a),$=u*p+R;for(let p=0;p<n.inChannels;++p){const R=p*f+$;for(let f=0;f<n.outChannels;++f){let $=0;for(let c=0;c<n.batchSize;++c){const n=c*v,R=c*g;for(let c=e;c<i;++c){const e=(t+c*r-S)*k+n,i=c*b+R;for(let t=o;t<N;++t){const n=(h+t*s-A)*I+e,r=t*y+i;for(let t=l;t<d;++t){const e=t*x+r;$+=w[(u+t*a-E)*C+n+p]*m[e+f]}}}}c[R+f]=$}}}}}return u.toTensor()}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){let i=this.depthwiseConv2D(t,e,n);return r&&(i=this.add(i,r)),s&&(i=Og(this,i,s,a)),i}depthwiseConv2D(t,e,n){Ng([t,e],"depthwiseConv2D");const r=n.filterHeight,s=n.filterWidth,a=n.dilationHeight,i=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u=n.outChannels/n.inChannels,c=Ga(n.outShape,t.dtype),h=this.readSync(t.dataId),d=this.readSync(e.dataId),p=c.values;for(let f=0;f<n.batchSize;++f){const m=f*t.strides[0],g=f*c.strides[0];for(let f=0;f<n.outHeight;++f){const b=g+f*c.strides[1],y=f*n.strideHeight-o;for(let o=0;o<r;++o){const r=y+o*a;if(r<0||r>=n.inHeight)continue;const f=o*e.strides[0],g=m+r*t.strides[1];for(let t=0;t<n.outWidth;++t){const r=b+t*c.strides[2],a=t*n.strideWidth-l;for(let t=0;t<s;++t){const s=a+t*i;if(s<0||s>=n.inWidth)continue;const o=f+t*e.strides[1],l=g+s*n.inChannels;let c=r,m=o;for(let t=0;t<n.inChannels;++t){const e=h[l+t];for(let t=0;t<u;++t)p[c+t]+=e*d[m+t];c+=u,m+=u}}}}}}return c.toTensor()}depthwiseConv2DDerInput(t,e,n){Ng([t,e],"depthwiseConv2DDerInput");const r=Ga(n.inShape,"float32"),s=r.values,[a,i,o]=r.strides,l=this.readSync(t.dataId),[u,c,h]=t.strides,d=this.readSync(e.dataId),[p,f,m]=e.strides,{batchSize:g,filterHeight:b,filterWidth:y,inChannels:x,inHeight:w,inWidth:v,outChannels:k,outHeight:I,outWidth:C,strideHeight:S,strideWidth:E}=n,A=b-1-n.padInfo.top,N=y-1-n.padInfo.left,R=k/x;for(let t=0;t<g;++t)for(let e=0;e<x;++e)for(let n=0;n<w;++n){const r=n-A,g=Math.max(0,Math.ceil(r/S)),x=Math.min(I,(b+r)/S);for(let w=0;w<v;++w){const v=w-N,k=Math.max(0,Math.ceil(v/E)),I=Math.min(C,(y+v)/E);let A=0;for(let n=g;n<x;++n){const s=n*S-r;for(let r=k;r<I;++r){const a=u*t+c*n+h*r,i=p*(b-1-s)+f*(y-1-(r*E-v))+m*e;for(let t=0;t<R;++t){A+=l[a+(e*R+t)]*d[i+t]}}}s[a*t+i*n+o*w+e]=A}}return r.toTensor()}depthwiseConv2DDerFilter(t,e,n){Ng([t,e],"depthwiseConv2DDerFilter");const r=n.strideHeight,s=n.strideWidth,a=n.filterHeight,i=n.filterWidth,o=Ga(n.filterShape,"float32"),l=n.padInfo.left,u=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<a;++t){const e=Math.max(0,Math.ceil((u-t)/r)),a=Math.min(n.outHeight,(n.inHeight+u-t)/r);for(let p=0;p<i;++p){const i=Math.max(0,Math.ceil((l-p)/s)),f=Math.min(n.outWidth,(n.inWidth+l-p)/s);for(let m=0;m<n.outChannels;++m){const g=Math.trunc(m/c),b=m%c;let y=0;for(let o=0;o<n.batchSize;++o)for(let n=e;n<a;++n){const e=t+n*r-u;for(let t=i;t<f;++t){const r=p+t*s-l;y+=h.get(o,e,r,g)*d.get(o,n,t,m)}}o.set(y,t,p,g,b)}}}return o.toTensor()}tile(t,e){return Ng(t,"tile"),Dg(this.bufferSync(t),e)}pad(t,e,n){Ng(t,"pad");const r=e.map((e,n)=>e[0]+t.shape[n]+e[1]),s=e.map(t=>t[0]),a=this.bufferSync(t),i=Ga(r,t.dtype);0!==n&&i.values.fill(n);for(let e=0;e<t.size;e++){const t=a.indexToLoc(e),n=t.map((t,e)=>t+s[e]);i.set(a.get(...t),...n)}return i.toTensor()}gather(t,e,n){Ng([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const a=Ga(r,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;++t){const e=a.indexToLoc(t),r=e.slice();r[n]=s[e[n]];const o=i.locToIndex(r);a.values[t]=i.values[o]}return a.toTensor()}batchToSpaceND(t,e,n){Ng([t],"batchToSpaceND");const r=e.reduce((t,e)=>t*e),s=Nu(t.shape,e,r),a=Ru(s.length,e.length),i=$u(t.shape,e,r),o=Tu(n,e.length),l=_u(i,n,e.length);return hn(t.reshape(s),a).reshape(i).slice(o,l)}spaceToBatchND(t,e,n){Ng([t],"spaceToBatchND");const r=e.reduce((t,e)=>t*e),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const a=t.pad(s),i=Nu(a.shape,e,r,!1),o=Ru(i.length,e.length,!1),l=$u(a.shape,e,r,!1),u=hn(a.reshape(i),o);return oe(u,l)}maxPool(t,e){Ng(t,"maxPool");return Rg(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"max").toTensor()}maxPoolBackprop(t,e,n,r){Ng([e,n],"maxPoolBackprop");const s=this.readSync(e.dataId),a=Ga(r.outShape,e.dtype,$g(s,e.shape,e.dtype,r).values),i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=h-1-r.padInfo.left,p=c-1-r.padInfo.top,f=Ga(e.shape,"float32"),m=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inHeight;++n)for(let s=0;s<r.inWidth;++s){const g=n-p,b=s-d;let y=0;for(let n=0;n<c;n+=l){const s=(g+n)/i;if(!(s<0||s>=r.outHeight||Math.floor(s)!==s))for(let i=0;i<h;i+=u){const l=(b+i)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const u=c*h-1-a.get(t,s,l,e)===n*h+i?1:0;if(0===u)continue;y+=m.get(t,s,l,e)*u}}f.set(y,t,n,s,e)}return f.toTensor()}avgPoolBackprop(t,e,n){Ng([t,e],"avgPoolBackprop");const r=n.strideHeight,s=n.strideWidth,a=n.filterHeight,i=n.filterWidth,o=n.dilationHeight,l=n.dilationWidth,u=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,d=u-1-n.padInfo.top,p=Ga(e.shape,"float32"),f=1/(a*i),m=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let a=0;a<n.inHeight;++a)for(let i=0;i<n.inWidth;++i){const g=a-d,b=i-h;let y=0;for(let a=0;a<u;a+=o){const i=(g+a)/r;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<c;r+=l){const a=(b+r)/s;if(a<0||a>=n.outWidth||Math.floor(a)!==a)continue;y+=m.get(t,i,a,e)}}p.set(y*f,t,a,i,e)}return p.toTensor()}pool3d(t,e,n){Ng(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(t.dataId),b=Ga(e.outShape,t.dtype),y=b.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],k=e.outShape[4];for(let b=0;b<e.batchSize;++b){const I=b*x,C=b*t.strides[0];for(let b=0;b<e.inChannels;++b)for(let x=0;x<e.outDepth;++x){const S=x*r-d;let E=S;for(;E<0;)E+=i;const A=Math.min(e.inDepth,u+S),N=I+x*w;for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const x=Math.min(e.inHeight,c+u),w=N+r*v;for(let r=0;r<e.outWidth;++r){const s=r*a-f;let u=s;for(;u<0;)u+=l;const c=Math.min(e.inWidth,h+s),p=w+r*k;let v=m,I=0,S=0;for(let e=E;e<A;e+=i){const r=C+e*t.strides[1];for(let e=d;e<x;e+=o){const s=r+e*t.strides[2];for(let e=u;e<c;e+=l){const r=g[s+e*t.strides[3]+b];if("max"===n&&r>v?v=r:"avg"===n&&(I+=r,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}y[p+b]="avg"===n?I/S:v}}}}return b.toTensor()}avgPool3d(t,e){return Ng(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){Ng([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,a=n.strideWidth,i=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=d-1-n.padInfo.front,g=f-1-n.padInfo.left,b=p-1-n.padInfo.top,y=Ga(e.shape,"float32"),x=1/(i*o*l),w=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let i=0;i<n.inDepth;++i)for(let o=0;o<n.inHeight;++o)for(let l=0;l<n.inWidth;++l){const v=i-m,k=o-b,I=l-g;let C=0;for(let i=0;i<d;i+=u){const o=(v+i)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<p;r+=c){const i=(k+r)/s;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<f;r+=h){const s=(I+r)/a;if(s<0||s>=n.outWidth||Math.floor(s)!==s)continue;C+=w.get(t,o,i,s,e)}}}y.set(C*x,t,i,o,l,e)}return y.toTensor()}maxPool3d(t,e){return Ng(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=Ga(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,m=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=i;const w=Math.min(e.inDepth,u+y);for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const v=Math.min(e.inHeight,c+u);for(let s=0;s<e.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(e.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let e=x;e<w;e+=i){const n=e-y;for(let r=d;r<v;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=m.get(t,e,r,a,g);o>=C&&(C=o,S=n*c*h+s*c+i)}}}n.set(S,t,b,r,s,g)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){Ng([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),a=r.strideDepth,i=r.strideHeight,o=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=p-1-r.padInfo.left,g=d-1-r.padInfo.top,b=Ga(e.shape,"float32"),y=this.bufferSync(s),x=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let w=0;w<r.inWidth;++w){const v=n-f,k=s-g,I=w-m;let C=0;for(let n=0;n<h;n+=l){const s=(v+n)/a;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let a=0;a<d;a+=u){const l=(k+a)/i;if(!(l<0||l>=r.outHeight||Math.floor(l)!==l))for(let i=0;i<p;i+=c){const u=(I+i)/o;if(u<0||u>=r.outWidth||Math.floor(u)!==u)continue;const c=h*d*p-1-y.get(t,s,l,u,e)===n*d*p+a*p+i?1:0;if(0===c)continue;C+=x.get(t,s,l,u,e)*c}}}b.set(C,t,n,s,w,e)}return b.toTensor()}cast(t,e){return Uu(t,e,this)}reshape(t,e){return Vu(t,e)}avgPool(t,e){Ng(t,"avgPool"),Ng(t,"maxPool");return Rg(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"avg").toTensor().toFloat()}resizeBilinear(t,e,n,r){Ng(t,"resizeBilinear");const[s,a,i,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(N([s,e,n,o])),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d=0;const p=c[0]/h[0],f=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<e;s++){const e=p*s,c=Math.floor(e),h=e-c,m=Math.min(a-1,Math.ceil(e)),g=r*t.strides[0]+c*t.strides[1],b=r*t.strides[0]+m*t.strides[1];for(let e=0;e<n;e++){const n=f*e,r=Math.floor(n),s=n-r,a=Math.min(i-1,Math.ceil(n)),c=g+r*t.strides[2],p=b+r*t.strides[2],m=g+a*t.strides[2],y=b+a*t.strides[2];for(let t=0;t<o;t++){const e=l[c+t],n=l[p+t],r=e+(l[m+t]-e)*s,a=r+(n+(l[y+t]-n)*s-r)*h;u[d++]=a}}}return ts(u,[s,e,n,o])}resizeBilinearBackprop(t,e,n){Ng([t,e],"resizeBilinearBackprop");const[r,s,a,i]=e.shape,[,o,l]=t.shape,u=new Float32Array(r*s*a*i),c=[n&&o>1?s-1:s,n&&l>1?a-1:a],h=[n&&o>1?o-1:o,n&&l>1?l-1:l],d=c[0]/h[0],p=c[1]/h[1],f=this.readSync(t.dataId);let m=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const r=t*d,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+o*e.strides[1],g=n+c*e.strides[1],b=r-o,y=1-b;for(let t=0;t<l;t++){const n=t*p,r=Math.floor(n),s=Math.min(Math.ceil(n),a-1),o=n-r,l=1-o,c=h+r*e.strides[2],d=h+s*e.strides[2],x=g+r*e.strides[2],w=g+s*e.strides[2],v=y*l,k=y*o,I=b*l,C=b*o;for(let t=0;t<i;t++){const e=f[m++];u[c+t]+=e*v,u[d+t]+=e*k,u[x+t]+=e*I,u[w+t]+=e*C}}}}return zo(u,[r,a,s,i],e.dtype)}resizeNearestNeighbor(t,e,n,r){Ng(t,"resizeNearestNeighbor");const[s,a,i,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(s*e*n*o),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=c[0]/h[0],p=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*t.strides[0];for(let c=0;c<e;c++){const e=d*c,h=s+Math.min(a-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=p*e,s=h+Math.min(i-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=l[s+t];u[f++]=e}}}}return ts(u,[s,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){Ng([t,e],"resizeNearestNeighborBackprop");const[r,s,a,i]=e.shape,[,o,l]=t.shape,u=new Float32Array(r*s*a*i),c=this.readSync(t.dataId),h=[n&&o>1?s-1:s,n&&l>1?a-1:a],d=[n&&o>1?o-1:o,n&&l>1?l-1:l],p=h[0]/d[0],f=h[1]/d[1],m=1/p,g=1/f,b=2*Math.ceil(m)+2,y=2*Math.ceil(g)+2;for(let h=0;h<r;h++){const r=h*e.strides[0];for(let h=0;h<s;h++){const d=r+h*e.strides[1],x=Math.floor(h*m),w=Math.floor(x-b/2);for(let m=0;m<a;m++){const x=d+m*e.strides[2],v=Math.floor(m*g),k=Math.floor(v-y/2);for(let e=0;e<i;e++){let i=0;for(let u=0;u<b;u++){const d=u+w;if(d<0||d>=o)continue;const g=r+d*t.strides[1],b=d*p;if(h===Math.min(s-1,n?Math.round(b):Math.floor(b)))for(let r=0;r<y;r++){const s=r+k;if(s<0||s>=l)continue;const o=g+s*t.strides[2],u=s*f;m===Math.min(a-1,n?Math.round(u):Math.floor(u))&&(i+=c[o+e])}}u[x+e]=i}}}}return zo(u,e.shape,e.dtype)}batchNorm(t,e,n,r,s,a){Ng([t,e,n,s,r],"batchNorm");const i=this.readSync(t.dataId),o=this.readSync(e.dataId),l=this.readSync(n.dataId),u=s?this.readSync(s.dataId):new Float32Array([1]),c=r?this.readSync(r.dataId):new Float32Array([0]),h=new Float32Array(i.length),d=c.length,p=u.length,f=l.length,m=o.length;let g=0,b=0,y=0,x=0;for(let t=0;t<i.length;++t)h[t]=c[g++]+(i[t]-o[b++])*u[y++]/Math.sqrt(l[x++]+a),g>=d&&(g=0),b>=m&&(b=0),y>=p&&(y=0),x>=f&&(x=0);return zo(h,t.shape)}localResponseNormalization4D(t,e,n,r,s){Ng(t,"localResponseNormalization4D");const a=t.shape[3],i=a-1,o=this.readSync(t.dataId),l=t.size,u=new Float32Array(l);function c(t){const n=t%a;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,i);let l=0;for(;r<=s;r++){const t=o[r];l+=t*t}return l}for(let t=0;t<l;t++){const e=c(t),a=o[t]*Math.pow(n+r*e,-s);u[t]=a}return zo(u,t.shape)}LRNGrad(t,e,n,r,s,a,i){Ng(t,"LRNGrad");const o=t.shape[3],l=this.readSync(t.dataId),u=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),d=t.size;for(let t=0;t<d;t++){const e=t%o,n=t-e+Math.max(0,e-r),d=t-e+Math.min(o,e+r+1);let p=0;for(let t=n;t<d;t++)p+=Math.pow(u[t],2);p=a*p+s;for(let e=n;e<d;e++){let n=-2*a*i*u[e]*c[t]/p;t===e&&(n+=Math.pow(p,-i)),n*=l[t],h[e]+=n}}return zo(h,t.shape)}multinomial(t,e,n,r){Ng(t,"multinomial");const s=e?t:_o(t),a=s.shape[0],i=s.shape[1],o=ir([a,n],"int32"),l=this.readSync(o.dataId),u=this.readSync(s.dataId);for(let t=0;t<a;++t){const e=t*i,s=new Float32Array(i-1);s[0]=u[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+u[e+t];const a=ao.alea(r.toString()),o=t*n;for(let t=0;t<n;++t){const e=a();l[o+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){l[o+t]=n;break}}}return o}oneHot(t,e,n,r){Ng(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const a=this.readSync(t.dataId);for(let r=0;r<t.size;++r)a[r]>=0&&a[r]<e&&(s[r*e+a[r]]=n);return Bo(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){Ng(t,"nonMaxSuppression");const a=this.readSync(t.dataId),i=this.readSync(e.dataId);return Tg(a,i,n,r,s)}fft(t){return this.fftBatch(t,!1)}ifft(t){return this.fftBatch(t,!0)}fftBatch(t,e){const n=t.shape[0],r=t.shape[1],s=Ga(t.shape,"float32"),a=Ga(t.shape,"float32"),i=mi(t).as2D(n,r),o=fi(t).as2D(n,r);for(let t=0;t<n;t++){const n=i.slice([t,0],[1,r]),l=o.slice([t,0],[1,r]),u=ar(n,l),c=this.readSync(this.fftImpl(u,e).dataId);for(let e=0;e<r;e++){const n=Bu(c,e);s.values[t*r+e]=n.real,a.values[t*r+e]=n.imag}}return ar(s.toTensor(),a.toTensor()).as2D(n,r)}fftImpl(t,e){const n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){let s=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(s=ar(mi(s).div(Gt(r)),fi(s).div(Gt(r)))),s}{const n=this.readSync(t.dataId),s=Mu(this.fourierTransformByMatmul(n,r,e));return ar(s.real,s.imag).as2D(t.shape[0],t.shape[1])}}isExponentOf2(t){return 0==(t&t-1)}fftRadix2(t,e,n){if(1===e)return t;const r=this.readSync(t.dataId),s=e/2,a=Ou(r);let i=ar(a.real,a.imag).as1D();const o=Lu(r);let l=ar(o.real,o.imag).as1D();i=this.fftRadix2(i,s,n),l=this.fftRadix2(l,s,n);const u=Pu(e,n),c=ar(u.real,u.imag).mul(l),h=i.add(c),d=i.sub(c),p=mi(h).concat(mi(d)),f=fi(h).concat(fi(d));return ar(p,f).as1D()}fourierTransformByMatmul(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let a=0,i=0;for(let r=0;r<e;r++){const o=Wu(s*r,e,n),l=Bu(t,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=e,i/=e),zu(r,a,i,s)}return r}depthToSpace(t,e,n){C("NHWC"===n,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n),C(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],s=t.shape[1],a=t.shape[2],i=t.shape[3],o=s*e,l=a*e,u=i/(e*e),c=this.readSync(t.dataId),h=new Float32Array(r*o*l*u);let d=0;for(let t=0;t<r;++t)for(let n=0;n<o;++n){const r=Math.floor(n/e),o=n%e;for(let n=0;n<l;++n){const l=Math.floor(n/e),p=(o*e+n%e)*u;for(let e=0;e<u;++e){const n=e+p+i*(l+a*(r+s*t));h[d++]=c[n]}}}return zo(h,[r,o,l,u])}broadcastedBinaryOp(t,e,n,r){const s=Zt(t.shape,e.shape),a=Ga(s,n),i=this.readSync(t.dataId),o=this.readSync(e.dataId),l=Yt(t.shape,s),u=Yt(e.shape,s),c=a.values;if(l.length+u.length===0)for(let t=0;t<c.length;++t)c[t]=r(i[t%i.length],o[t%o.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const d=a.indexToLoc(h),p=d.slice(-t.rank);l.forEach(t=>p[t]=0);const f=n.locToIndex(p),m=d.slice(-e.rank);u.forEach(t=>m[t]=0);const g=s.locToIndex(m);c[h]=r(i[f],o[g])}}return a.toTensor()}broadcastedBinaryComplexOp(t,e,n){const r=Zt(t.shape,e.shape),s=Ga(r,"float32"),a=Ga(r,"float32"),i=this.readSync(t.dataId),o=this.readSync(e.dataId),l=Yt(t.shape,r),u=Yt(e.shape,r),c=s.values,h=a.values;if(l.length+u.length===0)for(let t=0;t<c.length;t++){const e=t%i.length,r=t%o.length,s=n(i[2*e],i[2*e+1],o[2*r],o[2*r+1]);c[t]=s.real,h[t]=s.imag}else{const r=this.bufferSync(this.data.get(t.dataId).complexTensors.real),a=this.bufferSync(this.data.get(e.dataId).complexTensors.real);for(let d=0;d<c.length;d++){const p=s.indexToLoc(d),f=p.slice(-t.rank);l.forEach(t=>f[t]=0);const m=r.locToIndex(f),g=p.slice(-e.rank);u.forEach(t=>g[t]=0);const b=a.locToIndex(g),y=n(i[2*m],i[2*m+1],o[2*b],o[2*b+1]);c[d]=y.real,h[d]=y.imag}}return this.complex(s.toTensor(),a.toTensor())}split(t,e,n){return _g(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,a){const[i,o,l,u]=t.shape,c=e.shape[0],[h,d]=r,p=Ga([c,h,d,u],"float32"),f=this.readSync(e.dataId),m=this.readSync(n.dataId),g=this.readSync(t.dataId),b=t.strides,y=p.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],r=f[e+1],c=f[e+2],x=f[e+3],w=m[t];if(w>=i)continue;const v=h>1?(c-n)*(o-1)/(h-1):0,k=d>1?(x-r)*(l-1)/(d-1):0;for(let e=0;e<h;e++){const i=h>1?n*(o-1)+e*v:.5*(n+c)*(o-1);if(i<0||i>o-1)for(let n=0;n<d;n++)for(let r=0;r<u;r++){const s=r+n*y[2]+e*y[1]+t*y[0];p.values[s]=a}else if("bilinear"===s){const n=Math.floor(i),s=Math.ceil(i),o=i-n;for(let i=0;i<d;i++){const c=d>1?r*(l-1)+i*k:.5*(r+x)*(l-1);if(c<0||c>l-1){for(let n=0;n<u;n++){const r=n+i*y[2]+e*y[1]+t*y[0];p.values[r]=a}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let r=0;r<u;r++){let a=r+h*b[2]+n*b[1]+w*b[0];const l=g[a];a=r+f*b[2]+n*b[1]+w*b[0];const u=g[a];a=r+h*b[2]+s*b[1]+w*b[0];const c=g[a];a=r+f*b[2]+s*b[1]+w*b[0];const d=l+(u-l)*m,x=c+(g[a]-c)*m;a=r+i*y[2]+e*y[1]+t*y[0],p.values[a]=d+(x-d)*o}}}else for(let n=0;n<d;++n){const s=d>1?r*(l-1)+n*k:.5*(r+x)*(l-1);if(s<0||s>l-1){for(let r=0;r<u;r++){const s=r+n*y[2]+e*y[1]+t*y[0];p.values[s]=a}continue}const o=Math.round(s),c=Math.round(i);for(let r=0;r<u;r++){const s=r+o*b[2]+c*b[1]+w*b[0],a=r+n*y[2]+e*y[1]+t*y[0];p.values[a]=g[s]}}}}return p.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,sliceSize:i,strides:o,outputSize:l}=ca(0,t,n);return this.scatter(t,e,n,l,i,a,s,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=oa(t,e);if(0===a)return ts([],s,t.dtype);const l=new ut([a,i],t.dtype),u=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<a;e++){const n=[];let s=0;for(let t=0;t<r;t++){const a=u[e*r+t];s+=a*o[t],n.push(a)}if(s<0||s>=t.size/i)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<i;t++)l.values[e*i+t]=c[s*i+t]}return l.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=ca(0,t,n),l=Gt(0);return this.scatter(t,e,n,o,a,s,r,i,l,!0)}fill(t,e,n){const r=B(n=n||V(e),N(t));return r.fill(e),ma().makeTensor(r,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=B(t.dtype,N(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return Gu(t,e,n)}scatter(t,e,n,r,s,a,i,o,l,u){const c=[r/s,s],h=this.readSync(t.dataId),d=this.readSync(e.dataId);if(0===r)return ts([],n,e.dtype);const p=new ut(c,e.dtype);p.values.fill(this.readSync(l.dataId)[0]);for(let t=0;t<a;t++){const a=[];let l=0;for(let e=0;e<i;e++){const n=h[t*i+e];a.push(n),l+=n*o[e]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[t*s+n]:p.values[l*s+n]=0===e.rank?d[0]:d[t*s+n]}return p.toTensor().reshape(n)}}const Bg={kernelName:"Dilation2D",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:a,pad:i,dilations:o}=n,l=e,u=K(r.shape,l.data.get(r.dataId).values),c=K(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:d,inWidth:p,inChannels:f,outHeight:m,outWidth:g,padInfo:b,strideHeight:y,strideWidth:x,filterHeight:w,filterWidth:v,dilationHeight:k,dilationWidth:I,outShape:C}=we(r.shape,s.shape,a,i,"NHWC",o),S=J(C,r.dtype);for(let t=0;t<h;++t)for(let e=0;e<m;++e){const n=e*y-b.top;for(let r=0;r<g;++r){const s=r*x-b.left;for(let a=0;a<f;++a){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<w;++e){const r=n+e*k;if(r>=0&&r<d)for(let n=0;n<v;++n){const o=s+n*I;if(o>=0&&o<p){const s=u[t][r][o][a]+c[e][n][a];s>i&&(i=s)}}}S[t][e][r][a]=i}}}return{dataId:l.write(j(S,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},zg={kernelName:"Dilation2DBackpropFilter",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=K(r.shape,u.data.get(r.dataId).values),h=K(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:E}=we(r.shape,s.shape,i,o,"NHWC",l);C(a.rank===E.length,()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${E.length}, but got `+a.rank);const A=K(E,u.data.get(a.dataId).values),N=J(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<g;++e){const n=e*x-y.top;for(let r=0;r<b;++r){const s=r*w-y.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<v;++e){const r=n+e*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*S;if(u>=0&&u<f){const s=c[t][r][u][a]+h[e][n][a];s>i&&(i=s,o=e,l=n)}}}N[o][l][a]+=A[t][e][r][a]}}}return{dataId:u.write(j(N,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Pg={kernelName:"Dilation2DBackpropInput",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=K(r.shape,u.data.get(r.dataId).values),h=K(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:E}=we(r.shape,s.shape,i,o,"NHWC",l);C(a.rank===E.length,()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${E.length}, but got `+a.rank);const A=K(E,u.data.get(a.dataId).values),N=J(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<g;++e){const n=e*x-y.top;for(let r=0;r<b;++r){const s=r*w-y.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let e=0;e<v;++e){const r=n+e*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*S;if(u>=0&&u<f){const s=c[t][r][u][a]+h[e][n][a];s>i&&(i=s,o=r,l=u)}}}N[t][o][l][a]+=A[t][e][r][a]}}}return{dataId:u.write(j(N,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Wg(t,e){return{kernelName:t,backendName:"cpu",kernelFunc:({inputs:n,backend:r})=>{const{a:s,b:a}=n,i=r;Ng([s,a],t);const o=i.data.get(s.dataId).values,l=i.data.get(a.dataId).values,[u,c]=e(s.shape,a.shape,o,l,s.dtype);return{dataId:i.write(u,c,s.dtype),shape:c,dtype:s.dtype}}}}function Ug(t){return(e,n,r,s,a)=>{const i=Zt(e,n),o=i.length,l=q(i),u=L(a,N(i)),c=e.length,h=n.length,d=q(e),p=q(n),f=Yt(e,i),m=Yt(n,i);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<u.length;++e){const n=nt(e,o,l),a=n.slice(-c);f.forEach(t=>a[t]=0);const i=et(a,c,d),g=n.slice(-h);m.forEach(t=>g[t]=0);const b=et(g,h,p);u[e]=t(r[i],s[b])}return[u,i]}}const Vg=Wg("Div",Ug((t,e)=>t/e));const Gg=Ol,Hg=Ll,qg=[Bg,Pg,zg,Vg,{kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,l=n;Ng(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=ve(r.shape,s,a,[1,1],i),[h,d]=function(t,e,n,r,s){const a=Rg(t,0,n,q(e),s,"max"),i=$g(t,e,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},{kernelName:$t,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n;let o=r.shape;const l=o.length,u=M(s,o);let c=u;const h=pe(c,l);let d=i.data.get(r.dataId).values;if(null!=h){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=o[h[e]];d=Eg(d,o,r.dtype,h,t),c=me(c.length,l),o=t}Ng(r,"max"),de("max",c,l);const[p,f]=ce(o,c),m=Sg(d,N(f),p,r.dtype),g=i.write(m,p,r.dtype);let b=p;if(a){b=he(p,u)}return{dataId:g,shape:b,dtype:r.dtype}}},{kernelName:"NonMaxSuppressionV4",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e;Ng(r,"NonMaxSuppressionPadded");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=Gg(c,h,a,i,o,l);return[d,p]}},{kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=n,u=e;Ng(r,"NonMaxSuppressionWithScore");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,d=a,p=i,f=o,m=l,{selectedIndices:g,selectedScores:b}=Hg(c,h,d,p,f,m);return[g,b]}},{kernelName:"RotateWithOffset",backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,l=L(r.dtype,N(r.shape)),[u,c,h,d]=r.shape,[p,f]=Au(i,c,h),m=Math.sin(s),g=Math.cos(s),b=o.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[u,t,r,i],y=o[2],x=o[1];let w=(y-p)*g-(x-f)*m,v=(y-p)*m+(x-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=a;if("number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c){k=b[e+v*(h*d)+w*d+i]}l[e+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:"Square",backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Ng(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];a[t]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Wg("SquaredDifference",Ug((t,e)=>{const n=t-e;return n*n})),{kernelName:"Transpose",backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n;Ng(r,"transpose");const i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];const l=Eg(a.data.get(r.dataId).values,r.shape,r.dtype,s,o);return{dataId:a.write(l,o,r.dtype),shape:o,dtype:r.dtype}}}];for(const t of qg)y(t);wa("cpu",()=>new Lg,1);const jg={},Kg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Xg(t){t in jg||(jg[t]=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete jg[t]},!1),1===t)return e.getContext("webgl",Kg)||e.getContext("experimental-webgl",Kg);return e.getContext("webgl2",Kg)}(t));const e=jg[t];return e.isContextLost()?(delete jg[t],Xg(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),jg[t])}var Yg,Jg,Zg;function Qg(t,e){return[e,t]}function tb(t){const e=N(t);return _(Math.ceil(e/4))}function eb(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function nb(t,e){const n=t;let r,s,a,i,o,u,c,h,d,p;return 2===l().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,s=t.RGBA,a=t.RGBA,i=n.RGBA,o=t.RGBA,c=4,h=4,d=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}function rb(t,e){const n=e();return l().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Yg||(Yg={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(Jg||(Jg={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Zg||(Zg={}));function sb(t){return!!(l().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function ab(t,e){return fb(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function ib(t,e){const n=fb(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(rb(t,()=>t.shaderSource(n,e)),rb(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=ob.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],s=t.split("\n"),a=s.length.toString().length+2,i=s.map((t,e)=>D((e+1).toString(),a)+t);let o=0;for(let t=0;t<i.length;t++)o=Math.max(i[t].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+D(u[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const ob=/ERROR: [0-9]+:([0-9]+):/g;function lb(t,e){if(rb(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function ub(t,e,n,r,s,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(rb(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),rb(t,()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,a,i)),rb(t,()=>t.enableVertexAttribArray(o)),!0)}function cb(t,e,n){!function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(t,n),rb(t,()=>t.activeTexture(t.TEXTURE0+n)),rb(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function hb(t,e,n){rb(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),rb(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function db(t,e){rb(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),rb(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function pb(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function fb(t,e,n){const r=rb(t,()=>e());if(null==r)throw new Error(n);return r}function mb(t,e=2){return N(t.slice(0,t.length-e))}function gb(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function bb(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[mb(t),...gb(t)]),e}function yb(t){return t%2==0}function xb(t,e){if(R(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(yb(n)&&yb(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&yb(t[0])&&yb(e[0])}let wb,vb;function kb(t,e){return null!=t.getExtension(e)}function Ib(t){try{if(null!=Xg(t))return!0}catch(t){return!1}return!1}function Cb(t){if(0===t)return!1;const e=Xg(t);if(1!==t){if(kb(e,"EXT_color_buffer_float"))return Sb(e);const t="EXT_color_buffer_half_float";if(kb(e,t)){const n=e.getExtension(t);return function(t,e){const n=nb(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),a}(e,n)}return!1}if(!kb(e,"OES_texture_float"))return!1;if(!kb(e,"WEBGL_color_buffer_float"))return!1;return Sb(e)}function Sb(t){const e=nb(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}const Eb=l();Eb.registerFlag("HAS_WEBGL",()=>Eb.getNumber("WEBGL_VERSION")>0),Eb.registerFlag("WEBGL_VERSION",()=>Ib(2)?2:Ib(1)?1:0),Eb.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Eb.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Eb.get("WEBGL_VERSION")),Eb.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Eb.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Eb.registerFlag("WEBGL_PACK",()=>Eb.getBool("HAS_WEBGL")),Eb.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_PACK_CLIP",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Eb.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_PACK_REDUCE",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_LAZILY_UNPACK",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_CONV_IM2COL",()=>Eb.getBool("WEBGL_PACK")),Eb.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==wb){const e=Xg(t);wb=e.getParameter(e.MAX_TEXTURE_SIZE)}return wb}(Eb.getNumber("WEBGL_VERSION"))),Eb.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==vb){const e=Xg(t);vb=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,vb)}(Eb.getNumber("WEBGL_VERSION"))),Eb.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Eb.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Xg(t);return e=kb(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:kb(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),Eb.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Eb.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!At()),Eb.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=Xg(t);if(1===t){if(!kb(e,"OES_texture_float"))return!1}else if(!kb(e,"EXT_color_buffer_float"))return!1;return Sb(e)}(Eb.getNumber("WEBGL_VERSION"))),Eb.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Eb.getBool("WEBGL_FORCE_F16_TEXTURES")&&Eb.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Eb.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Cb(Eb.getNumber("WEBGL_VERSION"))),Eb.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=Eb.getNumber("WEBGL_VERSION"))&&null!=Xg(t).fenceSync;var t}),Eb.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Eb.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Eb.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});class Ab{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Nb{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class Rb{constructor(t,e,n){this.variableNames=["A"];const r=t.windowSize,s=t.batchSize,a=t.inSize,i=Math.ceil(a/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const o="max"===e?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${l};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function $b(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function Tb(t,e){return 1===e?[t]:$b(t,e)}function _b(){let t,e,n,r,s,a,i,o,u,c;return 2===l().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function Db(t,e,n="index"){const r=q(e);return r.map((e,s)=>`${`int ${t[s]} = ${n} / ${e}`}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`).join("")}function Fb(t){const e=q(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const Mb="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Ob}=Hu;function Lb(t,e,n,r){const s=[];t.forEach(t=>{const e=N(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))});const a=s.join("\n"),i=t.map(t=>function(t,e,n=!1){let r="";r+=n?zb(t):Bb(t);const s=t.shapeInfo.logicalShape,a=e.logicalShape;s.length<=a.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=Ob(t.shapeInfo.logicalShape,e.logicalShape),l=jb(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map(t=>`coords.${h[t+u]} = 0;`).join("\n");let d="";d=i<2&&a>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+h[e+u]).join(", ");let p="return outputValue;";const f=1===N(t.shapeInfo.logicalShape),m=1===N(e.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=a-2,e=a-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&R(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=jb(l),c=Ob(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map(t=>`coords.${p[t+h]} = 0;`).join("\n");let f="";f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+p[e+h]).join(", ");return`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e));return r}(t,e,r)).join("\n"),o=e.texShape,l=_b(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Pb}\n    ${Wb}\n    ${Ub}\n  `}(l);e.isPacked?(c=function(t,e){switch(t.length){case 0:return Gb();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(R(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let a=s,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return Gb();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(R(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=Db(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=Db(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=Db(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=Db(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=Vb);return[d,u,h,a,c,i,n].join("\n")}function Bb(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape,o=Hb(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${qb(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Hb(e);if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&R(e,s)){const t=s[0],e=s[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${e}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=O(e),o=a;if(o.length<e.length){const e=Kb(t,o),n=["row","col"];return`\n      ${Bb(e)}\n      float ${r}(int row, int col) {\n        return ${r}(${Xb(n,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${qb(t)}\n      }\n    `;const l=s[0],u=s[1],c=Hb(n);if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:o}=O(e),l=i;if(l.length<e.length){const e=Kb(t,l),n=["row","col","depth"];return`\n        ${Bb(e)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Xb(n,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${qb(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],d=t.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const p=Hb(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${p};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:o,keptDims:l}=O(e);if(o.length<e.length){const e=Kb(t,o),n=["row","col","depth","depth2"];return`\n      ${Bb(e)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Xb(n,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${qb(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],d=c[1];if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const p=Hb(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${p});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],a=e[3]*s,i=e[2]*a,o=e[1]*i,{newShape:l,keptDims:u}=O(e);if(l.length<e.length){const e=Kb(t,l),n=["row","col","depth","depth2","depth3"];return`\n      ${Bb(e)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Xb(n,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${qb(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Hb(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=O(e);if(s.length<e.length){const e=Kb(t,s),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Bb(e)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Xb(n,a)});\n      }\n    `}const i=e[5],o=e[4]*i,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${qb(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Hb(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function zb(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=_b();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=_b();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=s[0],i=s[1],o=_b();if(null!=s&&R(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=e.slice(1),s=[1,2],a=Kb(t,n),i=["b","row","col"];return`\n        ${zb(a)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Xb(i,s)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(e[2]/2),u=l*Math.ceil(e[1]/2),c=_b();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u}, ${l}, b, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],d=`b${t} * ${c} + `+d;const p=_b();return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(t)}}const Pb="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Wb="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ub="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Vb="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Gb(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Hb(t){return"offset"+t}function qb(t){const e=t.name,n=N(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function jb(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Kb(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Xb(t,e){return e.map(e=>t[e]).join(", ")}class Yb{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,C(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=jb(o),u=Tb("coords",o);let c,h;if(1===a){h=o+1;const t=jb(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(t=>"int "+t),m=Tb("sourceLocR",h-1).concat("inIdx.r"),g=Tb("sourceLocG",h-1).concat("inIdx.g"),b=Tb("sourceLocB",h-1).concat("inIdx.b"),y=Tb("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class Jb{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Zb{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qb{constructor(t,e,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Zt(t,e),Zt(t,n);let i="0.0";null!=r&&(Zt(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Zt(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class ty{constructor(t,e,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Zt(t,e),Zt(t,n);let i="vec4(0.0)";null!=r&&(Zt(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Zt(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ey="return areal * breal - aimag * bimag;",ny="return areal * bimag + aimag * breal;";class ry{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Zt(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const sy="return a + b;",ay="return a - b;",iy="return a * b;",oy="return (a < 0.) ? b * a : a;";class ly{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Zt(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const uy="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class cy{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Zt(e,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===N(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${jb(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=Tb("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}class hy{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class dy{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class py{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class fy{constructor(t){this.outputShape=[],this.outputShape=Qr(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class my{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Qr(t,e);const n=this.outputShape,r=n.length,s=jb(r),a=Tb("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=i[e],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${gy(i,l,e)}),\n            vec2(${gy(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${gy(i,l,p)}),\n          vec2(${gy(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function gy(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}class by{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yy{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xy{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wy{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vy{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ky{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Iy{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,b=f?3:1;let y="",x="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class Cy{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Sy{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${g}\n        setOutput(result);\n      }\n    `}}class Ey{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=p;let m="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<p;e++)m+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<f;e++){const n=2*e;if(m+=`\n          xR = xRCorner + ${t*c};\n          xC = xCCorner + ${n*h};\n        `,1===u){if(n<p&&(m+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<p)){const e=o%2==0?I(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(m+=`\n                  xCOffset = xC + ${o%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(m+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),m+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):m+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<p&&(m+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,o%2==1?(m+=`\n                xCOffset = xC + 1 - ${u};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<p&&(m+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${u};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(m+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${u};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<p&&(m+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),m+="}");n<p&&(m+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<p&&(m+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<p;e++)m+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let g="",b="";n&&(g=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${m}\n\n        vec4 result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Ay{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[y,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class Ny{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${Ry(r,"coords")})`,a=t[t.length-1];let i="",o="";e?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+a:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${jb(r)} coords = getOutputCoords();\n        int end = ${$y(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${$y(r,"coords")} = idx;\n          val += getX(${Ry(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function Ry(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function $y(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class Ty{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Yg.DENSE;const e=tb(t),n=_b();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Db(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class _y{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Yg.DENSE;const e=tb(t),n=_b();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Db(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Dy{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class Fy{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class My{constructor(t){this.variableNames=["A"],this.outTexUsage=Jg.DOWNLOAD;const e=_b();this.outputShape=t,this.userCode=`\n      ${Mb}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class Oy{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Jg.DOWNLOAD;const e=_b();this.outputShape=t,this.userCode=`\n      ${Mb}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class Ly{constructor(t,e,n=!1){this.variableNames=["A"];const r=_b(),[s,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Fb(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class By{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=_b(),[s,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Fb(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}const zy="return real * expR - imag * expI;",Py="return real * expI + imag * expR;";class Wy{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?r+".0":"1.0";this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}class Uy{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class Vy{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=jb(this.rank),a=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(""+r[n]);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class Gy{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=jb(e.length),s=jb(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function Hy(t){const e=_b();return function(t,e){const n=fb(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(rb(t,()=>t.shaderSource(n,e)),rb(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function qy(t){return function(t,e){const n=fb(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return rb(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),rb(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function jy(t){return function(t,e){const n=fb(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return rb(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),rb(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}function Ky(t,e,n,r,s,a){!function(t,e){const n=l().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){throw new Error("Requested texture size "+`[${t}x${e}]`+" is invalid.")}if(t>n||e>n){throw new Error("Requested texture size "+`[${t}x${e}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}(e,n);const i=function(t){return fb(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return rb(t,()=>t.bindTexture(o,i)),rb(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),rb(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),rb(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),rb(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),rb(t,()=>t.texImage2D(o,0,r,e,n,0,s,a,null)),rb(t,()=>t.bindTexture(t.TEXTURE_2D,null)),i}function Xy(t){return t.internalFormatFloat}function Yy(t){return t.internalFormatHalfFloat}function Jy(t){return t.downloadTextureFormat}function Zy(t){return t.internalFormatPackedFloat}function Qy(t){return t.internalFormatPackedHalfFloat}function tx(t,e,n,r,s,a,i,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=eb(t,e);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class ex{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=l().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){jg[t]=e}(e,t)):this.gl=Xg(e);let n="WEBGL_color_buffer_float";if(1===l().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=ab(this.gl,t),kb(this.gl,e))this.textureHalfFloatExtension=ab(this.gl,e);else if(l().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),kb(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=ab(this.gl,"EXT_color_buffer_half_float");else if(l().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",kb(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!kb(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=qy(this.gl),this.indexBuffer=jy(this.gl),this.framebuffer=function(t){return fb(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=nb(this.gl,this.textureHalfFloatExtension)}get debug(){return l().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;rb(t,()=>t.finish()),rb(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),rb(t,()=>t.deleteFramebuffer(this.framebuffer)),rb(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),rb(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),rb(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=Qg(e,n);return Ky(t,s,a,Xy(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=Qg(e,n);return Ky(t,s,a,Yy(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=Qg(e,n);return Ky(t,s,a,Jy(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){rb(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?rb(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):rb(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),rb(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,a){let i,o,l;rb(t,()=>t.bindTexture(t.TEXTURE_2D,e)),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,l=a.internalFormatPackedFloat),i.set(s),rb(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,i)),rb(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=eb(e,n);return Ky(t,s,a,Qy(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=eb(e,n);return Ky(t,s,a,Zy(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(db(this.gl,this.framebuffer),this.outputTexture=null),rb(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[s,a]=Qg(e,n),i=new Uint8Array(e*n*4);return rb(t,()=>t.readPixels(0,0,s,a,r.downloadTextureFormat,t.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return tx(this.gl,t,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();rb(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s));const a=16*e*n;return rb(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ)),rb(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),rb(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(l().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return rb(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=ib(e,t),r=Hy(e),s=function(t){return fb(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return rb(e,()=>e.attachShader(s,r)),rb(e,()=>e.attachShader(s,n)),function(t,e){if(rb(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&lb(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return rb(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ub(t,e,"clipSpacePos",n,3,20,0)&&ub(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&rb(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&lb(this.gl,this.program),rb(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return fb(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),rb(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(t,e,n,r){rb(t,()=>cb(t,e,r)),rb(t,()=>t.uniform1i(n,r))}(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=eb(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&lb(this.gl,this.program),pb(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),rb(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),rb(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=ab(this.gl,2===l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await F(()=>this.disposed||this.isQueryAvailable(t,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||F(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),hb(this.gl,t,this.framebuffer),this.debug&&pb(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(hb(this.gl,this.outputTexture,this.framebuffer),this.debug&&pb(this.gl)):db(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;hb(r,t,this.framebuffer),this.debug&&pb(r),this.outputTexture=t,rb(r,()=>r.viewport(0,0,e,n)),rb(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),rb(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function nx(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,s=e[n],a=s.shape;if(!R(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&s.isUniform)return;const i=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!R(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}class rx{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=_b(),g="channelsLast"===h,b=g?0:1,y=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class sx{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class ax{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class ix{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class ox{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,o=a-1-t.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lx{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ux{constructor(t,e,n=!1,r=!1,s=!1,a=null,i=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const o=n?t[1]:t[2],l=Math.ceil(o/2),u=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let p="",f="";a&&(p=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,f="result = activation(result);");const m=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${p}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          vec4 a = getMatrixA(rc.x, ${u});\n          vec4 b = getMatrixB(rc.x, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${d[0]});\n          result += (${h[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${m}\n\n        ${f}\n\n        setOutput(result);\n      }\n    `}}class cx{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class hx{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class dx{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Tb("rc",e),r=jb(e),s=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)a=e[e.length-1-n]+","+a;n.push(a)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class px{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=jb(r),a=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class fx{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=jb(r),a=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=Tb("rc",r),l=Tb("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[s+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class mx{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class gx{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class bx{constructor(t,e){this.variableNames=["x"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=Math.ceil(s/n);this.outputShape=[r,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}class yx{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Db(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Fb(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class xx{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class wx{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?a-1:a,r&&n>1?i-1:i],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class vx{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?a-1:a,r&&n>1?i-1:i],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class kx{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Ix{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?a-1:a,r&&n>1?i-1:i],u=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Cx{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=jb(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Sx{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=Tb("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=jb(n);function o(n){const r=t.map((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Ex{constructor(t,e,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=jb(s.length),l=jb(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Ax{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Nx{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<e.length;r++)i.push(""+n[r]),r<t&&a.push(""+n[r]);r=a.join(),s=i.join()}const a=jb(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class Rx{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=jb(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return $x.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${$x[e]} = start[${e}] + coords.${$x[e]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const $x=["x","y","z","w","u","v"];class Tx{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=jb(this.rank),n=Tb("coords",this.rank),r=Tb("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class _x{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=jb(n.length),a=jb(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class Dx{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Mx(e,n),s=Ox(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=Fx(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let i;return r===Zg.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Zg.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Zg.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Zg.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Zg.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=Mx(n,r),a=Ox(e,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Fx(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=l().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],c=u.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Fx(t,e,n,r,s){const a=function(t,e){switch(t){case Zg.PACKED_2X2_FLOAT32:return Zy(e);case Zg.PACKED_2X2_FLOAT16:return Qy(e);case Zg.UNPACKED_FLOAT32:return Xy(e);case Zg.UNPACKED_FLOAT16:return Yy(e);case Zg.PACKED_4X1_UNSIGNED_BYTE:return Jy(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let i;if(s){const[e,n]=eb(t[0],t[1]);i=e*n}else{const[e,n]=Qg(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,a)}function Mx(t,e){if(t===Jg.UPLOAD)return Zg.PACKED_2X2_FLOAT32;if(t===Jg.RENDER||null==t)return function(t){return l().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Zg.PACKED_2X2_FLOAT32:Zg.UNPACKED_FLOAT32:t?Zg.PACKED_2X2_FLOAT16:Zg.UNPACKED_FLOAT16}(e);if(t===Jg.DOWNLOAD||t===Jg.PIXELS)return Zg.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function Ox(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class Lx{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=jb(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class Bx{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const zx="if (isnan(x)) return x;",Px="return abs(x);",Wx=zx+"\n  return (x < 0.0) ? 0.0 : x;\n",Ux=zx+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Vx="return (x >= 0.0) ? x : (exp(x) - 1.0);",Gx=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = ${Ar};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;const Hx="return -x;",qx="return ceil(x);",jx="return floor(x);",Kx="return exp(x);",Xx="return exp(x) - 1.0;",Yx="return x;",Jx="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Zx="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Qx="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class tw{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class ew{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Tb("rc",e),r=jb(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const{segment_util:nw}=Hu,rw=qu,sw=ju,aw=Ku,iw=Go,ow={};function lw(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?Jx:Wx;if("elu"===t)return e?Qx:Vx;if("relu6"===t)return e?Zx:Ux;if("prelu"===t)return e?uy:oy;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class uw extends Yu{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!l().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Xg(l().getNumber("WEBGL_VERSION"));this.binaryCache=((e=l().getNumber("WEBGL_VERSION"))in ow||(ow[e]={}),ow[e]),this.gpgpu=new ex(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new Dx(this.gpgpu),this.numMBBeforeWarning=null==l().global.screen?1024:l().global.screen.height*l().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Xu(this,ma())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((l().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||l().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:Jg.UPLOAD}),r}move(t,e,n,r){if(l().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:Jg.UPLOAD})}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensors:s,slice:a,shape:i,isPacked:o}=e;if(null!=a){let e;e=o?new tw(i,Yx):new Bx(i,Yx);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=Z()),"complex64"===r){c=Fu(s.real.dataSync(),s.imag.dataSync())}else c=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=Z()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:a,complexTensors:i,isPacked:o}=e;if(null!=s){let e;e=o?new tw(r,Yx):new Bx(r,Yx);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!l().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===l().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==a&&l().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(e.texture,...tb(r))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([i.real.data(),i.imag.data()]);c=Fu(t[0],t[1])}else if(null==h)c=this.getValuesFromTexture(t);else{const t=N(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}null!=u&&this.disposeData(u.dataId);const d=this.convertAndCacheOnCPU(t,c),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(t=>t(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),d}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!sb(n)){if(l().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=N(e);if(l().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...tb(e)).subarray(0,s);return this.disposeData(n.dataId),a}const a=l().getBool("WEBGL_PACK")&&!0===r,i=a?bb(e):e,o=a?new Oy(i):new My(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeData(u.dataId),h}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=A(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),a=A(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);i.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),i.getExtraProfileInfo=()=>t.map((t,e)=>({name:a[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Z(),endMs:null}}endTimer(t){return l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Z(),t)}async getQueryTime(t){if(l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return l().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=ma().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||l().getBool("IS_TEST")||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&N(t.shape)<e)}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:ma().keep(t.clone()),imag:ma().keep(e.clone())},n}real(t){return this.texData.get(t.dataId).complexTensors.real.clone()}imag(t){return this.texData.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===N(n))return ts([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=Vr(t.shape,e,n);if(r||!s){const r=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tx(n):new Rx(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),a=this.texData.get(s.dataId);Object.assign(a,r),a.shape=n,a.dtype=t.dtype;let i=Gr(e,t.strides);r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,o+1),s}stridedSlice(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);const s=Lr(e,n,r);if(s.some(t=>0===t))return ts([],s);const a=new _x(e,r,s);return this.compileAndRun(a,[t])}reverse(t,e){const n=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sx(t.shape,e):new Cx(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>mi(t)),r=t.map(t=>fi(t));return ar(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>l().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),r=this.concat(t.slice(0,n),e),s=this.concat(t.slice(n),e);return this.concat([r,s],e)}if(l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new my(t.map(t=>t.shape),e);return this.compileAndRun(n,t)}const n=Qr(t.map(t=>t.shape),e),r=t.map(t=>t.as2D(-1,N(t.shape.slice(e)))),s=new fy(r.map(t=>t.shape));return this.compileAndRun(s,r).reshape(n)}neg(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Hx,t.dtype);const e=new Bx(t.shape,Hx);return this.compileAndRun(e,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],[o,,]=t.shape;if((1===s||1===a)&&i>1e3){n&&(t=hn(t,[0,2,1])),r&&(e=hn(e,[0,2,1]));const s=1===a?t:t.as3D(o,i,1),l=1===a?2:1,u=1===a?e.as3D(o,1,i):e;return this.multiply(s,u).sum(l,!0)}const l=wt(t.dtype,e.dtype),u=new ux(t.shape,[o,s,a],n,r);return this.compileAndRun(u,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){const o=n?t.shape[2]:t.shape[1],l=r?e.shape[1]:e.shape[2],[u,,]=t.shape,c=wt(t.dtype,e.dtype),h=null!=s,d=null!=i,p=a?lw(a,!0):null,f=new ux(t.shape,[u,o,l],n,r,h,p,d),m=[t,e];return s&&m.push(s),i&&m.push(i),this.compileAndRun(f,m,c)}multiply(t,e){if("complex64"===t.dtype){const n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),s=new ry(ey,t.shape,e.shape),a=new ry(ny,t.shape,e.shape),i=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag),this.makeComplexComponentTensorInfo(e,r.complexTensors.real),this.makeComplexComponentTensorInfo(e,r.complexTensors.imag)],o=this.compileAndRun(s,i),l=this.compileAndRun(a,i),u=this.complex(o,l);return o.dispose(),l.dispose(),u}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,iy,t.dtype);const n=new ly(iy,t.shape,e.shape);return this.compileAndRun(n,[t,e],t.dtype)}batchNorm(t,e,n,r,s,a){const i=[t,e,n];let o=null;null!=r&&(o=r.shape,i.push(r));let u=null;if(null!=s&&(u=s.shape,i.push(s)),l().getBool("WEBGL_PACK_NORMALIZATION")){const r=new ty(t.shape,e.shape,n.shape,o,u,a);return this.compileAndRun(r,i)}const c=new Qb(t.shape,e.shape,n.shape,o,u,a);return this.compileAndRun(c,i)}localResponseNormalization4D(t,e,n,r,s){const a=l().getBool("WEBGL_PACK_NORMALIZATION")?new ix(t.shape,e,n,r,s):new sx(t.shape,e,n,r,s);return this.compileAndRun(a,[t])}LRNGrad(t,e,n,r,s,a,i){const o=new ax(e.shape,r,s,a,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map(t=>tt(t)),r=Ga(t.shape,t.dtype,n);return sw(r,e)}const n=new Lx(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fx(t.shape,e,n):new px(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);const r=new Vy(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){C(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),s=Nu(t.shape,e,r),a=Ru(s.length,e.length),i=$u(t.shape,e,r),o=Tu(n,e.length),l=_u(i,n,e.length);return hn(t.reshape(s),a).reshape(i).slice(o,l)}spaceToBatchND(t,e,n){C(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const a=t.pad(s),i=Nu(a.shape,e,r,!1),o=Ru(i.length,e.length,!1),l=$u(a.shape,e,r,!1),u=hn(a.reshape(i),o);return oe(u,l)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],a=ys(s),i=new bx({windowSize:a,inSize:s,batchSize:r},e),o=this.compileAndRun(i,[t],n);return 1===o.shape[1]?o:this.reduce(o,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const a=ys(s),i=new Rb({windowSize:a,inSize:s,batchSize:r},e,null==n),o=[t];null!=n&&o.push(n);const l=this.compileAndRun(i,o,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=ys(r[r.length-1]),a=new Yb(r,s,e,null==n),i=null==n?[t]:[t,n],o=this.compileAndRun(a,i,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){de("sum",e,t.rank);const[n,r]=ce(t.shape,e),s=N(r),a=t.as2D(-1,s),i=vt(t.dtype);return this.reduce(a,"sum",i).reshape(n)}prod(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);const[n,r]=ce(t.shape,e),s=N(r),a=t.as2D(-1,s),i=vt(t.dtype);return this.reduce(a,"prod",i).reshape(n)}unsortedSegmentSum(t,e,n){let r=0;const s=pe([r],t.rank);let a=t;null!=s&&(a=hn(t,s),r=me(1,t.rank)[0]);const i=nw.computeOutShape(a.shape,r,n),o=N([a.shape[r]]),l=a.as2D(-1,o),u=vt(t.dtype);let c=this.segOpCompute(l,"unsortedSegmentSum",e,u,n).reshape(i);return null!=s&&(c=hn(c,fe(s))),c}segOpCompute(t,e,n,r,s){const a=t.shape[0],i=t.shape[1],o=nw.segOpComputeOptimalWindowSize(i,s),l=new Ax({windowSize:o,inSize:i,batchSize:a,numSegments:s},e),u=this.compileAndRun(l,[t,n],r);return u.shape[1]===s?u:(n=fo(0,s).tile([i/o]),this.segOpCompute(u,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(de("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!l().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=ce(t.shape,r),a=N(s),i=t.as2D(-1,a);return this.argReduce(i,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=t.shape[e];let a=t;for(let e=0;e<=Math.ceil(Math.log2(s))-1;e++){const n=new Ny(t.shape,!1,r),s=n.getCustomSetupFunc(e),i=a;a=this.compileAndRun(n,[a],a.dtype,s),i.dispose()}if(n){const e=new Ny(t.shape,n,r),s=a;a=this.compileAndRun(e,[a]),s.dispose()}return a}equal(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new ly("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}notEqual(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(notEqual(a, b));\n","bool");const n=new ly("return float(a != b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const n=new ly("return float(a < b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}lessEqual(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new ly("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const n=new ly("return float(a > b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greaterEqual(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new ly("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new Bx(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new ly("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new ly("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new Nx(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],wt(e.dtype,n.dtype))}where(t){Du("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return iw(t.shape,e)}topk(t,e,n){const r=t.dataSync();return aw(r,t.shape,t.dtype,e)}min(t,e){de("min",e,t.rank);const[n,r]=ce(t.shape,e),s=N(r),a=t.as2D(-1,s);return this.reduce(a,"min",a.dtype).reshape(n)}minimum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cy("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new ly("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}mod(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cy("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new ly("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cy("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new ly("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}all(t,e){de("all",e,t.rank);const[n,r]=ce(t.shape,e),s=N(r),a=t.as2D(-1,s);return this.reduce(a,"all",a.dtype).reshape(n)}any(t,e){de("any",e,t.rank);const[n,r]=ce(t.shape,e),s=N(r),a=t.as2D(-1,s);return this.reduce(a,"any",a.dtype).reshape(n)}floorDiv(t,e){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");const n=new ly("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(n,[t,e],"int32")}add(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,sy);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);const n=wt(t.dtype,e.dtype);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,sy,n);const r=new ly(sy,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new tw(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const a=new cy(n,t.shape,e.shape,s);return this.compileAndRun(a,[t,e],r)}complexSeparableBinaryOp(t,e,n){const r=this.texData.get(t.dataId),s=this.texData.get(e.dataId),[a,i]=[[r.complexTensors.real,s.complexTensors.real],[r.complexTensors.imag,s.complexTensors.imag]].map(r=>{const[s,a]=r,i=this.makeComplexComponentTensorInfo(t,s),o=this.makeComplexComponentTensorInfo(e,a),l=new ly(n,t.shape,e.shape);return this.compileAndRun(l,[i,o],wt(s.dtype,a.dtype))}),o=this.complex(a,i);return a.dispose(),i.dispose(),o}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>l().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map(t=>t.dtype).reduce((t,e)=>wt(t,e)),n=t.map(t=>t.shape),r=l().getBool("WEBGL_PACK")?new Nb(t[0].shape,n):new Ab(t[0].shape,n);return this.compileAndRun(r,t,e)}subtract(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,ay);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);const n=wt(t.dtype,e.dtype);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,ay,t.dtype);const r=new ly(ay,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}pow(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cy("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new ly("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=wt(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,qx,t.dtype);const e=new Bx(t.shape,qx);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,jx,t.dtype);const e=new Bx(t.shape,jx);return this.compileAndRun(e,[t])}sign(t){const e=new Bx(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new Bx(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new Bx(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new Bx(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new Bx(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Kx,t.dtype);const e=new Bx(t.shape,Kx);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Xx,t.dtype);const e=new Bx(t.shape,Xx);return this.compileAndRun(e,[t])}softmax(t,e){const n=M([e],t.shape),r=Si(t,n),s=he(r.shape,n),a=this.subtract(t,r.reshape(s)),i=this.exp(a),o=this.sum(i,n).reshape(s);return Wt(i,o)}log(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new Bx(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new Bx(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new Bx(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);const e=new Bx(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new Bx(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=l().getBool("WEBGL_PACK")?new tw(t.shape,Jx):new Bx(t.shape,Wx),this.compileAndRun(e,[t])}relu6(t){let e;return e=l().getBool("WEBGL_PACK")?new tw(t.shape,Zx):new Bx(t.shape,Ux),this.compileAndRun(e,[t])}prelu(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cy(uy,t.shape,e.shape):new ly(oy,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Qx,t.dtype);const e=new Bx(t.shape,Vx);return this.compileAndRun(e,[t])}eluDer(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cy("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new ly("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new Bx(t.shape,Gx);return this.compileAndRun(e,[t])}int(t){const e=new Bx(t.shape,"return float(int(x));");return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let r;r=l().getBool("WEBGL_PACK_CLIP")?new dy(t.shape):new hy(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Px,t.dtype);const e=new Bx(t.shape,Px);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new py(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new Bx(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new Bx(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}sin(t){const e=new Bx(t.shape,"if (isnan(x)) return x;\n  return sin(x);\n");return this.compileAndRun(e,[t])}cos(t){const e=new Bx(t.shape,"if (isnan(x)) return x;\n  return cos(x);\n");return this.compileAndRun(e,[t])}tan(t){const e=new Bx(t.shape,"return tan(x);");return this.compileAndRun(e,[t])}asin(t){const e=new Bx(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new Bx(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new Bx(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}atan2(t,e){const n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cy("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new ly("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}sinh(t){const e=new Bx(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new Bx(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new Bx(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new Bx(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new Bx(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new Bx(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new Bx(t.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');return this.compileAndRun(e,[t])}step(t,e){const n=new Bx(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,a){const i=t.shape,o=this.texData.get(t.dataId),u=n.inChannels,c=i[0]*i[1]*i[2],h=n.outChannels,d="channelsLast"===n.dataFormat,p=(1===c||1===h)&&u>1e3,f=i[2]%2!=0&&!!o.isPacked;if(p||!l().getBool("WEBGL_LAZILY_UNPACK")||!l().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=d?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],l=this.reshape(t,[1,o,n.inChannels]),u=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:l,b:u,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:a}),n.outShape)}const m=d?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),g={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},b=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,C(xb(o.shape,g.shape),()=>`packed reshape ${o.shape} to ${g.shape} isn't free`);const y=this.reshape(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:g,b:y,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:a}),w=this.texData.get(x.dataId);return C(w.isPacked,()=>"batchMatMul result is expected to be packed"),o.shape=b,w.shape=n.outShape,ma().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,r,s,a){const{filterWidth:i,filterHeight:o,inChannels:l,outWidth:u,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=i*o*l,f=c*u,m=[p,f],g=t.squeeze([0]),b=e.reshape([1,p,-1]),y=new rx(m,g.shape,n),x=this.compileAndRun(y,[g]).reshape([1,m[0],m[1]]),w=null!=r,v=null!=a,k=s?lw(s,!0):null,I=new ux(x.shape,[1,f,n.outChannels],!0,!1,w,k,v),C=[x,b];r&&C.push(r),v&&C.push(a);const S=this.compileAndRun(I,C);return d?S.reshape([1,c,u,n.outChannels]):S.reshape([1,n.outChannels,c,u])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,a);if(l().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,a);const i=null!=r,o=null!=a,u=s?lw(s,!1):null,c=new Iy(n,i,u,o),h=[t,e];return r&&h.push(r),a&&h.push(a),this.compileAndRun(c,h)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(l().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new Iy(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new yy(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new by(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){const i=l().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?lw(s,i):null,u=[t,e],c=null!=r,h=null!=a;let d;return c&&u.push(r),h&&u.push(a),i?(d=new Ey(n,c,o,h),this.compileAndRun(d,u)):(d=new Sy(n,c,o,h),this.compileAndRun(d,u))}depthwiseConv2D(t,e,n){let r;return l().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Ey(n),this.compileAndRun(r,[t,e])):(r=new Sy(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new ky(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new vy(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new Cy(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new wy(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new xy(n);return this.compileAndRun(r,[t,e])}maxPool(t,e){const n=new mx(e,"max",!1);return this.compileAndRun(n,[t])}avgPool(t,e){const n=new mx(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}maxPoolBackprop(t,e,n,r){const s=new mx(r,"max",!0),a=this.compileAndRun(s,[e]),i=new ox(r),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}avgPoolBackprop(t,e,n){const r=new Jb(n);return this.compileAndRun(r,[t],e.dtype)}cast(t,e){return Uu(t,e,this)}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(r);return o}avgPool3d(t,e){const n=new gx(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new Zb(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new gx(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new gx(r,"max",!0),a=this.compileAndRun(s,[e]),i=new lx(r),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}reshape(t,e){const n=this.texData.get(t.dataId);if(n.isPacked&&!xb(t.shape,e)&&(null===n.texture||!xb(n.shape,e))){const n=this.packedReshape(t,e);return ma().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}return Vu(t,e)}resizeBilinear(t,e,n,r){const s=l().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vx(t.shape,e,n,r):new wx(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new xx(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new Ix(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new kx(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:_o(t),a=s.shape[0],i=s.shape[1],o=new cx(a,i,n),l=o.getCustomSetupFunc(r);return this.compileAndRun(o,[s],"int32",l)}oneHot(t,e,n,r){const s=new hx(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new Fy(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,a){const i=new Ay(t.shape,e.shape,r,s,a);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){C(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],a="NHWC"===n?t.shape[2]:t.shape[3],i="NHWC"===n?t.shape[3]:t.shape[1],o=s*e,l=a*e,u=i/(e*e),c=new Dy("NHWC"===n?[r,o,l,u]:[r,u,o,l],e,n);return this.compileAndRun(c,[t])}split(t,e,n){return rw(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=ca(0,t,n),l=[o/a,a],u=t.reshape([s,r]),c=e.reshape([s,a]);if(0===o)return Vu(ts([]),n);const h=Gt(0),d=new Ex(s,r,u.rank,c.rank,i,l);return this.compileAndRun(d,[c,u,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,strides:i,outputSize:o}=ca(0,t,n),l=new Ex(a,s,t.rank,e.rank,i,[o,1],!1);return this.compileAndRun(l,[e,t,r]).reshape(n)}fft(t){return this.fftImpl(t,!1)}ifft(t){return this.fftImpl(t,!0)}fftImpl(t,e){const n=this.texData.get(t.dataId),r=new Wy(zy,t.shape,e),s=new Wy(Py,t.shape,e),a=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],i=this.compileAndRun(r,a),o=this.compileAndRun(s,a),l=this.complex(i,o).as2D(t.shape[0],t.shape[1]);return i.dispose(),o.dispose(),l}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=oa(t,e),l=e.reshape([a,r]),u=t.reshape([t.size/i,i]),c=new Gy(r,o,[a,i]);return this.compileAndRun(c,[u,l]).reshape(s)}fill(t,e,n){if("string"===(n=n||V(e))){const r=B(n,N(t));return r.fill(e),ma().makeTensor(r,t,n,this)}{const r=new Uy(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return Gu(t,e,n)}makeTensorInfo(t,e){const n=this.write(null,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e){const{dataId:n}=this.makeTensorInfo(t,e);return ma().makeTensorFromDataId(n,t,e,this)}unpackTensor(t){const e=new ew(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new dx(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[mb(t.shape),...gb(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[mb(e),...gb(e)],a=new yx(s,n),i=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=bb(r);let i;i=n?new _y(a):new Ty(a);return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===Yg.DENSE){const e=tb(t.outputShape);i.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===N(a.shape))return i.values=L(a.dtype,0),a;const o=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&N(e.shape)<=l().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!xb(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:i,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`});const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s,a}(t,u,c),d=this.getAndSaveBinary(h,()=>function(t,e,n,r){const s=e.userCode,a=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=a.map(t=>t.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Lb(a,o,s,e.packedInputs),c=t.createProgram(u);let h=null;const d=t.getUniformLocation(c,"NAN",!1);1===l().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(c,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;p[r]=t.getUniformLocation(c,r,s),p["offset"+r]=t.getUniformLocation(c,"offset"+r,s)}return{program:e,source:u,webGLProgram:c,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:h,nanLoc:d}}(this.gpgpu,t,u,c)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(t,e,n,r,s){nx(e.inShapeInfos,n),nx([e.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===l().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const s=e.program.variableNames[r],a=e.uniformLocations[s],i=e.uniformLocations["offset"+s];if(null!=a)if(n.isUniform)if(N(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)}),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,d,u,c,r),o.forEach(t=>this.disposeData(t.dataId)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!l().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeData(a.dataId),t}return a}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const a=this.runWebGLProgram(t,e,n,r,s);return ma().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!l().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ba(()=>{if(!l().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=l().getBool("DEBUG");l().set("DEBUG",!1);const e=this.abs(Gt(1e-8)).dataSync()[0];if(l().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=e;if(null!=a)return;const u=null!=this.activeTimers;let c;u&&(c=Z());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=l().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?I(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=O(t);t=e.newShape}let r=N(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=mb(t);let n=2,s=2;return t.length&&([n,s]=gb(t)),r=e*(n/2)*(s/2),_(r).map(t=>2*t)}return _(r)}(n,o),e.texShape=h),null!=s){const t=bb(n);let a,i=h[1],l=h[0];const d=s instanceof Uint8Array;o?([i,l]=eb(h[0],h[1]),a=new By(t,[l,i],d)):a=new Ly(t,[l,i],d);const p=this.makeTensorInfo([l,i],r);this.texData.get(p.dataId).usage=d?Jg.PIXELS:Jg.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,l,s);const f=!0,m=this.runWebGLProgram(a,[p],r,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeData(p.dataId),this.texData.delete(m.dataId),e.values=null,u&&(this.uploadWaitMs+=Z()-c)}else{const t=this.acquireTexture(h,i,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*P(e)}}const cw={kernelName:"Div",backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t;return function(t,e,n){let r=new ly("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",t.shape,e.shape);return l().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new cy("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",t.shape,e.shape,!0)),n.runWebGLProgram(r,[t,e],"float32")}(n,r,e)}};class hw{constructor(t){this.variableNames=["A"];const e=_b(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class dw{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=_b(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const pw={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,u],d=[c,u,a];(o||i)&&(null==fw&&(fw=document.createElement("canvas").getContext("2d")),fw.canvas.width=u,fw.canvas.height=c,fw.drawImage(s,0,0,u,c),s=fw.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=Jg.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=l().getBool("WEBGL_PACK")?new dw(d):new hw(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let fw;const{maxImpl:mw,transposeImpl:gw}=Ag;function bw(t,e,n){const r=n.texData.get(t.dataId);return!r.isPacked||xb(t.shape,e)||null!==r.texture&&xb(r.shape,e)?{dataId:t.dataId,shape:e,dtype:t.dtype}:function(t,e,n){const r=[mb(t.shape),...gb(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[mb(e),...gb(e)],i=new yx(a,r),o=n.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(t,e,n)}function yw(t,e,n,r){const s=N(e),a=bw(t,[N(t.shape)/s,s],r),i=function t(e,n,r,s){const[a,i]=e.shape,o=ys(i),l=new bx({windowSize:o,inSize:i,batchSize:a},r),u=s.runWebGLProgram(l,[e],n);return 1===u.shape[1]?u:t(u,n,r,s)}(a,t.dtype,"max",r);return a.dataId!==t.dataId&&r.disposeData(a.dataId),bw(i,n,r)}class xw{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=jb(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class ww{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=jb(this.rank),s=$b("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=s[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function vw(t,e,n){const r=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ww(t.shape,e):new xw(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const kw={kernelName:$t,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n,o=r.shape.length,l=M(s,r.shape);let u=l;const c=pe(u,o),h=null!=c,d=i.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const t=i.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=gw(t,r.shape,r.dtype,c,e);p=i.makeTensorInfo(e,r.dtype);i.texData.get(p.dataId).values=n}else p=vw(r,c,i);u=me(u.length,o)}de("max",u,o);const[f,m]=ce(p.shape,u);let g,b=f;if(a&&(b=he(f,l)),d){const t=i.texData.get(p.dataId).values,e=mw(t,N(m),b,r.dtype);g=i.makeTensorInfo(b,r.dtype);i.texData.get(g.dataId).values=e}else g=yw(p,m,b,i);return h&&i.disposeData(p.dataId),g}};const Iw={kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,l=n;C(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];C(Te(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=ve(r.shape,s,a,u,i),[h,d]=function(t,e,n,r){let s=new mx(n,"max",!1);const a=r.runWebGLProgram(s,[t],"float32");return s=new mx(n,"max",!0,!0,e),[a,r.runWebGLProgram(s,[t],"float32")]}(r,o,c,l);return[h,d]}},Cw={kernelName:"NonMaxSuppressionV3",backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Du("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=n,l=e;return Ml(l.readSync(r.dataId),l.readSync(s.dataId),a,i,o)}},Sw=Ol,Ew={kernelName:"NonMaxSuppressionV4",backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Du("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=Sw(c,h,a,i,o,l);return[d,p]}},Aw=Ll,Nw={kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Du("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),d=a,p=i,f=o,m=l,{selectedIndices:g,selectedScores:b}=Aw(c,h,d,p,f,m);return[g,b]}};class Rw{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const s=t[1],a=t[2],i=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[l,u]=Au(r,s,a),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const $w=[kw,pw,cw,Iw,Cw,Ew,Nw,{kernelName:"RotateWithOffset",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,l=new Rw(r.shape,s,a,i);return o.runWebGLProgram(l,[r],r.dtype)}},{kernelName:"Square",backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,s=new Bx(n.shape,"return x * x;");return r.runWebGLProgram(s,[n],n.dtype)}},{kernelName:"SquaredDifference",backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t,s=e,a=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cy("return (a - b) * (a - b);",n.shape,r.shape):new ly("return (a - b) * (a - b);",n.shape,r.shape);return s.compileAndRun(a,[n,r])}},{kernelName:"Transpose",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n,i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];let l;if(a.shouldExecuteOnCPU([r])){const t=a.texData.get(r.dataId).values,e=gw(t,r.shape,r.dtype,s,o);l=a.makeTensorInfo(o,r.dtype);a.texData.get(l.dataId).values=e}else l=vw(r,s,a);return l}}];for(const t of $w)y(t);Nt()&&wa("webgl",()=>new uw,2);const Tw=Si([1,2,3,4]);console.log(Tw.dataSync())}));
//# sourceMappingURL=union_package.js.map
