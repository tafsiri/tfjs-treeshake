!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("crypto"),require("path"),require("fs")):"function"==typeof define&&define.amd?define(["crypto","path","fs"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).crypto,e.Cn,e.Rn)}(this,(function(e,t,n){"use strict";function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=r(e),s=r(t),o=r(n);class i{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(t instanceof Promise)throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function u(){return p}let l,p=null;function c(){if(null==l){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}l=e}return l}function d(e,t){const n=function(){const e=c();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const h=d("kernelRegistry",()=>new Map),m=d("gradRegistry",()=>new Map);function f(e,t){const n=x(e,t);return h.get(n)}function y(e){return m.get(e)}function g(e){const t=h.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function b(e){const{kernelName:t,backendName:n}=e,r=x(t,n);h.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),h.set(r,e)}function w(e){const{kernelName:t}=e;m.has(t)&&u().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),m.set(t,e)}function x(e,t){return`${t}_${e}`}function k(e,t,n){return Math.max(e,Math.min(t,n))}function v(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function N(e,t,n=""){v(E(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function S(e){v(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function I(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||A(e)&&!n)for(let r=0;r<e.length;++r)I(e[r],t,n);else t.push(e);return t}function _(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function E(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function T(e){return e%1==0}function D(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function M(e,t){const n=t.length;return v((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),v(e.every(e=>T(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function A(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function $(e){return"string"==typeof e||e instanceof String}function O(e){return Array.isArray(e)?O(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":"number"==typeof e?"float32":$(e)?"string":function(e){return"boolean"==typeof e}(e)?"bool":"float32"}function C(e){return!!(e&&e.constructor&&e.call&&e.apply)}function R(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function B(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=I(e)),u().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function z(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return function e(t,n,r){const a=new Array;if(1===n.length){const e=n[0];for(let n=0;n<e;n++)a[n]=r[t+n]}else{const s=n[0],o=n.slice(1),i=o.reduce((e,t)=>e*t);for(let n=0;n<s;n++)a[n]=e(t+n*i,o,r)}return a}(0,e,t)}function P(e,t){const n=L(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function L(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function V(){return u().platform.now()}function q(e){e.forEach(t=>{v(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function W(e,t="utf-8"){return t=t||"utf-8",u().platform.decode(e,t)}class H{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new U)}profileKernel(e,t,n){let r;const a=this.backendTimer.time(()=>{r=n()});r.map(t=>{t.data().then(n=>{!function(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}}(n,t.dtype,e)})});return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}class U{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?D(r+"ms",9):r.error,i=D(e,25),u=t.rank,l=t.size,p=D(t.shape.toString(),14);let c="";for(const e in a){const n=a[e].shape||t.shape,r=n.length;c+=`${e}: ${r}D ${r>0?n:""} `}console.log(`%c${i}\t%c${o}\t%c${u}D ${p}\t%c${l}\t%c${c}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function j(e,t,n,r){const a=R(t),s=function(e,t,n,r){const a=_(t),s=r[r.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?Y(e):e;if(i>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],G(u[t+e],0,n).length)}return o}(e,t,n,a),o=t.length,i=function e(t,n,r,a,s,o=!0){const i="complex64"===r?2:1,u=n[0],l=n.length;if(0===l){if("complex64"===r){return[G(Y(t)[0],0,r)]}return"bool"===r?[K(t[0])]:[t[0].toString()]}if(1===l){if(u>20){const e=3*i;let n=Array.from(t.slice(0,e)),a=Array.from(t.slice((u-3)*i,u*i));return"complex64"===r&&(n=Y(n),a=Y(a)),["["+n.map((e,t)=>G(e,s[t],r)).join(", ")+", ..., "+a.map((e,t)=>G(e,s[u-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?Y(t):Array.from(t)).map((e,t)=>G(e,s[t],r)).join(", ")+"]"]}const p=n.slice(1),c=a.slice(1),d=a[0]*i,h=[];if(u>20){for(let n=0;n<3;n++){const a=n*d,o=a+d;h.push(...e(t.slice(a,o),p,r,c,s,!1))}h.push("...");for(let n=u-3;n<u;n++){const a=n*d,o=a+d;h.push(...e(t.slice(a,o),p,r,c,s,n===u-1))}}else for(let n=0;n<u;n++){const a=n*d,o=a+d;h.push(...e(t.slice(a,o),p,r,c,s,n===u-1))}const m=2===l?",":"";h[0]="["+h[0]+m;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+m;let f=",\n";for(let e=2;e<l;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+o),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(e=>"    "+e).join("\n")),u.join("\n")}function G(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":$(e)?`'${e}'`:"bool"===n?K(e):parseFloat(e.toFixed(7)).toString(),D(r,t)}function K(e){return 0===e?"false":"true"}function Y(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class X{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=_(e),null!=n){const e=n.length;v(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||function(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}(t,this.size),this.strides=R(e)}set(e,...t){0===t.length&&(t=[0]),v(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return J().makeTensor(this.values,this.shape,this.dtype)}}let J=null,Z=null;class Q{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=_(e),this.strides=R(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Z.buffer(this.shape,this.dtype,e)}bufferSync(){return Z.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return z(this.shape,e)}arraySync(){return z(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=J().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>W(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=J().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>W(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await J().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(J().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Z.print(this,e)}clone(){return this.throwIfDisposed(),Z.clone(this)}toString(e=!1){return j(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Z.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),J().makeVariable(this,e,t,n)}}Object.defineProperty(Q,Symbol.hasInstance,{value:e=>!!e&&null!=e.dataId&&null!=e.shape&&null!=e.dtype});class ee extends Q{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!E(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);J().disposeTensor(this),this.dataId=e.dataId,J().incRef(this,null)}dispose(){J().disposeVariable(this),this.isDisposedInternal=!0}}var te,ne,re,ae,se;Object.defineProperty(ee,Symbol.hasInstance,{value:e=>e instanceof Q&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(te||(te={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ne||(ne={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(re||(re={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ae||(ae={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(se||(se={}));const oe={float32:ae,int32:ne,bool:re,complex64:se};function ie(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return oe[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ue(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof Q)return void n.push(t);if(a=t,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=t;for(const t in s){const a=s[t];r.has(a)||(r.add(a),e(a,n,r))}}(e,t,new Set),t}class le{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class pe{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new le}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new H(this.backendInstance),!0}setupRegisteredKernels(){g(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){g(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(Promise.resolve(n)===n){const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return pe.nextTensorId++}nextVariableId(){return pe.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>e.toFloat()}),[],{}),t}runKernel(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,a,s,o){let i,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const p=this.state.numBytes,c=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const h=f(r,this.backendName);let m;if(null!=h)d=()=>{const e=this.backend.numDataIds();m=h.kernelFunc({inputs:t,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const i=n.map(({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n));if(l){let e=this.getTensorsForGradient(r,t,i);if(null==e){null==o&&(o=[]);const t=i.filter((e,t)=>o[t]);e=(s||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return i};else{const t=e=>{l&&(u=e.map(e=>this.keep(this.clone(e))))};d=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>e(this.backend,t));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{if(this.ENV.getBool("DEBUG")){let e;e=this.profiler.profileKernel(r,t,()=>d()),this.profiler.logKernelProfile(e),i=e.outputs}else i=d()}),l&&this.addTapeNode(r,t,i,n,u,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-p,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(e=>null!=t[e]?t[e].shape:null),outputShapes:i.map(e=>e.shape)}),Array.isArray(m)?i:i[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=y(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(v(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const o=n.filter((e,t)=>a[t]);return s.concat(o)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&$(e[0])&&(a=e.map(e=>function(e,t="utf-8"){return t=t||"utf-8",u().platform.encode(e,t)}(e)));const s=r.write(a,t,n),o=new Q(t,n,s,this.nextTensorId());if(this.incRef(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a=new Q(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new ee(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*F(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof ee||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;return this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=y(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=L(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ue(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(v(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));v(a instanceof Q,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=P(_(e),"float32");return ce.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n){for(let r=t.length-1;r>=0;r--){const a=t[r],s=[];if(a.outputs.forEach(t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(s);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n(()=>o[t]());if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const s=a.inputs[t];if(!E(r.shape,s.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=r;else{const t=e[s.id];e[s.id]=t.add(r),t.dispose()}}}}(e,s,e=>this.tidy(e));const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return v(C(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;v(t.every(e=>e instanceof Q),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc((r,a)=>(n=e(...t,a),v(n.value instanceof Q,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),v(C(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];v(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),v(s.every(e=>e instanceof Q),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return s.forEach((e,t)=>{o[t]=()=>e}),o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=V(),n=await this.backend.time(e);return n.wallMs=V()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new le;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}pe.nextTensorId=0,pe.nextVariableId=0;const ce=function(){const e=c();if(null==e._tfengine){const t=new i(e);e._tfengine=new pe(t)}var t;return t=e._tfengine.ENV,p=t,J=()=>e._tfengine,e._tfengine}();const de=u();de.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),de.registerFlag("IS_BROWSER",()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope),de.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),de.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),de.registerFlag("PROD",()=>!1),de.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>de.getBool("DEBUG")),de.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),de.registerFlag("IS_TEST",()=>!1);function he(e,t){let n=e;if(A(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||A(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&u().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!A(t))return void v(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);v(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),v(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const a=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],a,r.concat(n))}(e,r,[]),r}function me(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function fe(e,t,n,r="numeric"){if(e instanceof Q)return me(r,e.dtype,t,n),e;let a=O(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),me(r,a,t,n),null==e||!A(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=he(e,a);A(e)||Array.isArray(e)||(e=[e]);const o="string"!==a?B(e,a):I(e,[],!0);return ce.makeTensor(o,s,a)}function ye(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,r)=>fe(e,`${t}[${r}]`,n),r)}function ge(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const a=(...e)=>{ce.startScope(n);try{const t=r(...e);return t instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),ce.endScope(t),t}catch(e){throw ce.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const be=ge({cast_:function(e,t){const n=fe(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return ce.runKernelFunc(e=>e.cast(n,t),r,null,"Cast",a)}});const we=ge({mul_:function(e,t){let n=fe(e,"a","mul"),r=fe(t,"b","mul");[n,r]=ie(n,r);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.multiply(n,r);return t([n,r]),a},a,null,"Multiply")}});const xe=ge({step_:function(e,t=0){const n=fe(e,"x","step"),r={x:n},a={alpha:t};return ce.runKernelFunc(e=>e.step(n,t),r,null,"Step",a)}}),ke={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(e,xe(be(n,"float32"),-1))}}};const ve=ge({floorDiv_:function(e,t){let n=fe(e,"a","floorDiv"),r=fe(t,"b","floorDiv");[n,r]=ie(n,r);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.floorDiv(n,r);return t([n,r]),a},a,null,"FloorDiv")}});const Ne=ge({div_:function(e,t){let n=fe(e,"a","div"),r=fe(t,"b","div");if([n,r]=ie(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ve(n,r);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.realDivide(n,r);return t([n,r]),a},a,null,"Div",{})}});const Se=ge({neg_:function(e){const t=fe(e,"x","neg"),n={x:t};return ce.runKernelFunc(e=>e.neg(t),n,null,"Negate")}});function Ie(e,t,n,r){if(null==r&&(r=O(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!A(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){q(t);const e=_(t),r=_(n);v(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==_(t.slice(e));v(n[e]===t[e]||!a,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return A(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?B(e,r):I(e,[],!0),ce.makeTensor(e,t,r)}function _e(e,t){if((A(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&A(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ie(e,[],[],t)}const Ee=ge({sqrt_:function(e){const t=fe(e,"x","sqrt"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.sqrt(t);return n([t]),r},n,null,"Sqrt")}});const Te=ge({square_:function(e){const t=fe(e,"x","square"),n=[t];return ce.runKernelFunc((e,n)=>(n([t]),e.square(t)),{x:t},null,"Square",{},n,[])}});const De=ge({sub_:function(e,t){let n=fe(e,"a","sub"),r=fe(t,"b","sub");[n,r]=ie(n,r);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.subtract(n,r);return t([n,r]),a},a,null,"Sub")}}),Me={kernelName:"Acos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Te(be(n,"float32")),r=Ee(De(_e(1),t));return Se(Ne(e,r))}}}},Ae={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ee(De(Te(be(n,"float32")),1));return Ne(e,t)}}}};function Fe(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function $e(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function Oe(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const Ce={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Oe(n.shape,r.shape);return{a:()=>{let t=e;const r=$e(n.shape,a);return r.length>0&&(t=t.sum(r)),t.reshape(n.shape)},b:()=>{let t=e;const n=$e(r.shape,a);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)}}}},Re={kernelName:"AddN",saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}};const Be=ge({zerosLike_:function(e){const t=fe(e,"x","zerosLike"),n={x:t};return ce.runKernelFunc(e=>e.zerosLike(t),n,null,"ZerosLike")}}),ze={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Be(n)}}},Pe={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Be(n)}}},Le={kernelName:"Asin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ne(e,Ee(De(_e(1),Te(be(n,"float32")))))}}};const Ve=ge({add_:function(e,t){let n=fe(e,"a","add"),r=fe(t,"b","add");[n,r]=ie(n,r);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.add(n,r);return t([n,r]),a},a,null,"Add")}}),qe={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ee(Ve(_e(1),Te(be(n,"float32"))));return Ne(e,t)}}}};const We=ge({reshape_:function(e,t){const n=fe(e,"x","reshape",null);t=function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}(t,n.size),v(n.size===_(t),()=>"new shape and old shape must have the same number of elements.");const r={x:n},a={shape:t};return ce.runKernelFunc((e,r)=>(r([n]),e.reshape(n,t)),r,null,"Reshape",a)}});function He(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ue(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function je(e,t){return function(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}(e,t.map(e=>1),t)}function Ge(e,t,n){v(He(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function Ke(e,t){if(He(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function Ye(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Xe(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Je=ge({sum_:function(e,t=null,n=!1){let r=fe(e,"x","sum");"bool"===r.dtype&&(r=r.toInt());const a={x:r},s={axis:t,keepDims:n};return ce.runKernelFunc((e,a)=>{a([r]);const s=M(t,r.shape),o=Ke(s,r.rank);let i=s,u=r;null!=o&&(u=r.transpose(o),i=Xe(i.length,r.rank));let l=e.sum(u,i);if(n){const e=je(l.shape,s);l=l.reshape(e)}return l},a,null,"Sum",s)}}),Ze={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Oe(n.shape,r.shape);return{a:()=>{const t=Ve(Te(n),Te(r));let s=we(e,Ne(r,t));const o=$e(n.shape,a);return o.length>0&&(s=Je(s,o)),We(s,n.shape)},b:()=>{const t=Ve(Te(n),Te(r));let s=Se(we(e,Ne(n,t)));const o=$e(r.shape,a);return o.length>0&&(s=Je(s,o)),We(s,r.shape)}}}},Qe={kernelName:"Atan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ne(e,Ve(Te(be(n,"float32")),1))}}},et={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ne(e,De(_e(1),Te(be(n,"float32"))))}}};function tt(e,t,n,r,a,s,o="channelsLast"){const[i,u]=ot(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=[i,u,e[1],e[1]]}return rt(e,l,n,r,a,s,!1,o)}function nt(e,t,n,r,a,s,o="NDHWC"){const[i,u,l]=it(t);let p,c;if("NDHWC"===o)c="channelsLast",p=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat "+o);c="channelsFirst",p=[i,u,l,e[1],e[1]]}return at(e,p,n,r,a,!1,c,s)}function rt(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,l,p,c]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,p,c]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,c,l,p]=e}const[d,h,,m]=t,[f,y]=ot(n),[g,b]=ot(r),w=ut(d,g),x=ut(h,b),{padInfo:k,outHeight:N,outWidth:S}=function(e,t,n,r,a,s,o,i,u){let l,p,c;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=st(e,t,n));const s=e[0],o=e[1],i=lt((s-t+2*r)/n+1,a);v(T(i),()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`);const u=lt((o-t+2*r)/n+1,a);return v(T(u),()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`),[i,u]}([t,n],s,r,e,i);p=a[0],c=a[1]}else if("same"===e){p=Math.ceil(t/r),c=Math.ceil(n/a);const e=Math.max(0,(p-1)*r+s-t),i=Math.max(0,(c-1)*a+o-n),u=Math.floor(e/2),d=e-u,h=Math.floor(i/2);l={top:u,bottom:d,left:h,right:i-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),c=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const d="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],f="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:h,left:m,right:f,type:0===d&&0===h&&0===m&&0===f?"VALID":"EXPLICIT"},p=lt((t-s+d+h)/r+1,i),c=lt((n-o+m+f)/a+1,i)}}return{padInfo:l,outHeight:p,outWidth:c}}(a,l,p,f,y,w,x,s,i),I=o?m*c:m;let _;return"channelsFirst"===i?_=[u,I,N,S]:"channelsLast"===i&&(_=[u,N,S,I]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:c,outHeight:N,outWidth:S,outChannels:I,padInfo:k,strideHeight:f,strideWidth:y,filterHeight:d,filterWidth:h,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:g,dilationWidth:b,inShape:e,outShape:_,filterShape:t}}function at(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,l,p,c,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,p,c,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,d,l,p,c]=e}const[h,m,f,,y]=t,[g,b,w]=it(n),[x,k,N]=it(r),S=ut(h,x),I=ut(m,k),_=ut(f,N),{padInfo:E,outDepth:D,outHeight:M,outWidth:A}=function(e,t,n,r,a,s,o,i,u,l,p){let c,d,h,m;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=st(e,t,r));const o=e[0],i=e[1],u=e[2],l=lt((o-t+2*a)/r+1,s);v(T(l),()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`);const p=lt((i-t+2*a)/r+1,s);v(T(p),()=>`The output # of rows (${p}) must be an integer. Change the stride and/or zero pad parameters`);const c=lt((u-t+2*a)/r+1,s);return v(T(c),()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`),[l,p,c,n]}([t,n,r,1],i,1,a,e,p);d=s[0],h=s[1],m=s[2]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/s),m=Math.ceil(r/o);const e=(d-1)*a+i-t,p=(h-1)*s+u-n,f=(m-1)*o+l-r,y=Math.floor(e/2),g=e-y,b=Math.floor(p/2),w=p-b,x=Math.floor(f/2);c={top:b,bottom:w,left:x,right:f-x,front:y,back:g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/a),h=Math.ceil((n-u+1)/s),m=Math.ceil((r-l+1)/o)}return{padInfo:c,outDepth:d,outHeight:h,outWidth:m}}(a,l,p,c,g,b,w,S,I,_,i),F=s?y*d:y;let $;return"channelsFirst"===o?$=[u,F,D,M,A]:"channelsLast"===o&&($=[u,D,M,A,F]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:p,inWidth:c,inChannels:d,outDepth:D,outHeight:M,outWidth:A,outChannels:F,padInfo:E,strideDepth:g,strideHeight:b,strideWidth:w,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:S,effectiveFilterHeight:I,effectiveFilterWidth:_,dilationDepth:x,dilationHeight:k,dilationWidth:N,inShape:e,outShape:$,filterShape:t}}function st(e,t,n,r=1){const a=ut(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ot(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function it(e){return"number"==typeof e?[e,e,e]:e}function ut(e,t){return t<=1?e:e+(e-1)*(t-1)}function lt(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function pt(e){const[t,n,r]=ot(e);return 1===t&&1===n&&1===r}function ct(e,t){return pt(e)||pt(t)}function dt(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const ht=ge({avgPool3dBackprop_:function(e,t,n,r,a=[1,1,1],s,o){const i=fe(e,"dy","avgPool3dBackprop"),u=fe(t,"input","avgPool3dBackprop");let l=i,p=u,c=!1;4===u.rank&&(c=!0,l=We(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=We(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),v(5===l.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."),v(5===p.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+p.rank+"."),v(ct(r,a),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`),null!=o&&v(T(s),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);const d={dy:l,input:p},h={filterSize:n,strides:r,dilations:a,pad:s,dimRoundingMode:o},m=ce.runKernelFunc(e=>{const t=nt(p.shape,n,r,a,s,o);return e.avgPool3dBackprop(l,p,t)},d,null,"AvgPool3DBackprop",h);return c?We(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),mt={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,dilations:o,pad:i,dimRoundingMode:u}=n,l=null==o?[1,1,1]:o;return{x:()=>ht(e,r,a,s,l,i,u)}}};const ft=ge({avgPoolBackprop_:function(e,t,n,r,a){const s=fe(e,"dy","avgPoolBackprop"),o=fe(t,"input","avgPoolBackprop");v(o.rank===s.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${s.rank})`);let i=o,u=s,l=!1;3===o.rank&&(l=!0,i=We(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=We(s,[1,s.shape[0],s.shape[1],s.shape[2]])),v(4===u.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."),v(4===i.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+i.rank+".");const p={dy:u,input:i},c={filterSize:n,strides:r,pad:a},d=ce.runKernelFunc(e=>{const t=tt(i.shape,n,r,1,a);return e.avgPoolBackprop(u,i,t)},p,null,"AvgPoolBackprop",c);return l?We(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),yt={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:o}=n;return{x:()=>ft(e,r,a,s,o)}}};const gt=ge({matMul_:function(e,t,n=!1,r=!1){let a=fe(e,"a","matMul"),s=fe(t,"b","matMul");[a,s]=ie(a,s),v(a.rank>=2&&s.rank>=2&&a.rank===s.rank,()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${a.rank} and ${s.rank}.`);const o=n?a.shape[a.rank-2]:a.shape[a.rank-1],i=r?s.shape[s.rank-1]:s.shape[s.rank-2],u=n?a.shape[a.rank-1]:a.shape[a.rank-2],l=r?s.shape[s.rank-2]:s.shape[s.rank-1],p=a.shape.slice(0,-2),c=s.shape.slice(0,-2),d=_(p),h=_(c);v(E(p,c),()=>`Error in matMul: outer dimensions (${p}) and (${c}) of Tensors with shapes ${a.shape} and `+s.shape+" must match."),v(o===i,()=>`Error in matMul: inner shapes (${o}) and (${i}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${n} and transposeB=${r} must match.`);const m=a.shape.slice(0,-2).concat([u,l]),f=We(a,n?[d,o,u]:[d,u,o]),y=We(s,r?[h,l,i]:[h,i,l]),g={a:f,b:y},b={transposeA:n,transposeB:r},w=ce.runKernelFunc((e,t)=>(t([f,y]),e.batchMatMul(f,y,n,r)),g,null,"BatchMatMul",b);return We(w,m)}}),bt={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>gt(e,a,!1,!1),b:()=>gt(e,r,!0,!1)}:s&&!o?{a:()=>gt(a,e,!1,!0),b:()=>gt(r,e,!1,!1)}:{a:()=>gt(a,e,!0,!0),b:()=>gt(e,r,!0,!0)}:{a:()=>gt(e,a,!1,!0),b:()=>gt(r,e,!0,!1)}}};const wt=ge({spaceToBatchND_:function(e,t,n){const r=fe(e,"x","spaceToBatchND");v(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),v(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),v(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:r},s={blockShape:t,paddings:n};return ce.runKernelFunc(e=>e.spaceToBatchND(r,t,n),a,null,"SpaceToBatchND",s)}}),xt={kernelName:"BatchToSpaceND",gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>wt(e,r,a)}}},kt={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,o=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])o[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const i=[];for(let e=0;e<o.length;e++)o[e]>1&&i.push(e);return{x:()=>Je(e,i,!0)}}},vt={kernelName:"Cast",gradFunc:e=>({x:()=>e.clone()})},Nt={kernelName:"Ceil",gradFunc:e=>({x:()=>Be(e)})};const St=ge({greaterEqual_:function(e,t){let n=fe(e,"a","greaterEqual"),r=fe(t,"b","greaterEqual");[n,r]=ie(n,r),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.greaterEqual(n,r);return t([n,r]),a},a,null,"GreaterEqual")}});const It=ge({lessEqual_:function(e,t){let n=fe(e,"a","lessEqual"),r=fe(t,"b","lessEqual");[n,r]=ie(n,r),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.lessEqual(n,r);return t([n,r]),a},a,null,"LessEqual")}});const _t=ge({logicalAnd_:function(e,t){const n=fe(e,"a","logicalAnd","bool"),r=fe(t,"b","logicalAnd","bool");Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc(e=>e.logicalAnd(n,r),a,null,"LogicalAnd")}});const Et=ge({where_:function(e,t,n){const r=fe(t,"a","where"),a=fe(n,"b","where"),s=fe(e,"condition","where","bool"),o=Oe(r.shape,a.shape),i=r.broadcastTo(o),u=a.broadcastTo(o);1===s.rank&&v(s.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==s.rank&&N(s.shape,u.shape,"Error in where: ");const l={condition:s,t:i,e:u};return ce.runKernelFunc((e,t)=>{const n=e.select(s,i,u);return t([s]),n},l,null,"SelectV2")}}),Tt={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Et(_t(St(r,a),It(r,s)),e,Be(e))}}};function Dt(e,t,n=0){let r=[];if("number"==typeof t)v(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{v(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}v(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}const Mt=ge({split_:function(e,t,n=0){const r=fe(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return ce.runKernelFunc((e,a)=>{const s=M(n,r.shape)[0],o=Dt(r,t,s);return e.split(r,o,s)},a,null,"SplitV",s)}}),At={kernelName:"Concat",saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=M(a,t[0].shape)[0],o=r.map(e=>e[s]);return Mt(e,o,s).map(e=>()=>e)}};const Ft=ge({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=We(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=We(t,[1,t.shape[0],t.shape[1],t.shape[2]])),v(4===i.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),v(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),v(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const l="NHWC"===s?i.shape[3]:i.shape[1],p="NHWC"===s?u.shape[3]:u.shape[1];v(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),v(p===n[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`),null!=o&&v(T(a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const c={x:i,dy:u},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:o};return ce.runKernelFunc(e=>{const t=dt(s),l=rt(i.shape,n,r,1,a,o,!1,t);return e.conv2dDerFilter(i,u,l)},c,null,"Conv2DBackpropFilter",d)}});const $t=ge({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){v(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=We(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),v(4===i.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."),v(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),v(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const p="NHWC"===s?i[3]:i[1],c="NHWC"===s?u.shape[3]:u.shape[1];v(p===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`),v(c===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`),null!=o&&v(T(a),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const d={dy:u,filter:n},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},m=ce.runKernelFunc((e,t)=>{const l=dt(s),p=rt(i,n.shape,r,1,a,o,!1,l),c=e.conv2dDerInput(u,n,p);return t([u,n]),c},d,null,"Conv2DBackpropInput",h);return l?We(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ot={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:o,pad:i,dataFormat:u}=n;return v(pt(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>$t(r.shape,e,a,o,i,u),filter:()=>Ft(r,e,a.shape,o,i,u)}}};const Ct=ge({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=fe(e,"x","conv2d"),u=fe(t,"filter","conv2d");let l=i,p=!1;3===i.rank&&(p=!0,l=We(i,[1,i.shape[0],i.shape[1],i.shape[2]])),v(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),v(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=o&&v(T(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const c="NHWC"===a?l.shape[3]:l.shape[1];v(c===u.shape[2],()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${u.shape[2]}.`),v(ct(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const d={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},m=ce.runKernelFunc((e,t)=>{const i=dt(a),p=rt(l.shape,u.shape,n,s,r,o,!1,i),c=e.conv2d(l,u,p);return t([l,u]),c},d,null,"Conv2D",h);return p?We(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Rt={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>Ct(e,a,s,o,i,1,u),filter:()=>Ft(e,r,a.shape,s,o,i,u)}}};const Bt=ge({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=We(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=We(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),v(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."),v(5===o.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+o.shape+"."),v(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),v(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),v(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);const i={x:s,y:o},u={strides:r,pad:a};return ce.runKernelFunc(e=>{const t=at(s.shape,n,r,1,a);return e.conv3dDerFilter(s,o,t)},i,null,"Conv3DBackpropFilterV2",u)}});const zt=ge({conv3DBackpropInput_:function(e,t,n,r,a){v(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=We(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=o.shape[4];v(5===s.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+"."),v(5===o.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+o.rank),v(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),v(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),v(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const p={dy:o},c={pad:a},d=ce.runKernelFunc(e=>{const t=at(s,n.shape,r,1,a);return e.conv3dDerInput(o,n,t)},p,null,"Conv3DBackpropInputV2",c);return i?We(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Pt={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;v(pt(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[o,i]=t;return{x:()=>zt(o.shape,e,i,a,s),filter:()=>Bt(o,e,i.shape,a,s)}}};const Lt=ge({sin_:function(e){const t=fe(e,"x","sin"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.sin(t);return n([t]),r},n,null,"Sin")}}),Vt={kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(Se(Lt(be(n,"float32"))),e)}}};const qt=ge({sinh_:function(e){const t=fe(e,"x","sinh"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.sinh(t);return n([t]),r},n,null,"Sinh")}}),Wt={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(qt(be(n,"float32")),e)}}};const Ht=ge({transpose_:function(e,t){const n=fe(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),v(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{v(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return ce.runKernelFunc(e=>e.transpose(n,t),r,null,"Transpose",a)}});const Ut=ge({cumsum_:function(e,t=0,n=!1,r=!1){const a=fe(e,"x","cumsum"),s={x:a},o={axis:t,exclusive:n,reverse:r};return ce.runKernelFunc((e,s)=>{const o=Ke([t],a.rank);let i=a;null!=o&&(i=Ht(a,o));const u=Xe(1,a.rank)[0];let l=e.cumsum(i,u,n,r);if(s([a]),null!=o){const e=Ye(o);l=Ht(l,e)}return l},s,null,"Cumsum",o)}}),jt={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:o}=n;return{x:()=>{const t=Ke([a],r.rank);let n=Ut(e,a,s,!o);return null!=t&&(n=Ht(n,t)),n}}}};const Gt=ge({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r){let a=e;3===e.rank&&(a=We(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let s=t;3===s.rank&&(s=We(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const o={x:a,dy:s};return ce.runKernelFunc(e=>e.depthwiseConv2DDerFilter(a,s,r),o,null,"DepthwiseConv2dNativeBackpropFilter")}});const Kt=ge({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r){let a=t,s=!1;3===t.rank&&(s=!0,a=We(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const o={dy:a},i=ce.runKernelFunc(e=>e.depthwiseConv2DDerInput(a,n,r),o,null,"DepthwiseConv2dNativeBackpropInput");return s?We(i,[i.shape[1],i.shape[2],i.shape[3]]):i}}),Yt={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:o}=n,i=null==r?[1,1]:r;v(pt(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[u,l]=t;v(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),v(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),v(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),v(ct(a,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${i}'.`),null!=o&&v(T(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);const p=rt(u.shape,l.shape,a,i,s,o,!0);return{x:()=>Kt(u.shape,e,l,p),filter:()=>Gt(u,e,l.shape,p)}}},Xt={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},o={x:r,filter:a,dy:e};return{x:()=>ce.runKernel("Dilation2DBackpropInput",s,n),filter:()=>ce.runKernel("Dilation2DBackpropFilter",o,n)}}},Jt={kernelName:"Div",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Oe(n.shape,r.shape);return{a:()=>{const t=Ne(e,r.toFloat()),s=$e(n.shape,a);return s.length>0?Je(t,s).reshape(n.shape):t},b:()=>{let t=we(e,n.toFloat());const s=$e(r.shape,a);s.length>0&&(t=We(Je(t,s),r.shape));const o=Te(r);return Se(Ne(t,o.toFloat()))}}}},Zt={kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r=t=>t.eluDer(e,n),a={dy:e,y:n};return{x:()=>ce.runKernelFunc(r,a,null,"EluGrad")}}};const Qt=ge({exp_:function(e){const t=fe(e,"x","exp"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.exp(t);return n([r]),r},n,null,"Exp")}}),en={kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=we(Qt(Se(Te(n))),2/Math.sqrt(Math.PI));return{x:()=>we(e,r)}}},tn={kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(e,n)}}},nn={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(e,Qt(n))}}},rn={kernelName:"Floor",gradFunc:e=>({x:()=>Be(e)})},an={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Oe(n.shape,r.shape);return{a:()=>{const t=e.div(r.toFloat()),s=$e(n.shape,a);return s.length>0?t.sum(s).reshape(n.shape):t},b:()=>{let t=e.mul(n.toFloat());const s=$e(r.shape,a);s.length>0&&(t=t.sum(s).reshape(r.shape));const o=r.square();return t.div(o.toFloat()).neg()}}}};const sn=ge({rsqrt_:function(e){const t=fe(e,"x","rsqrt"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.rsqrt(t);return n([t]),r},n,null,"Rsqrt")}});const on=ge({tile_:function(e,t){const n=fe(e,"x","tile",null);v(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r=[n],a={x:n},s={reps:t};return ce.runKernelFunc((e,r)=>{const a=e.tile(n,t);return r([n]),a},a,null,"Tile",s,r)}}),un={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,o,i]=t,u=null==i?_e(1):i,l=$e(s.shape,a.shape),p=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)p.push(a.shape[e]);p.push(1)}const c=De(a,s),d=we(e,u),h=sn(Ve(o,_e(r))),m=we(we(we(h,h),h),_e(-.5));return{x:()=>1===s.rank?We(we(we(e,on(h.as4D(1,1,1,s.shape[0]),p)),u),a.shape):We(we(we(e,h),u),a.shape),mean:()=>{let e=we(we(h,_e(-1)),d);return 1===s.rank&&(e=Je(e,l)),We(e,s.shape)},variance:()=>{let e=we(we(m,c),d);return 1===s.rank&&(e=Je(e,l)),We(e,s.shape)},scale:()=>{const t=we(c,h);let n=we(e,t);return 1===s.rank&&(n=Je(n,l)),We(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Je(t,l)),We(t,s.shape)}}}};const ln=ge({unsortedSegmentSum_:function(e,t,n){const r=fe(e,"x","unsortedSegmentSum"),a=fe(t,"segmentIds","unsortedSegmentSum","int32");v(T(n),()=>"numSegments must be of dtype int");const s={x:r,segmentIds:a},o={numSegments:n};return ce.runKernelFunc((e,t)=>{const s=e.unsortedSegmentSum(r,a,n);return t([a]),s},s,null,"UnsortedSegmentSum",o)}}),pn={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,o=M(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,i=t.slice(0,o),u=i.length,l=t.slice(s,t.length).slice(1),p=l.length,c=cn(0,u),d=cn(u+1,u+1+p),h=dn([i,[n],l]),m=We(e,h),f=We(a,[n]),y=dn([[u],c,d]),g=Ht(m,y);let b=ln(g,f,r.shape[o]);const w=Ye(y);return b=Ht(b,w),b},indices:()=>a}}};function cn(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function dn(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const hn={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Be(n),b:()=>Be(r)}}},mn={kernelName:"Identity",gradFunc:e=>({x:()=>e.toFloat()})},fn={kernelName:"IsFinite",gradFunc:e=>({x:()=>Be(e)})},yn={kernelName:"IsInf",gradFunc:e=>({x:()=>Be(e)})},gn={kernelName:"IsNan",gradFunc:e=>({x:()=>Be(e)})},bn={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ne(e,Ve(n,1))}}},wn={kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ne(e,be(n,"float32"))}}},xn={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=r.exp();return e.sub(e.sum(a,!0).mul(t))}}}};const kn=ge({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,o=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:o};return ce.runKernelFunc(i=>i.LRNGrad(n,e,t,r,a,s,o),i,null,"LRNBackprop",u)}}),vn={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:o,alpha:i,beta:u}=n;return{x:()=>kn(r,a,e,s,o,i,u)}}};const Nn=ge({equal_:function(e,t){let n=fe(e,"a","equal"),r=fe(t,"b","equal");[n,r]=ie(n,r),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc(e=>e.equal(n,r),a,null,"Equal")}});function Sn(e,t,n,r,a){return t.rank<n.rank&&(t=We(t,je(t.shape,r))),e.rank<n.rank&&(e=We(e,je(e.shape,r))),{x:()=>{const r=we(e,be(Nn(n,t),e.dtype));return null==a?r:Ht(r,a)}}}const In={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,[s,o]=t,i=M(a,s.shape),u=Ke(i,s.rank),l=Sn(e,o,s,i,u);return{x:()=>{let e=l.x();return null!=u&&(e=Ht(e)),e}}}};const _n=ge({less_:function(e,t){let n=fe(e,"a","less"),r=fe(t,"b","less");[n,r]=ie(n,r),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc(e=>e.less(n,r),a,null,"Less")}}),En={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>we(e,be(St(n,r),"float32")),b:()=>we(e,be(_n(n,r),"float32"))}}};const Tn=ge({maxPool3dBackprop_:function(e,t,n,r,a,s=[1,1,1],o,i){const u=fe(e,"dy","maxPool3dBackprop"),l=fe(t,"input","maxPool3dBackprop"),p=fe(n,"output","maxPool3dBackprop");let c=u,d=l,h=p,m=!1;4===l.rank&&(m=!0,c=We(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=We(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=We(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),v(5===c.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+c.rank+"."),v(5===d.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."),v(5===h.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+h.rank+"."),v(ct(a,s),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),null!=i&&v(T(o),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const f={dy:c,input:d,output:h},y={filterSize:r,strides:a,dilations:s,pad:o,dimRoundingMode:i},g=ce.runKernelFunc(e=>{const t=nt(d.shape,r,a,s,o,i);return e.maxPool3dBackprop(c,d,h,t)},f,null,"MaxPool3DBackprop",y);return m?We(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Dn={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,dilations:i,pad:u,dimRoundingMode:l}=n,p=null==i?[1,1,1]:i;return{x:()=>Tn(e,r,a,s,o,p,u,l)}}};const Mn=ge({maxPoolBackprop_:function(e,t,n,r,a,s,o){const i=fe(e,"dy","maxPoolBackprop"),u=fe(t,"input","maxPoolBackprop"),l=fe(n,"output","maxPoolBackprop");v(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),v(4===i.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+i.rank+"."),v(4===u.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+u.rank+"."),null!=o&&v(T(s),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);const p={dy:i,input:u,output:l},c={filterSize:r,strides:a,pad:s,dimRoundingMode:o};return ce.runKernelFunc(e=>{const t=tt(u.shape,r,a,1,s,o);return e.maxPoolBackprop(i,u,l,t)},p,null,"MaxPoolBackprop",c)}}),An={kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>Mn(e,r,a,s,o,i)}}},Fn={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,o]=t,i=M(a,s.shape),u=Ke(i,s.rank),l=Sn(e,o,s,i,u);return{x:()=>{let e=l.x();return null!=u&&(e=Ht(e)),e}}}};const $n=ge({greater_:function(e,t){let n=fe(e,"a","greater"),r=fe(t,"b","greater");[n,r]=ie(n,r),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc(e=>e.greater(n,r),a,null,"Greater")}}),On={kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>we(e,be(It(n,r),"float32")),b:()=>we(e,be($n(n,r),"float32"))}}};const Cn=ge({floor_:function(e){const t=fe(e,"x","floor"),n={x:t};return ce.runKernelFunc(e=>e.floor(t),n,null,"Floor")}}),Rn={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Oe(n.shape,r.shape);return{a:()=>{const t=$e(n.shape,a);return t.length>0?We(Je(e,t),n.shape):e},b:()=>{const t=we(e,Se(Cn(Ne(n,r)))),s=$e(r.shape,a);return s.length>0?We(Je(t,s),r.shape):t}}}},Bn={kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Oe(n.shape,r.shape);return{a:()=>{const t=we(e,be(r,"float32")),s=$e(n.shape,a);return s.length>0?We(Je(t,s),n.shape):t},b:()=>{const t=we(e,be(n,"float32")),s=$e(r.shape,a);return s.length>0?We(Je(t,s),r.shape):t}}}},zn={kernelName:"Negate",gradFunc:e=>({x:()=>Se(e)})};const Pn=ge({complex_:function(e,t){const n=fe(e,"real","complex"),r=fe(t,"imag","complex");N(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return ce.runKernelFunc(e=>e.complex(n,r),a,null,"Complex")}});function Ln(e,t="float32"){if("complex64"===t){const t=Ln(e,"float32"),n=Ln(e,"float32");return Pn(t,n)}const n=L(_(e),t);return ce.makeTensor(n,e,t)}const Vn={kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Ln(n.shape,"float32")}}},qn={kernelName:"OnesLike",gradFunc:e=>({x:()=>Be(e)})},Wn={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>e.slice(s,r.shape)}}};const Hn=ge({log_:function(e){const t=fe(e,"x","log"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.log(t);return n([t]),r},n,null,"Log")}});const Un=ge({pow_:function(e,t){let n=fe(e,"base","pow"),r=fe(t,"exp","pow");[n,r]=ie(n,r);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.pow(n,r);return t([n,r,a]),a},a,null,"Pow")}}),jn={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,o=r,i=Oe(s.shape,o.shape);return{a:()=>{const t=be(o,"float32");let n=we(e,we(t,Un(s,De(t,_e(1)))));const r=$e(s.shape,i);return r.length>0&&(n=Je(n,r)),We(n,s.shape)},b:()=>{const t=$n(s,0),n=Et(t,Hn(s),Be(s));let r=we(e,we(a,n));const u=$e(o.shape,i);return u.length>0&&(r=Je(r,u)),We(r,o.shape)}}}},Gn={kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=$n(n,0);return{x:()=>Et(a,e,we(e,r)),alpha:()=>{let t=Et(a,Be(e),we(e,n));const s=$e(r.shape,e.shape);return s.length>0&&(t=Je(t,s)),We(t,r.shape)}}}},Kn={kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ne(e,Se(Te(n)))}}},Yn={kernelName:"Relu6",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=we(It(n,6),xe(n));return{x:()=>we(e,be(r,"float32"))}}},Xn={kernelName:"Relu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(e,be(xe(n),"float32"))}}},Jn={kernelName:"Reshape",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>We(e,n.shape)}}},Zn={kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a=t=>{const{alignCorners:a}=n;return t.resizeBilinearBackprop(e,r,a)},s={images:r};return{images:()=>ce.runKernelFunc(a,s,null,"ResizeBilinearGrad",n)}}},Qn={kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a=t=>{const{alignCorners:a}=n;return t.resizeNearestNeighborBackprop(e,r,a)},s={images:r};return{images:()=>ce.runKernelFunc(a,s,null,"ResizeNearestNeighborGrad",n)}}};const er=ge({clone_:function(e){const t=fe(e,"x","clone",null),n={x:t};return ce.runKernelFunc(()=>ce.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n,null,"Identity")}});const tr=ge({reverse_:function(e,t){const n=fe(e,"x","reverse"),r={x:n},a={dims:t};return ce.runKernelFunc(e=>{const r=M(t,n.shape);if(0===n.rank)return er(n);const a=e.reverse(n,r);return We(a,n.shape)},r,null,"Reverse",a)}}),nr={kernelName:"Reverse",gradFunc:(e,t,n)=>{const{dims:r}=n,a=M(r,e.shape);return{x:()=>tr(e,a)}}},rr={kernelName:"Round",gradFunc:e=>({x:()=>Be(e)})},ar={kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Se(Ne(e,we(Un(n,1.5),2)))}}};const sr=ge({logicalNot_:function(e){const t=fe(e,"x","logicalNot","bool"),n={x:t};return ce.runKernelFunc(e=>e.logicalNot(t),n,null,"LogicalNot")}}),or={kernelName:"SelectV2",inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>be(Be(n),"float32"),t:()=>we(e,be(n,e.dtype)),e:()=>we(e,be(sr(n),e.dtype))}}},ir={kernelName:"Selu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=$n(n,_e(0)),r=_e(1.7580993408473768),a=_e(1.0507009873554805),s=we(e,a),o=we(we(e,r),Qt(be(n,"float32")));return Et(t,s,o)}}}},ur={kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(e,we(n,De(_e(1),n)))}}},lr={kernelName:"Sign",gradFunc:e=>({x:()=>Be(e)})};const pr=ge({cos_:function(e){const t=fe(e,"x","cos"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.cos(t);return n([t]),r},n,null,"Cos")}}),cr={kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(pr(be(n,"float32")),e)}}};const dr=ge({cosh_:function(e){const t=fe(e,"x","cosh"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.cosh(t);return n([t]),r},n,null,"Cosh")}}),hr={kernelName:"Sinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(dr(be(n,"float32")),e)}}};const mr=ge({pad_:function(e,t,n=0){const r=fe(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return ce.runKernelFunc((e,a)=>(a([r]),e.pad(r,t,n)),s,null,"PadV2",a)}});function fr(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function yr(e,t,n){return n<=e?n:n-(t-1)}function gr(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function br(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function wr(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=k(0,o,u-1),o}function xr(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?k(0,o,u):k(-1,o,u-1),o}function kr(e,t,n){let r,a;return r="number"==typeof t?[t,...new Array(e.rank-1).fill(0)]:t.length<e.rank?t.concat(new Array(e.rank-t.length).fill(0)):t.slice(),r.forEach(e=>{v(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(e.rank).fill(-1):"number"==typeof n?[n,...new Array(e.rank-1).fill(-1)]:n.length<e.rank?n.concat(new Array(e.rank-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(v(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}const vr={kernelName:"Slice",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,o=r.shape,[i,u]=kr(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([i[t],o[t]-i[t]-u[t]]);return{x:()=>mr(e,l)}}},Nr={kernelName:"Softmax",outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=we(e,r);return{logits:()=>De(s,we(Je(s,[a],!0),r))}}};const Sr=ge({sigmoid_:function(e){const t=fe(e,"x","sigmoid"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.sigmoid(t);return n([r]),r},n,null,"Sigmoid")}}),Ir={kernelName:"Softplus",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(e,Sr(n))}}};const _r=ge({batchToSpaceND_:function(e,t,n){const r=fe(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);v(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),v(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),v(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);const s={x:r},o={blockShape:t,crops:n};return ce.runKernelFunc(e=>e.batchToSpaceND(r,t,n),s,null,"BatchToSpaceND",o)}}),Er={kernelName:"SpaceToBatchND",gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>_r(e,r,a)}}};function Tr(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Dr(e,t,n){return Ie(e,t,he(e,n),n)}const Mr=ge({concat_:function(e,t=0){v(e.length>=1,()=>"Pass at least one tensor to concat");let n=ye(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)});const r=M(t,n[0].shape)[0],a=Tr(n.map(e=>e.shape),r);if(0===_(a))return Dr([],a);if(n=n.filter(e=>e.size>0),1===n.length)return n[0];!function(e,t){const n=e[0].length;e.forEach((e,t)=>{v(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),v(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)v(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}(n.map(e=>e.shape),r);const s=n,o={axis:t};return ce.runKernelFunc((e,t)=>{const a=e.concat(n,r);return t(n),a},s,null,"Concat",o)}}),Ar={kernelName:"SplitV",gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Mr(e,r)}}},Fr={kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ne(e,we(Ee(be(n,"float32")),2))}}},$r={kernelName:"Square",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(e,we(n.toFloat(),2))}}},Or={kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=_e(2);return{a:()=>we(e,we(a,De(n,r))),b:()=>we(e,we(a,De(r,n)))}}},Cr={kernelName:"Step",gradFunc:e=>({x:()=>Be(e)})},Rr={kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Oe(n.shape,r.shape);return{a:()=>{let t=e;const r=$e(n.shape,a);return r.length>0&&(t=Je(t,r)),We(t,n.shape)},b:()=>{let t=e;const n=$e(r.shape,a);return n.length>0&&(t=Je(t,n)),We(Se(t),r.shape)}}}};function Br(e,t="float32"){if("complex64"===t){const t=Br(e,"float32"),n=Ln(e,"float32");return Pn(t,n)}const n=P(_(e),t);return ce.makeTensor(n,e,t)}const zr={kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;M(s,r.shape).forEach(e=>{a[e]=1});const o=We(e,a),i=we(o,Br(r.shape,"float32"));return{x:()=>i}}},Pr={kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ne(e,Te(pr(n)))}}},Lr={kernelName:"Tanh",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>we(De(_e(1),Te(n)),e)}}};const Vr=ge({slice_:function(e,t,n){const r=fe(e,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const[a,s]=kr(r,t,n);!function(e,t,n){v(e.rank===t.length,()=>`Error in slice${e.rank}D: Length of begin ${t} must match the rank of the array (${e.rank}).`),v(e.rank===n.length,()=>`Error in slice${e.rank}D: Length of size ${n} must match the rank of the array (${e.rank}).`);for(let r=0;r<e.rank;++r)v(t[r]+n[r]<=e.shape[r],()=>`Error in slice${e.rank}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}(r,a,s);const o={x:r},i={begin:t,size:n};return ce.runKernelFunc((e,t)=>(t([r]),e.slice(r,a,s)),o,null,"Slice",i)}}),qr={kernelName:"Tile",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Be(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Ve(t,Vr(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Ve(t,Vr(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)t=Ve(t,Vr(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)for(let i=0;i<a[3];++i)t=Ve(t,Vr(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},Wr={kernelName:"Transpose",gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Ye(a);return{x:()=>Ht(e,s)}}};const Hr=ge({expandDims_:function(e,t=0){const n=fe(e,"x","expandDims",null);v(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return t<0&&(v(-(n.rank+1)<=t,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),t=n.rank+t+1),r.splice(t,0,1),We(n,r)}});const Ur=ge({stack_:function(e,t=0){const n=ye(e,"tensors","stack");if(v(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return Hr(n[0],t);const r=n[0].rank,a=n[0].shape,s=n[0].dtype;v(t<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(e=>{N(a,e.shape,"All tensors passed to stack must have matching shapes"),v(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=n.map(e=>Hr(e,t));return Mr(o,t)}}),jr={kernelName:"Unpack",gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Ur(e,a)}}};function Gr(e,t,n){const r=e.shape[n],a=[];let s=1,o=1;for(let t=0;t<n;t++)a.push(e.shape[t]),s*=e.shape[t];for(let e=0;e<t.rank;e++)a.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)a.push(e.shape[t]),o*=e.shape[t];return{batchSize:s,sliceSize:o,dimSize:r,outputShape:a}}const Kr=ge({gather_:function(e,t,n=0){const r=fe(e,"x","gather"),a=fe(t,"indices","gather","int32"),s={x:r,indices:a},o={axis:n};return ce.runKernelFunc((e,t)=>{const s=M(n,r.shape)[0],o=Gr(r,a,s),i=e.gather(r,a.flatten(),s);return t([r,a]),i.reshape(o.outputShape)},s,null,"GatherV2",o)}});const Yr=ge({maximum_:function(e,t){let n=fe(e,"a","maximum"),r=fe(t,"b","maximum");[n,r]=ie(n,r),"bool"===n.dtype&&(n=be(n,"int32"),r=be(r,"int32")),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.maximum(n,r);return t([n,r]),a},a,null,"Maximum")}});const Xr=[ke,Me,Ae,Ce,Re,ze,Pe,Le,qe,Ze,Qe,et,mt,yt,bt,xt,kt,vt,Nt,Tt,At,Rt,Ot,Pt,Vt,Wt,jt,Yt,Xt,Jt,Zt,en,tn,nn,an,rn,un,pn,hn,mn,fn,yn,gn,bn,wn,xn,vn,In,In,En,Dn,An,Fn,On,Rn,Bn,zn,Vn,qn,Wn,Wn,jn,Gn,Kn,Yn,Xn,Jn,Zn,Qn,nr,rr,ar,or,ir,ur,lr,cr,hr,vr,Nr,Ir,Er,Er,Ar,Ar,Fr,Or,$r,Cr,Rr,zr,Pr,Lr,qr,Wr,jr,{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Yr(t,Be(t)),r=Kr(e,n);let a=St(t,_e(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Hr(a,e+1);a=_t(a,Br(r.shape,"bool"));const o=Be(r);return Et(a,r,o)}(e,n)}}},{kernelName:"ZerosLike",gradFunc:e=>({x:()=>Be(e)})}];for(const e of Xr)w(e);class Jr{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}u().get("IS_BROWSER")&&u().setPlatform("browser",new Jr);const Zr=()=>require("node-fetch");let Qr;class ea{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=u().global.fetch?u().global.fetch(e,t):(null==Qr&&(Qr=Zr()),Qr(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}u().get("IS_NODE")&&u().setPlatform("node",new ea);const ta={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};const na="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ra(e){return na?Buffer.byteLength(e):new Blob([e]).size}function aa(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function sa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ra(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ra(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function oa(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class ia{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ia.instance&&(ia.instance=new ia),ia.instance}static registerSaveRouter(e){ia.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ia.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ia.getHandlers(e,"save")}static getLoadHandlers(e,t){return ia.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?ia.getInstance().loadRouters:ia.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}class ua{constructor(){this.managers={}}static getInstance(){return null==ua.instance&&(ua.instance=new ua),ua.instance}static registerManager(e,t){v(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),v(e.length>0,()=>"scheme must not be an empty string.");const n=ua.getInstance();v(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function la(){if(!u().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function pa(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class ca{constructor(e){if(this.indexedDB=la(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>pa(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=sa(t),s=a.transaction("model_info_store","readwrite");let o=s.objectStore("model_info_store");const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction("models_store","readwrite");const i=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore("model_info_store");const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}ca.URL_SCHEME="indexeddb://";const da=e=>{return u().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ca.URL_SCHEME)?(t=e.slice(ca.URL_SCHEME.length),new ca(t)):null;var t};ia.registerSaveRouter(da),ia.registerLoadRouter(da);class ha{constructor(){this.indexedDB=la()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>pa(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),s=a.objectStore("model_info_store").getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(ca.URL_SCHEME)?t.slice(ca.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>pa(r),r.onsuccess=()=>{const a=r.result,s=a.transaction("model_info_store","readwrite"),o=s.objectStore("model_info_store"),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}if(u().getBool("IS_BROWSER"))try{ua.registerManager(ca.URL_SCHEME,new ha)}catch(e){}const ma="tensorflowjs_models",fa="info",ya="model_topology",ga="weight_specs",ba="weight_data",wa="model_metadata";function xa(e){return{info:[ma,e,fa].join("/"),topology:[ma,e,ya].join("/"),weightSpecs:[ma,e,ga].join("/"),weightData:[ma,e,ba].join("/"),modelMetadata:[ma,e,wa].join("/")}}function ka(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class va{constructor(e){if(!u().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=xa(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=sa(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(na)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(na){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}va.URL_SCHEME="localstorage://";const Na=e=>{return u().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(va.URL_SCHEME)?(t=e.slice(va.URL_SCHEME.length),new va(t)):null;var t};ia.registerSaveRouter(Na),ia.registerLoadRouter(Na);class Sa{constructor(){v(u().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),v("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=ma+"/",n="/"+fa;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[ka(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=xa(e=(t=e).startsWith(va.URL_SCHEME)?t.slice(va.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}if(u().getBool("IS_BROWSER"))try{ua.registerManager(va.URL_SCHEME,new Sa)}catch(e){}function Ia(e){return new Promise(e=>setTimeout(e)).then(e)}class _a{constructor(e){if(!u().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(_a.URL_SCHEME)&&(e=e.slice(_a.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await Ia(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ia(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:sa(e)}}}}_a.URL_SCHEME="downloads://";function Ea(e,t,n,r){!function(e){v(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){v(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),v(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),v(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(s=>(s.then(s=>{const o=n+ ++a/e.length*(r-n);return t(o),s}),s)))}ia.registerSaveRouter(e=>u().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_a.URL_SCHEME)?function(e="model"){return new _a(e)}(e.slice(_a.URL_SCHEME.length)):null);class Ta{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null!=t.fetchFunc?(v("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=u().platform.fetch,v(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&v(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:sa(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,o=t.format,i=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}return{modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:i,generatedBy:a,convertedBy:s,format:o}}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const o=[];e.forEach(e=>{e.paths.forEach(e=>{o.push(a+e+r)})});return[s,aa(await async function(e,t){null==t&&(t={});const n=null==t.fetchFunc?u().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await Ea(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await Ea(a,t.onProgress,.5,1)}(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Da(e){return null!=e.match(Ta.URL_SCHEME_REGEX)}Ta.URL_SCHEME_REGEX=/^https?:\/\//;const Ma=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Da(e)):Da(e),n)return Aa(e,t)}return null};function Aa(e,t){return new Ta(e,t)}function Fa(e,t){return Aa(e,t)}ia.registerSaveRouter(Ma),ia.registerLoadRouter(Ma);const $a=ge({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const a=fe(e,"indices","oneHot","int32"),s=[...a.shape,t],o={indices:a},i={depth:t,onValue:n,offValue:r};return ce.runKernelFunc((e,o)=>(o([a]),We(e.oneHot(a.flatten(),t,n,r),s)),o,null,"OneHot",i)}});ge({confusionMatrix_:function(e,t,n){const r=fe(e,"labels","confusionMatrix"),a=fe(t,"predictions","confusionMatrix");v(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),v(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),v(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),v(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),v(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=$a(r.asType("int32"),n),o=$a(a.asType("int32"),n);return s.transpose().matMul(o).asType("int32")}});function Oa(e,t,n){if(S(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=he(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ie(e,t,r,n)}let Ca;const Ra=ge({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=f("FromPixels",ce.backendName)){const n={pixels:e},r={numChannels:t};return ce.runKernel("FromPixels",n,r)}const[i,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,p;if(o?l=e.getContext("2d").getImageData(0,0,i,u).data:r||n?l=e.data:(s||a)&&(null==Ca&&(Ca=document.createElement("canvas").getContext("2d")),Ca.canvas.width=i,Ca.canvas.height=u,Ca.drawImage(e,0,0,i,u),l=Ca.getImageData(0,0,i,u).data),4===t)p=new Int32Array(l);else{const e=i*u;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=l[4*n+e]}return Oa(p,[u,i,t],"int32")}});function Ba(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}!function(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}(n,t,e)}class za{constructor(){this.classNameMap={}}static getMap(){return null==za.instance&&(za.instance=new za),za.instance}static register(e){za.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Pa(e){v(null!=e.className,()=>"Class being registered does not have the static className property defined."),v("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),v(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),za.register(e)}function La(e){u().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Va(e,t){return ce.tidy(e,t)}function qa(e){ue(e).forEach(e=>e.dispose())}function Wa(e){return ce.keep(e)}const Ha=ge({abs_:function(e){const t=fe(e,"x","abs"),n={x:t};return ce.runKernelFunc((e,n)=>(n([t]),"complex64"===t.dtype?e.complexAbs(t):e.abs(t)),n,null,"Abs")}});const Ua=ge({acos_:function(e){const t=fe(e,"x","acos"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.acos(t);return n([t]),r},n,null,"Acos")}});const ja=ge({acosh_:function(e){const t=fe(e,"x","acosh"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.acosh(t);return n([t]),r},n,null,"Acosh")}});const Ga=ge({addN_:function(e){v(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),v(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>fe(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!E(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return ce.runKernelFunc((e,n)=>{const r=e.addN(t);return n(t),r},r,null,"AddN")}});const Ka=ge({all_:function(e,t=null,n=!1){let r=fe(e,"x","all","bool");const a={x:r},s={axis:t,keepDims:n};return ce.runKernelFunc(e=>{const a=M(t,r.shape);let s=a;const o=Ke(s,r.rank);null!=o&&(r=r.transpose(o),s=Xe(s.length,r.rank));const i=e.all(r,s);if(n){const e=je(i.shape,a);return i.reshape(e)}return i},a,null,"All",s)}});const Ya=ge({any_:function(e,t=null,n=!1){let r=fe(e,"x","any","bool");const a={x:r},s={axis:t,keepDims:n};return ce.runKernelFunc(e=>{const a=M(t,r.shape);let s=a;const o=Ke(s,r.rank);null!=o&&(r=r.transpose(o),s=Xe(s.length,r.rank));const i=e.any(r,s);if(n){const e=je(i.shape,a);return i.reshape(e)}return i},a,null,"Any",s)}});const Xa=ge({argMax_:function(e,t=0){let n=fe(e,"x","argMax");const r={x:n},a={axis:t};return ce.runKernelFunc((e,r)=>{r([n]);let a=M(t,n.shape);const s=Ke(a,n.rank);return null!=s&&(n=n.transpose(s),a=Xe(a.length,n.rank)),e.argMax(n,a[0])},r,null,"ArgMax",a)}});const Ja=ge({argMin_:function(e,t=0){let n=fe(e,"x","argMin");const r={x:n},a={axis:t};return ce.runKernelFunc((e,r)=>{r([n]),null==t&&(t=0);let a=M(t,n.shape);const s=Ke(a,n.rank);return null!=s&&(n=n.transpose(s),a=Xe(a.length,n.rank)),e.argMin(n,a[0])},r,null,"ArgMin",a)}});const Za=ge({asin_:function(e){const t=fe(e,"x","asin"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.asin(t);return n([t]),r},n,null,"Asin")}});const Qa=ge({asinh_:function(e){const t=fe(e,"x","asinh"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.asinh(t);return n([t]),r},n,null,"Asinh")}});const es=ge({atan_:function(e){const t=fe(e,"x","atan"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.atan(t);return n([t]),r},n,null,"Atan")}});const ts=ge({atan2_:function(e,t){let n=fe(e,"a","atan2"),r=fe(t,"b","atan2");[n,r]=ie(n,r);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.atan2(n,r);return t([n,r]),a},a,null,"Atan2")}});const ns=ge({atanh_:function(e){const t=fe(e,"x","atanh"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.atanh(t);return n([t]),r},n,null,"Atanh")}});const rs=ge({avgPool_:function(e,t,n,r,a){const s=fe(e,"x","avgPool","float32");v(ct(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let o=s,i=!1;3===s.rank&&(i=!0,o=We(s,[1,s.shape[0],s.shape[1],s.shape[2]])),v(4===o.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),null!=a&&v(T(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let p=ce.runKernelFunc((e,s)=>{const i=tt(o.shape,t,n,1,r,a);return s([o]),1===i.filterWidth&&1===i.filterHeight&&E(i.inShape,i.outShape)?o.clone():e.avgPool(o,i)},u,null,"AvgPool",l);return p=be(p,s.dtype),i?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}});const as=ge({avgPool3d_:function(e,t,n,r,a,s="NDHWC",o){null==o?o=[1,1,1]:La("dilations is deprecated, this field will be gone in v3.0.0.");const i=fe(e,"x","avgPool3d","float32");let u=i,l=!1;4===i.rank&&(l=!0,u=We(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),v(5===u.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`),v("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),v(ct(n,o),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=a&&v(T(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const p={x:u},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s,dilations:o};let d=ce.runKernelFunc((e,i)=>{null==o&&(o=[1,1,1]);const l=nt(u.shape,t,n,o,r,a,s);return i([u]),e.avgPool3d(u,l)},p,null,"AvgPool3D",c);return d=be(d,u.dtype),l?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}});const ss=ge({tanh_:function(e){const t=fe(e,"x","tanh"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.tanh(t);return n([r]),r},n,null,"Tanh")}});const os=ge({basicLSTMCell_:function(e,t,n,r,a,s){const o=fe(e,"forgetBias","basicLSTMCell"),i=fe(t,"lstmKernel","basicLSTMCell"),u=fe(n,"lstmBias","basicLSTMCell"),l=fe(r,"data","basicLSTMCell"),p=fe(a,"c","basicLSTMCell"),c=fe(s,"h","basicLSTMCell"),d=Mr([l,c],1),h=gt(d,i),m=Ve(h,u),f=m.shape[0],y=m.shape[1]/4,g=[f,y],b=Vr(m,[0,0],g),w=Vr(m,[0,y],g),x=Vr(m,[0,2*y],g),k=Vr(m,[0,3*y],g),v=Ve(we(Sr(b),ss(w)),we(p,Sr(Ve(o,x))));return[v,we(ss(v),Sr(k))]}});function is(e){return null==e?null:0===e.rank?e.as1D():1===e.rank?e:2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}const us=ge({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const o=fe(e,"x","batchNorm"),i=fe(t,"mean","batchNorm"),u=fe(n,"variance","batchNorm");let l,p;null!=a&&(l=fe(a,"scale","batchNorm")),null!=r&&(p=fe(r,"offset","batchNorm")),v(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v(null==p||i.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v(null==l||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const c=function(e){let t;return t=0===e.rank||1===e.rank?e.as4D(1,1,1,e.size):2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e,t}(o),d={x:c,scale:l,offset:p,mean:i,variance:u},h={varianceEpsilon:s},m=ce.runKernelFunc((e,t)=>(t([c,i,u,l]),e.batchNorm(c,is(i),is(u),is(p),is(l),s)),d,null,"FusedBatchNorm",h);return We(m,o.shape)}});const ls=ge({batchNorm2d_:function(e,t,n,r,a,s){const o=fe(e,"x","batchNorm"),i=fe(t,"mean","batchNorm"),u=fe(n,"variance","batchNorm");let l,p;return null!=a&&(l=fe(a,"scale","batchNorm")),null!=r&&(p=fe(r,"offset","batchNorm")),v(2===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+o.rank+"."),v(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),v(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&v(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=p&&v(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),us(o,i,u,p,l,s)}});const ps=ge({batchNorm3d_:function(e,t,n,r,a,s){const o=fe(e,"x","batchNorm"),i=fe(t,"mean","batchNorm"),u=fe(n,"variance","batchNorm");let l,p;return null!=a&&(l=fe(a,"scale","batchNorm")),null!=r&&(p=fe(r,"offset","batchNorm")),v(3===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+o.rank+"."),v(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),v(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&v(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=p&&v(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),us(o,i,u,p,l,s)}});const cs=ge({batchNorm4d_:function(e,t,n,r,a,s){const o=fe(e,"x","batchNorm"),i=fe(t,"mean","batchNorm"),u=fe(n,"variance","batchNorm");let l,p;return null!=a&&(l=fe(a,"scale","batchNorm")),null!=r&&(p=fe(r,"offset","batchNorm")),v(4===o.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+o.rank+"."),v(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),v(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&v(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=p&&v(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),us(o,i,u,p,l,s)}});const ds=ge({broadcastTo_:function(e,t){let n=fe(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=We(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return er(n);const o={x:n},i={shape:t,inputShape:a};return ce.runKernelFunc(e=>e.tile(n,s),o,null,"BroadcastTo",i)}});function hs(e,t="float32",n){return t=t||"float32",q(e),new X(e,t,n)}const ms=ge({ceil_:function(e){const t=fe(e,"x","ceil"),n={x:t};return ce.runKernelFunc(e=>e.ceil(t),n,null,"Ceil")}});const fs=ge({clipByValue_:function(e,t,n){const r=fe(e,"x","clipByValue");v(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const a={x:r},s={clipValueMin:t,clipValueMax:n};return ce.runKernelFunc((e,a)=>{const s=e.clip(r,t,n);return a([r]),s},a,null,"ClipByValue",s)}});const ys=ge({concat1d_:function(e){return Mr(e,0)}});const gs=ge({concat2d_:function(e,t){return Mr(e,t)}});const bs=ge({concat3d_:function(e,t){return Mr(e,t)}});const ws=ge({concat4d_:function(e,t){return Mr(e,t)}});const xs=ge({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const i=fe(e,"x","conv1d"),u=fe(t,"filter","conv1d");let l=i,p=!1;2===i.rank&&(p=!0,l=We(i,[1,i.shape[0],i.shape[1]])),v(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),v(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=o&&v(T(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),v(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),v(ct(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),v("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const c=We(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=We(l,[l.shape[0],1,l.shape[1],l.shape[2]]),h=Ct(d,c,[1,n],r,"NHWC",[1,s],o);return We(h,p?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}});const ks=ge({conv2dTranspose_:function(e,t,n,r,a,s){const o=fe(e,"x","conv2dTranspose"),i=fe(t,"filter","conv2dTranspose");return $t(n,o,i,r,a,"NHWC",s)}});const vs=ge({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=fe(e,"x","conv3d"),i=fe(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=We(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),v(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),v(5===i.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+i.rank+"."),v(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),v(ct(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),v("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);const p={x:u,filter:i},c={strides:n,pad:r,dataFormat:a,dilations:s},d=ce.runKernelFunc((e,t)=>{const a=at(u.shape,i.shape,n,s,r),o=e.conv3d(u,i,a);return t([u,i]),o},p,null,"Conv3D",c);return l?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}});const Ns=ge({conv3dTranspose_:function(e,t,n,r,a){const s=fe(e,"x","conv3dTranspose"),o=fe(t,"filter","conv3dTranspose");return zt(n,s,o,r,a)}});const Ss=ge({depthToSpace_:function(e,t,n="NHWC"){const r=fe(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];v(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),v(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),v(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:t,dataFormat:n};return ce.runKernelFunc(e=>e.depthToSpace(r,t,n),i,null,"DepthToSpace",u)}});const Is=ge({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=fe(e,"x","depthwiseConv2d"),u=fe(t,"filter","depthwiseConv2d");let l=i,p=!1;3===i.rank&&(p=!0,l=We(i,[1,i.shape[0],i.shape[1],i.shape[2]])),v(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),v(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),v(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=o&&v(T(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const c={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},h=ce.runKernelFunc((e,t)=>{null==s&&(s=[1,1]),v(ct(n,s),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const a=rt(l.shape,u.shape,n,s,r,o,!0),i=e.depthwiseConv2D(l,u,a);return t([l,u]),i},c,null,"DepthwiseConv2dNative",d);return p?We(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const _s=ge({diag_:function(e){const t=fe(e,"x","diag").flatten(),n={x:t};return ce.runKernelFunc(n=>{const r=n.diag(t),a=[...e.shape,...e.shape];return We(r,a)},n,null,"Diag")}});const Es=ge({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const o=fe(e,"x","dilation2d"),i=fe(t,"filter","dilation2d");v(3===o.rank||4===o.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+o.rank+"."),v(3===i.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+i.rank+"."),v("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let u=o,l=!1;3===o.rank&&(u=We(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const p={x:u,filter:i},c={strides:n,pad:r,dilations:a},d=ce.runKernel("Dilation2D",p,c);return l?We(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Ts=ge({divNoNan_:function(e,t){let n=fe(e,"a","div"),r=fe(t,"b","div");[n,r]=ie(n,r);const a=Ne(n,r),s=Be(a),o=r.equal(s);return Et(o,s,a)}});const Ds=ge({dot_:function(e,t){const n=fe(e,"t1","dot"),r=fe(t,"t2","dot");v(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(v(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){const e=We(n,[1,-1]),t=We(r,[-1,1]),a=gt(e,t);return We(a,[])}if(1===n.rank&&2===r.rank){const e=We(n,[1,-1]),t=We(r,[r.shape[0],r.shape[1]]),a=gt(e,t);return We(a,[a.size])}if(2===n.rank&&1===r.rank){const e=We(r,[-1,1]),t=gt(n,e);return We(t,[t.size])}{const e=We(r,[r.shape[0],r.shape[1]]);return gt(n,e)}}});const Ms=ge({elu_:function(e){const t=fe(e,"x","elu"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.elu(t);return n([r]),r},n,null,"Elu")}});const As=ge({erf_:function(e){let t=fe(e,"x","erf");v("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=t.toFloat());const n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.erf(t);return n([t]),r},n,null,"Erf")}});const Fs=ge({expm1_:function(e){const t=fe(e,"x","expm1"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.expm1(t);return n([t]),r},n,null,"Expm1")}});const $s=ge({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=hs([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const o=a.toTensor().as2D(e,t);if(null==n)return o;if(1===n.length)return on(Hr(o,0),[n[0],1,1]);if(2===n.length)return on(Hr(Hr(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return on(Hr(Hr(Hr(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Os=ge({fft_:function(e){v("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ce.runKernelFunc(t=>{const n=e.shape[e.shape.length-1],r=e.size/n,a=e.as2D(r,n);return t.fft(a).reshape(e.shape)},t,null,"FFT")}});function Cs(e,t,n){const r={shape:e,value:t,dtype:n};return ce.runKernelFunc(r=>r.fill(e,t,n),{},null,"Fill",r)}const Rs=ge({ifft_:function(e){v("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ce.runKernelFunc(t=>{const n=e.shape[e.shape.length-1],r=e.size/n,a=e.as2D(r,n);return t.ifft(a).reshape(e.shape)},t,null,"IFFT")}});const Bs=ge({imag_:function(e){const t=fe(e,"input","imag"),n={input:t};return ce.runKernelFunc(e=>e.imag(t),n,null,"Imag")}});const zs=ge({real_:function(e){const t=fe(e,"input","real"),n={input:t};return ce.runKernelFunc(e=>e.real(t),n,null,"Real")}});const Ps=ge({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=We(e,[n,t]);r=Rs(a)}else{const a=[n,2*(t-1)],s=We(zs(e),[n,t]),o=We(Bs(e),[n,t]),i=tr(Vr(s,[0,1],[n,t-2]),1),u=we(tr(Vr(o,[0,1],[n,t-2]),1),_e(-1)),l=Mr([s,i],1),p=Mr([o,u],1),c=We(Pn(l,p),[a[0],a[1]]);r=Rs(c)}if(r=zs(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=We(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const Ls=ge({isFinite_:function(e){const t=fe(e,"x","isFinite"),n={x:t};return ce.runKernelFunc(e=>e.isFinite(t),n,null,"IsFinite")}});const Vs=ge({isInf_:function(e){const t=fe(e,"x","isInf"),n={x:t};return ce.runKernelFunc(e=>e.isInf(t),n,null,"IsInf")}});const qs=ge({isNaN_:function(e){const t=fe(e,"x","isNaN"),n={x:t};return ce.runKernelFunc(e=>e.isNaN(t),n,null,"IsNan")}});const Ws=ge({leakyRelu_:function(e,t=.2){const n=fe(e,"x","leakyRelu");return Yr(we(_e(t),n),n)}});function Hs(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ce.runKernelFunc(r=>r.linspace(e,t,n),{},null,"LinSpace",r)}const Us=ge({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=fe(e,"x","localResponseNormalization");v(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),v(T(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=s,i=!1;3===s.rank&&(i=!0,o=We(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:a},p=ce.runKernelFunc((e,s)=>{const i=e.localResponseNormalization4D(o,t,n,r,a);return s([o,i]),i},u,null,"LRN",l);return i?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}});const js=ge({log1p_:function(e){const t=fe(e,"x","log1p"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.log1p(t);return n([t]),r},n,null,"Log1p")}});function Gs(e){return ce.customGrad(e)}const Ks=ge({logSigmoid_:function(e){const t=fe(e,"x","logSigmoid");return Gs(e=>({value:Se(Se(e).softplus()),gradFunc:t=>we(t,Sr(Se(e)))}))(t)}});const Ys=ge({max_:function(e,t=null,n=!1){const r=fe(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return ce.runKernelFunc((e,a)=>{let s=M(t,r.shape);const o=Ke(s,r.rank);let i=r;null!=o&&(i=Ht(r,o),s=Xe(s.length,i.rank));const u=e.max(i,s);null!=o&&i.dispose();let l=u;if(n){const e=je(l.shape,M(t,r.shape));l=We(l,e),u.dispose()}return a([r,l]),l},a,null,"Max",s)}});const Xs=ge({logSoftmax_:function(e,t=-1){const n=fe(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r={logits:n},a={axis:t};return ce.runKernelFunc((n,r)=>{const a=Ys(e,t,!0),s=De(e,a),o=s.toFloat().sub(s.exp().sum(t,!0).log());return r([o]),o},r,null,"LogSoftmax",a)}});const Js=ge({logSumExp_:function(e,t=null,n=!1){const r=fe(e,"x","logSumExp"),a=M(t,r.shape),s=Ys(r,a,!0),o=De(r,s),i=Qt(o),u=Je(i,a),l=Hn(u),p=Ve(We(s,l.shape),l);if(n){const e=je(p.shape,a);return We(p,e)}return p}});const Zs=ge({logicalOr_:function(e,t){const n=fe(e,"a","logicalOr","bool"),r=fe(t,"b","logicalOr","bool");Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc(e=>e.logicalOr(n,r),a,null,"LogicalOr")}});const Qs=ge({logicalXor_:function(e,t){const n=fe(e,"a","logicalXor","bool"),r=fe(t,"b","logicalXor","bool");return Oe(n.shape,r.shape),_t(Zs(e,t),sr(_t(e,t)))}});const eo=ge({maxPool_:function(e,t,n,r,a){const s=fe(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=We(s,[1,s.shape[0],s.shape[1],s.shape[2]])),v(4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),v(ct(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=a&&v(T(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=ce.runKernelFunc((e,s)=>{const i=tt(o.shape,t,n,1,r,a);let u;return u=1===i.filterWidth&&1===i.filterHeight&&E(i.inShape,i.outShape)?o.clone():e.maxPool(o,i),s([o,u]),u},u,null,"MaxPool",l);return i?We(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const to=ge({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC",o){null==o?o=[1,1,1]:La("dilations is deprecated, this field will be gone in v3.0.0.");const i=fe(e,"x","maxPool3d");let u=i,l=!1;4===i.rank&&(l=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),v(5===u.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`),v("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),v(ct(n,o),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=a&&v(T(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const p={x:u},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s,dilations:o},d=ce.runKernelFunc((e,i)=>{null==o&&(o=[1,1,1]);const l=nt(u.shape,t,n,o,r,a,s),p=e.maxPool3d(u,l);return i([u,p]),p},p,null,"MaxPool3D",c);return l?We(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const no=ge({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:fe(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=ce.runKernel("MaxPoolWithArgmax",s,o);return{result:i[0],indexes:i[1]}}});const ro=ge({mean_:function(e,t=null,n=!1){const r=fe(e,"x","mean"),a=M(t,r.shape),s=_(Ue(r.shape,a)[1]);return Gs(e=>{const r=_e(s),o=r.dtype===e.dtype?e:be(e,r.dtype),i=Ne(o,r);return{value:Je(i,t,n),gradFunc:t=>{const n=e.shape.slice();a.forEach(e=>{n[e]=1});const r=We(t,n);return Ne(we(r,Br(e.shape,"float32")),s)}}})(r)}});const ao=ge({min_:function(e,t=null,n=!1){const r=fe(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return ce.runKernelFunc((e,a)=>{const s=M(t,r.shape);let o=s;const i=Ke(o,r.rank);let u=r;null!=i&&(u=Ht(r,i),o=Xe(o.length,r.rank));const l=e.min(u,o);null!=i&&u.dispose();let p=l;if(n){const e=je(p.shape,s);p=We(l,e),l.dispose()}return a([r,p]),p},a,null,"Min",s)}});const so=ge({minimum_:function(e,t){let n=fe(e,"a","minimum"),r=fe(t,"b","minimum");[n,r]=ie(n,r),"bool"===n.dtype&&(n=be(n,"int32"),r=be(r,"int32")),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.minimum(n,r);return t([n,r]),a},a,null,"Minimum")}});const oo=ge({mod_:function(e,t){let n=fe(e,"a","mod"),r=fe(t,"b","mod");[n,r]=ie(n,r);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.mod(n,r);return t([n,r]),a},a,null,"Mod")}});const io=ge({moments_:function(e,t=null,n=!1){const r=M(t,(e=fe(e,"x","moments")).shape),a=ro(e,r,n);let s=a.shape;n||(s=je(a.shape,r));const o=Te(De(be(e,"float32"),We(a,s)));return{mean:a,variance:ro(o,r,n)}}});const uo=ge({multiRNNCell_:function(e,t,n,r){const a=fe(t,"data","multiRNNCell"),s=ye(n,"c","multiRNNCell"),o=ye(r,"h","multiRNNCell");let i=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,s[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],p=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),p.push(u[e+1]);return[l,p]}});const lo=ge({multinomial_:function(e,t,n,r=!1){const a=fe(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+s+".");if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+o);n=n||Math.random();const i=1===o?a.as2D(1,-1):a,u=ce.runKernelFunc(e=>e.multinomial(i,r,t,n),{logits2D:i});return 1===o?u.as1D():u}});const po=ge({notEqual_:function(e,t){let n=fe(e,"a","notEqual"),r=fe(t,"b","notEqual");[n,r]=ie(n,r),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc(e=>e.notEqual(n,r),a,null,"NotEqual")}});const co=ge({onesLike_:function(e){const t=fe(e,"x","onesLike"),n={x:t};return ce.runKernelFunc((e,n)=>{if("complex64"===t.dtype){const e=co(zs(t)),n=Be(Bs(t));return Pn(e,n)}return e.onesLike(t)},n,null,"OnesLike")}});const ho=ge({outerProduct_:function(e,t){const n=fe(e,"v1","outerProduct"),r=fe(t,"v2","outerProduct");v(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=We(n,[-1,1]),s=We(r,[1,-1]);return gt(a,s)}});const mo=ge({pad1d_:function(e,t,n=0){return v(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),mr(e,[t],n)}});const fo=ge({pad2d_:function(e,t,n=0){return v(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),mr(e,t,n)}});const yo=ge({pad3d_:function(e,t,n=0){return v(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),mr(e,t,n)}});const go=ge({pad4d_:function(e,t,n=0){return v(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),mr(e,t,n)}});const bo=ge({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=fe(e,"x","maxPool");let i=o,u=!1;3===o.rank&&(u=!0,i=We(o,[1,o.shape[0],o.shape[1],o.shape[2]])),v(ct(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);const l=tt(i.shape,t,s,a,r),p=[l.dilationHeight,l.dilationWidth];let c;c="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([l.filterHeight,l.filterWidth],p):[[0,0],[0,0]];const d=1===p[0]&&1===p[1],[h,m]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),o=t.map((e,t)=>(e-s[t]%e)%e),i=a.map((e,t)=>e+o[t]),u=t.map((e,t)=>[r[t],i[t]]),l=t.map((e,t)=>[0,o[t]]);return[u,l]}([l.inHeight,l.inWidth],p,c),f=d?r:"valid",y=d?i:wt(i,p,h),g=("avg"===n?()=>rs(y,t,s,f):()=>eo(y,t,s,f))(),b=d?g:_r(g,p,m);return u?We(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const wo=ge({prelu_:function(e,t){const n=fe(e,"x","prelu"),r=fe(t,"alpha","prelu"),a={x:n,alpha:r};return ce.runKernelFunc((e,t)=>{const a=e.prelu(n,r);return t([n,r]),a},a,null,"Prelu")}});const xo=ge({prod_:function(e,t=null,n=!1){let r=fe(e,"x","prod");const a={x:r},s={axis:t,keepDims:n};return ce.runKernelFunc(e=>{"bool"===r.dtype&&(r=r.toInt());const a=M(t,r.shape),s=Ke(a,r.rank);let o=a,i=r;null!=s&&(i=r.transpose(s),o=Xe(o.length,r.rank));let u=e.prod(i,o);if(n){const e=je(u.shape,a);u=u.reshape(e)}return u},a,null,"Prod",s)}});const ko=ge({rand_:function(e,t,n){const r=_(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ce.makeTensor(a,e,n)}});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function vo(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var No=vo((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,s&&("object"==typeof s&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,e,!1)})),So=vo((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&("object"==typeof s&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,e,!1)})),Io=vo((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&("object"==typeof s&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,e,!1)})),_o=vo((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&(s.x&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,e,!1)})),Eo=vo((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&(s.X&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,e,!1)})),To=vo((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&("object"==typeof s&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,e,!1)})),Do=vo((function(e){!function(t,n){var r,s=this,o=n.pow(256,6),i=n.pow(2,52),u=2*i;function l(e,a,l){var m=[],f=d(function e(t,n){var r,a=[],s=typeof t;if(n&&"object"==s)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==s?t:t+"\0"}((a=1==a?{entropy:!0}:a||{}).entropy?[e,h(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(256):(e=new Uint8Array(256),(s.crypto||s.msCrypto).getRandomValues(e)),h(e)}catch(e){var n=s.navigator,a=n&&n.plugins;return[+new Date,s,a,s.screen,h(t)]}}():e,3),m),y=new p(m),g=function(){for(var e=y.g(6),t=o,n=0;e<i;)e=256*(e+n),t*=256,n=y.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return g.int32=function(){return 0|y.g(4)},g.quick=function(){return y.g(4)/4294967296},g.double=g,d(h(y.S),t),(a.pass||l||function(e,t,r,a){return a&&(a.S&&c(a,y),e.state=function(){return c(y,{})}),r?(n.random=e,t):e})(g,f,"global"in a?a.global:this==n,a.state)}function p(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<256;)o[a]=a++;for(a=0;a<256;a++)o[a]=o[s=255&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=255&a+1],n=256*n+o[255&(o[a]=o[s=255&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(256)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function d(e,t){for(var n,r=e+"",a=0;a<r.length;)t[255&a]=255&(n^=19*t[255&a])+r.charCodeAt(a++);return h(t)}function h(e){return String.fromCharCode.apply(0,e)}if(n.seedrandom=l,d(n.random(),t),e.exports){e.exports=l;try{r=a.default}catch(e){}}}([],Math)}));Do.alea=No,Do.xor128=So,Do.xorwow=Io,Do.xorshift7=_o,Do.xor4096=Eo,Do.tychei=To;var Mo=Do;class Ao{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Mo.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Fo{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Mo.alea(a.toString()),this.randn=new Ao(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class $o{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Mo.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Oo=ge({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new Fo(t,n,r,a),o=hs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});const Co=ge({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new Ao(t,n,r,!1,a),o=hs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});const Ro=ge({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=hs(e,r),o=new $o(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});function Bo(e,t){S(e);const n=he(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ie(e,null,n,t)}function zo(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return ce.runKernelFunc(()=>{if(e===t||e<t&&n<0||t<e&&n>1)return Ln([0],r);const a=L(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return Bo(a,r)},{},null,"Range",a)}const Po=ge({reciprocal_:function(e){const t=fe(e,"x","reciprocal"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.reciprocal(t);return n([t]),r},n,null,"Reciprocal")}});const Lo=ge({relu_:function(e){const t=fe(e,"x","relu"),n={x:t};return ce.runKernelFunc((e,n)=>(n([t]),"bool"===t.dtype?t.toInt():e.relu(t)),n,null,"Relu")}});const Vo=ge({relu6_:function(e){const t=fe(e,"x","relu6"),n={x:t};return ce.runKernelFunc((e,n)=>(n([t]),"bool"===t.dtype?be(t,"int32"):e.relu6(t)),n,null,"Relu6")}});const qo=ge({reverse1d_:function(e){const t=fe(e,"x","reverse");return v(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),tr(t,0)}});const Wo=ge({reverse2d_:function(e,t){const n=fe(e,"x","reverse");return v(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),tr(n,t)}});const Ho=ge({reverse3d_:function(e,t){const n=fe(e,"x","reverse");return v(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),tr(n,t)}});const Uo=ge({reverse4d_:function(e,t){const n=fe(e,"x","reverse");return v(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),tr(n,t)}});const jo=ge({rfft_:function(e,t){v("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,a=Vr(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=Mr([e,Ln(r)],e.shape.length-1),n=t}else a=e;const s=Be(a),o=We(Pn(a,s),[r,n]),i=Os(o),u=Math.floor(n/2)+1,l=zs(i),p=Bs(i),c=Mt(l,[u,n-u],l.shape.length-1),d=Mt(p,[u,n-u],p.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,We(Pn(c[0],d[0]),h)}});const Go=ge({round_:function(e){const t=fe(e,"x","round"),n={x:t};return ce.runKernelFunc(e=>e.round(t),n,null,"Round")}});const Ko=ge({selu_:function(e){const t=fe(e,"x","selu"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.selu(t);return n([t]),r},n,null,"Selu")}});const Yo=ge({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const i=fe(e,"x","separableConv2d"),u=fe(t,"depthwiseFilter","separableConv2d"),l=fe(n,"pointwiseFilter","separableConv2d");let p=i,c=!1;if(3===i.rank&&(c=!0,p=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");v(4===p.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),v(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),v(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),v(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),v(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],h=u.shape[3];v(l.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${l.shape[2]}.`);const m=Is(p,u,r,a,o,s),f=Ct(m,l,1,"valid",o);return c?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}});const Xo=async function(e,t){const n=fe(e,"x","setdiff1d"),r=fe(t,"y","setdiff1d");v(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),v(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),v(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new X([i],n.dtype),l=new X([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]};const Jo=ge({sign_:function(e){const t=fe(e,"x","sign"),n={x:t};return ce.runKernelFunc(e=>e.sign(t),n,null,"Sign")}});const Zo=ge({slice1d_:function(e,t,n){const r=fe(e,"x","slice1d");return v(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Vr(r,[t],[n])}});const Qo=ge({slice2d_:function(e,t,n){const r=fe(e,"x","slice2d");return v(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Vr(r,t,n)}});const ei=ge({slice3d_:function(e,t,n){const r=fe(e,"x","slice3d");return v(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Vr(r,t,n)}});const ti=ge({slice4d_:function(e,t,n){const r=fe(e,"x","slice4d");return v(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Vr(r,t,n)}});const ni=ge({softmax_:function(e,t=-1){const n=fe(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return ce.runKernelFunc((e,r)=>{const a=e.softmax(n,t);return r([a]),a},r,null,"Softmax",a)}});const ri=ge({softplus_:function(e){const t=fe(e,"x","softplus"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.softplus(t);return n([t]),r},n,null,"Softplus")}});const ai=ge({squaredDifference_:function(e,t){let n=fe(e,"a","squaredDifference"),r=fe(t,"b","squaredDifference");[n,r]=ie(n,r),Oe(n.shape,r.shape);const a={a:n,b:r};return ce.runKernelFunc((e,t)=>{const a=e.squaredDifference(n,r);return t([n,r]),a},a,null,"SquaredDifference",{})}});const si=ge({squeeze_:function(e,t){const n=fe(e,"x","squeeze");return We(n,function(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:M(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}});const oi=ge({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){null==r&&(r=new Array(t.length));let l=fe(e,"x","stridedSlice");const p={x:l},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return ce.runKernelFunc(e=>{const p=fr(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const c=l.rank-t.length,d=fr(i),h=l.shape.slice();if(d.forEach(e=>{t[e]=0,n[e]=1,h.splice(e,0,1)}),l=We(l,h),p.length&&c>0){const e=p[0],o=c+1;t=function(e,t,n,r,a){const s=[...a],o=gr(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=yr(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}(a,e,o,t,l.shape),n=function(e,t,n,r,a){const s=[...a],o=gr(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=yr(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=k(0,s[e],a[e])}return s}(s,e,o,n,l.shape),r=function(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}(r,e,o,l.shape)}else for(let e=0;e<l.rank;e++)t[e]=wr(a,t,r,l.shape,e,o),n[e]=xr(s,n,r,l.shape,e,o),r[e]=br(r,e,o);const m=fr(u);m.forEach(e=>{n[e]=t[e]+1,r[e]=1});const f=function(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}(t,n,r),y=f.filter((e,t)=>-1===m.indexOf(t));if(r.every(e=>1===e))return We(Vr(l,t,f),y);return e.stridedSlice(l,t,n,r).reshape(y)},p,null,"StridedSlice",c)}});const ii=ge({tan_:function(e){const t=fe(e,"x","tan"),n={x:t};return ce.runKernelFunc((e,n)=>{const r=e.tan(t);return n([t]),r},n,null,"Tan")}});function ui(e,t,n){if(S(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=he(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ie(e,t,r,n)}const li=ge({topk_:function(e,t=1,n=!0){const r=fe(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got `+t);const s={x:r},o={k:t,sorted:n},[i,u]=ce.runKernelFunc(e=>e.topk(r,t,n),s,null,"TopK",o);return{values:i,indices:u}}});const pi=ge({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Ao(t,n,r,!0,a),o=hs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});const ci=ge({unstack_:function(e,t=0){const n=fe(e,"x","unstack");v(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),t<0&&(t+=n.shape.length);const r={value:n},a={axis:t};return ce.runKernelFunc(e=>e.unstack(n,t),r,null,"Unpack",a)}});const di=async function(e){const t=fe(e,"condition","whereAsync","bool"),n=await t.data(),r=function(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=hs(e,"int32"),a=hs([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),o=t*e.length;a.values.set(s,o)}return a.toTensor()}(t.shape,n);return e!==t&&t.dispose(),r};const hi=async function(e,t,n){const r=fe(e,"tensor","boolMask"),a=fe(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;v(o>0,()=>"mask cannot be scalar"),N(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+o;e++)u*=i[e];const l=i.slice(0,s).concat([u],i.slice(s+o)),p=r.reshape(l),c=a.reshape([-1]),d=await di(c),h=d.squeeze([1]),m=Kr(p,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),p.dispose(),c.dispose(),d.dispose(),m};const mi=ge({equalStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","equalStrict"),r=fe(t,"b","equalStrict");return N(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),fi=ge({greaterEqualStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","greaterEqualStrict"),r=fe(t,"b","greaterEqualStrict");return N(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),yi=ge({greaterStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","greaterStrict"),r=fe(t,"b","greaterStrict");return N(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),gi=ge({lessEqualStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","lessEqualStrict"),r=fe(t,"b","lessEqualStrict");return N(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),bi=ge({lessStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","lessStrict"),r=fe(t,"b","lessStrict");return N(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),wi=ge({notEqualStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","notEqualStrict"),r=fe(t,"b","notEqualStrict");return N(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});const xi=ge({addStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","addStrict"),r=fe(t,"b","addStrict");return N(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),ki=ge({divStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","div"),r=fe(t,"b","div");return N(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),vi=ge({maximumStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","maximumStrict"),r=fe(t,"b","maximumStrict");return N(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),Ni=ge({minimumStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","minimumStrict"),r=fe(t,"b","minimumStrict");return N(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),Si=ge({modStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","modStrict"),r=fe(t,"b","modStrict");return N(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),Ii=ge({mulStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","mul"),r=fe(t,"b","mul");return N(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),_i=ge({powStrict_:function(e,t){return La("strict variants of ops have been deprecated and will be removed in future"),N(e.shape,t.shape,"Error in powStrict: "),e.pow(t)}}),Ei=ge({squaredDifferenceStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","squaredDifferenceStrict"),r=fe(t,"b","squaredDifferenceStrict");return N(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),Ti=ge({subStrict_:function(e,t){La("strict variants of ops have been deprecated and will be removed in future");const n=fe(e,"a","subStrict"),r=fe(t,"b","subStrict");return N(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}});const Di=ge({norm_:function(e,t="euclidean",n=null,r=!1){const a=function e(t,n,r=null){if(0===t.rank)return Ha(t);if(1!==t.rank&&null===r)return e(We(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Je(Ha(t),r);if(n===1/0)return Ys(Ha(t),r);if(n===-1/0)return ao(Ha(t),r);if("euclidean"===n||2===n)return Ee(Je(Un(Ha(t),_e(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Ys(Je(Ha(t),r[0]),r[1]-1);if(n===1/0)return Ys(Je(Ha(t),r[1]),r[0]);if(n===-1/0)return ao(Je(Ha(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Ee(Je(Te(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=fe(e,"x","norm"),t,n);let s=a.shape;if(r){const t=M(n,e.shape);s=je(a.shape,t)}return a.reshape(s)}});const Mi=ge({movingAverage_:function(e,t,n,r,a=!0){const s=fe(e,"v","movingAverage"),o=fe(t,"x","movingAverage"),i=fe(n,"decay","movingAverage");var u,l;l=o,v((u=s).dtype===l.dtype,()=>`The dtypes of the first(${u.dtype}) and second(${l.dtype}) input must match`),v(E(s.shape,o.shape),()=>"Shape mismatch in v and x");const p=_e(1),c=De(p,i);let d=we(De(o,s),c);if(a){v(null!=r,()=>"When using zeroDebias: true, step is required.");const e=fe(r,"step","movingAverage");d=Ne(d,De(p,Un(i,e)))}return Ve(s,d)}});const Ai=ge({scatterND_:function(e,t,n){const r=fe(e,"indices","scatterND","int32"),a=fe(t,"updates","scatterND");Ba(a,r,n);const s={indices:r,updates:a},o={shape:n};return ce.runKernelFunc(e=>e.scatterND(r,a,n),s,null,"ScatterNd",o)}});const Fi=ge({sparseToDense_:function(e,t,n,r=0){const a=fe(e,"sparseIndices","sparseToDense","int32"),s=fe(t,"sparseValues","sparseToDense"),o=fe(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return ce.runKernelFunc(e=>e.sparseToDense(a,s,n,o),i,null,"SparseToDense",u)}});const $i=ge({gatherND_:function(e,t){const n=fe(t,"indices","gatherND","int32"),r=fe(e,"x","gatherND"),a={params:r,indices:n};return ce.runKernelFunc(e=>e.gatherND(r,n),a,null,"GatherNd")}});const Oi=ge({dropout_:function(e,t,n,r){const a=fe(e,"x","dropout");if(v("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),v(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Q?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(E(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,i=Ro(s,0,1,"float32",r).add(o).floor().div(o);return a.mul(i)}});function Ci(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ri(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return Bo(a,"float32")}const Bi=async function(e,t,n=1){const r=fe(e,"predictions","inTopK"),a=fe(t,"targets","inTopK");v(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),v(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),N(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];v(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const o=await r.data(),i=await a.data(),[u,l]=[o.length/s,s],p=function(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}("bool",u);for(let e=0;e<u;e++){const t=e*l,r=o.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort((e,t)=>t.value-e.value),p[e]=0;for(let t=0;t<n;t++)if(a[t].index===i[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Dr(p,a.shape,"bool")};function zi(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return e.mul(t.step());throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Pi(e,t){let n=t;const r=$e(e.shape,t.shape);return r.length>0&&(n=n.sum(r)),n.reshape(e.shape)}function Li(e,t,n){if("linear"===t)return e;if("relu"===t)return Lo(e);if("elu"===t)return Ms(e);if("relu6"===t)return Vo(e);if("prelu"===t)return wo(e,n);throw new Error(`Unknown fused activation ${t}.`)}const Vi=(e,t)=>!(e>0)||"linear"===t;const qi=ge({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===Vi(ce.state.gradientDepth,u)){let p=Ct(e,t,n,r,a,s,o);return null!=i&&(p=Ve(p,i)),Li(p,u,l)}const p=fe(e,"x","conv2d"),c=fe(t,"filter","conv2d");let d=p,h=!1;3===p.rank&&(h=!0,d=p.as4D(1,p.shape[0],p.shape[1],p.shape[2])),v(4===d.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+d.rank+"."),v(4===c.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+c.rank+"."),null!=o&&v(T(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),v(d.shape[3]===c.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${c.shape[2]}.`),v(ct(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),v("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const m=rt(d.shape,c.shape,n,s,r,o);let f,y;null!=i&&(f=fe(i,"bias","fused conv2d"),[f]=ie(f,p),Oe(m.outShape,f.shape)),null!=l&&(y=fe(l,"prelu weights","fused conv2d"));const g=(e,t)=>{const[a,o,i,l]=t,p=zi(e,i,u);v(pt(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const c=[$t(o.shape,p,a,n,r),Ft(o,p,a.shape,n,r)];if(null!=l){const e=Pi(l,p);c.push(e)}return c},b=e=>e.fusedConv2d({input:d,filter:c,convInfo:m,bias:f,activation:u,preluActivationWeights:y}),w={x:d,filter:c,bias:f,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u};if(null==i){return Gs((e,t,n)=>{let r=ce.runKernelFunc(b,w,null,"FusedConv2D",x);return n([t,e,r]),h&&(r=r.as3D(r.shape[1],r.shape[2],r.shape[3])),{value:r,gradFunc:g}})(d,c)}return Gs((e,t,n,r)=>{let a=ce.runKernelFunc(b,w,null,"FusedConv2D",x);return r([t,e,a,n]),h&&(a=a.as3D(a.shape[1],a.shape[2],a.shape[3])),{value:a,gradFunc:g}})(d,c,f)}});const Wi=ge({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l}){if(!1===Vi(ce.state.gradientDepth,u)){let p=Is(e,t,n,r,a,s,o);return null!=i&&(p=Ve(p,i)),Li(p,u,l)}const p=fe(e,"x","depthwiseConv2d"),c=fe(t,"filter","depthwiseConv2d");let d=p,h=!1;3===p.rank&&(h=!0,d=p.as4D(1,p.shape[0],p.shape[1],p.shape[2])),v(4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),v(4===c.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),v(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),null==s&&(s=[1,1]),v(ct(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=o&&v(T(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`);const m=rt(d.shape,c.shape,n,s,r,o,!0);let f,y;null!=i&&(f=fe(i,"bias","fused conv2d"),[f]=ie(f,p),Oe(m.outShape,f.shape)),null!=l&&(y=fe(l,"prelu weights","fused depthwiseConv2d"));const g=(e,t)=>{v(pt(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[n,r,a,o]=t,i=zi(e,a,u),l=Kt(r.shape,i,n,m),p=Gt(r,i,n.shape,m);if(null!=o){return[l,p,Pi(f,i)]}return[l,p]},b=e=>e.fusedDepthwiseConv2D({input:d,filter:c,convInfo:m,bias:f,activation:u,preluActivationWeights:y}),w={x:d,filter:c,bias:f,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u};if(null==i){return Gs((e,t,n)=>{let r=ce.runKernelFunc(b,w,null,"FusedDepthwiseConv2D",x);return n([t,e,r]),h&&(r=r.as3D(r.shape[1],r.shape[2],r.shape[3])),{value:r,gradFunc:g}})(d,c)}return Gs((e,t,n,r)=>{let a=ce.runKernelFunc(b,w,null,"FusedDepthwiseConv2D",x);return r([t,e,a,n]),h&&(a=a.as3D(a.shape[1],a.shape[2],a.shape[3])),{value:a,gradFunc:g}})(d,c,f)}});const Hi=ge({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o}){if(!1===Vi(ce.state.gradientDepth,s)){let i=gt(e,t,n,r);return null!=a&&(i=Ve(i,a)),Li(i,s,o)}let i=fe(e,"a","fused matMul"),u=fe(t,"b","fused matMul");[i,u]=ie(i,u);const l=n?i.shape[i.rank-2]:i.shape[i.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],c=n?i.shape[i.rank-1]:i.shape[i.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],h=i.shape.slice(0,-2),m=u.shape.slice(0,-2),f=_(h),y=_(m);v(i.rank>=2&&u.rank>=2&&i.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${i.rank} and ${u.rank}.`),v(E(h,m),()=>`Error in fused matMul: outer dimensions (${h}) and (${m}) of Tensors with shapes ${i.shape} and `+u.shape+" must match."),v(l===p,()=>`Error in fused matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${i.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const g=i.shape.slice(0,-2).concat([c,d]),b=n?i.as3D(f,l,c):i.as3D(f,c,l),w=r?u.as3D(y,d,p):u.as3D(y,p,d);let x,k;null!=a&&(x=fe(a,"bias","fused matMul"),[x]=ie(x,i),Oe(g,x.shape)),null!=o&&(k=fe(o,"prelu weights","fused matMul"));const N=(e,t)=>{const[o,i,u,l]=t,p=zi(We(e,u.shape),u,s);let c,d;if(n||r?!n&&r?(c=gt(p,i,!1,!1),d=gt(p,o,!0,!1)):n&&!r?(c=gt(i,p,!1,!0),d=gt(o,p,!1,!1)):(c=gt(i,p,!0,!0),d=gt(p,o,!0,!0)):(c=gt(p,i,!1,!0),d=gt(o,p,!0,!1)),null!=a){return[c,d,Pi(l,p)]}return[c,d]},S=e=>e.fusedBatchMatMul({a:b,b:w,transposeA:n,transposeB:r,bias:x,activation:s,preluActivationWeights:k}),I={a:b,b:w,bias:x,preluActivationWeights:k},T={transposeA:n,transposeB:r,activation:s};if(null==a){return Gs((e,t,n)=>{const r=ce.runKernelFunc(S,I,null,"_FusedMatMul",T);return n([e,t,r]),{value:We(r,g),gradFunc:N}})(b,w)}return Gs((e,t,n,r)=>{const a=ce.runKernelFunc(S,I,null,"_FusedMatMul",T);return r([e,t,a,n]),{value:We(a,g),gradFunc:N}})(b,w,x)}});var Ui=Object.freeze({__proto__:null,conv2d:qi,depthwiseConv2d:Wi,matMul:Hi});const ji=ge({hammingWindow_:function(e){return Ri(e,.54,.46)}});const Gi=ge({hannWindow_:function(e){return Ri(e,.5,.5)}});const Ki=ge({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push(Vr(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=Mr([Vr(e,s,t-r),Cs([r],a)]);o.push(i),s+=n}return 0===o.length?ui([],[0,t]):We(Mr(o),[o.length,t])}});const Yi=ge({stft_:function(e,t,n,r,a=Gi){null==r&&(r=Ci(t));const s=Ki(e,t,n),o=we(s,a(t)),i=[];for(let e=0;e<s.shape[0];e++)i.push(jo(Vr(o,[e,0],[1,t]),r));return Mr(i)}});const Xi=ge({cropAndResize_:function(e,t,n,r,a,s){const o=fe(e,"image","cropAndResize"),i=fe(t,"boxes","cropAndResize","float32"),u=fe(n,"boxInd","cropAndResize","int32");a=a||"bilinear",s=s||0;const l=i.shape[0];v(4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),v(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),v(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),v(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),v(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),v("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const p={image:o,boxes:i,boxInd:u},c={method:a,extrapolationValue:s,cropSize:r};return ce.runKernelFunc(e=>e.cropAndResize(o,i,u,r,a,s),p,null,"CropAndResize",c)}});const Ji=ge({rotateWithOffset_:function(e,t,n=0,r=.5){const a=fe(e,"image","rotateWithOffset","float32");v(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},o={radians:t,fillValue:n,center:r};return ce.runKernel("RotateWithOffset",s,o)}});function Zi(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),v(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),v(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),v(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),v(1===t.rank,()=>"scores must be a 1D tensor"),v(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was `+t.shape[0]),v(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Qi=ge({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=fe(e,"boxes","nonMaxSuppression"),o=fe(t,"scores","nonMaxSuppression"),i=Zi(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return ce.runKernelFunc(e=>e.nonMaxSuppression(s,o,n,r,a),{boxes:s,scores:o},null,"NonMaxSuppressionV3",u)}});function eu(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||tu)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function tu(e,t){return e>t?1:e<t?-1:0}function nu(e,t,n,r,a,s,o=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(su);const p=s>0?-.5/s:0,c=[],d=[];for(;c.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let n=c.length-1;n>=o;--n){const o=ru(e,s,c[n]);if(o>=r){i=!0;break}if(t.score=t.score*au(r,p,o),t.score<=a)break}t.suppressBeginIndex=c.length,i||(t.score===n?(c.push(s),d.push(t.score)):t.score>a&&eu(l,t,su))}const h=c.length,m=n-h;i&&m>0&&(c.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));const f={selectedIndices:Bo(c,"int32")};return o&&(f.selectedScores=Bo(d,"float32")),u&&(f.validOutputs=_e(h,"int32")),f}function ru(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),c=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),h=(i-s)*(u-o),m=(c-l)*(d-p);if(h<=0||m<=0)return 0;const f=Math.max(s,l),y=Math.max(o,p),g=Math.min(i,c),b=Math.min(u,d),w=Math.max(g-f,0)*Math.max(b-y,0);return w/(h+m-w)}function au(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function su(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const ou=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=fe(e,"boxes","nonMaxSuppressionAsync"),o=fe(t,"scores","nonMaxSuppressionAsync"),i=Zi(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),l=function(e,t,n,r,a){return nu(e,t,n,r,a,0).selectedIndices}(u[0],u[1],n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),l};const iu=ge({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=fe(e,"boxes","nonMaxSuppression"),i=fe(t,"scores","nonMaxSuppression"),u=Zi(o,i,n,r,a,s),l={boxes:o,scores:i},p={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},c=ce.runKernel("NonMaxSuppressionV5",l,p);return{selectedIndices:c[0],selectedScores:c[1]}}});const uu=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=fe(e,"boxes","nonMaxSuppressionAsync"),i=fe(t,"scores","nonMaxSuppressionAsync"),u=Zi(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),p=function(e,t,n,r,a,s){return nu(e,t,n,r,a,s,!0)}(l[0],l[1],n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),p};const lu=ge({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=fe(e,"boxes","nonMaxSuppression"),i=fe(t,"scores","nonMaxSuppression"),u=Zi(o,i,n,r,a,null),l={boxes:o,scores:i},p={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},c=ce.runKernel("NonMaxSuppressionV4",l,p);return{selectedIndices:c[0],validOutputs:c[1]}}});const pu=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=fe(e,"boxes","nonMaxSuppressionAsync"),i=fe(t,"scores","nonMaxSuppressionAsync"),u=Zi(o,i,n,r,a,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,[d,h]=await Promise.all([o.data(),i.data()]),m=function(e,t,n,r,a,s){return nu(e,t,n,r,a,0,!1,s,!0)}(d,h,l,p,c,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),m};const cu=ge({resizeBilinear_:function(e,t,n=!1){const r=fe(e,"images","resizeBilinear");v(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),v(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+".");let a=r,s=!1;3===r.rank&&(s=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[o,i]=t,u={images:a},l={alignCorners:n,size:t},p=ce.runKernelFunc((e,t)=>(t([a]),e.resizeBilinear(a,o,i,n)),u,null,"ResizeBilinear",l);return s?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}});const du=ge({resizeNearestNeighbor_:function(e,t,n=!1){const r=fe(e,"images","resizeNearestNeighbor");v(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),v(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),v("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let a=r,s=!1;3===r.rank&&(s=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[o,i]=t,u={images:a},l={alignCorners:n,size:t},p=ce.runKernelFunc((e,t)=>(t([a]),e.resizeNearestNeighbor(a,o,i,n)),u,null,"ResizeNearestNeighbor",l);return s?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}});const hu=ge({bandPart_:function(e,t,n){v(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),v(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=fe(e,"a","bandPart");v(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=We(zo(0,s,1,"int32"),[-1,1]),u=zo(0,o,1,"int32"),l=De(i,u),p=_t(It(l,_e(+t,"int32")),St(l,_e(-n,"int32"))),c=Ln([s,o],r.dtype);return We(Ur(ci(We(r,[-1,s,o])).map(e=>Et(p,e,c))),a)}});const mu=ge({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,v(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)v(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Mt(e,e.shape[0],0).map(e=>si(e,[0]));v(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ce.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=we(Je(we(n[r],e)),n[r]);e=De(e,t)}return Ne(e,Di(e,"euclidean"))}));return t?Ur(n,0):n}});function fu(e,t=!1){return ce.tidy(()=>{v(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=$s(n),s=er(e);const o=ui([[1]],[1,1]);let i=er(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,l=a;[i,s,a]=ce.tidy(()=>{const t=Vr(s,[e,e],[n-e,1]),u=Di(t),l=Vr(s,[e,e],[1,1]),p=Et($n(l,0),ui([[-1]]),ui([[1]])),c=De(l,we(p,u)),d=Ne(t,c);i=1===d.shape[0]?er(o):Mr([o,Vr(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const h=Se(Ne(gt(p,c),u)),m=Vr(s,[e,0],[n-e,r]),f=we(h,i),y=Ht(i);if(0===e)s=De(m,gt(f,gt(y,m)));else{const t=De(m,gt(f,gt(y,m)));s=Mr([Vr(s,[0,0],[e,r]),t],0)}const g=Ht(f),b=Vr(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=De(b,gt(gt(b,i),g));else{const t=De(b,gt(gt(b,i),g));a=Mr([Vr(a,[0,0],[n,e]),t],1)}return[i,s,a]}),qa([t,u,l])}return!t&&n>r&&(a=Vr(a,[0,0],[n,r]),s=Vr(s,[0,0],[r,r])),[a,s]})}const yu=ge({qr_:function(e,t=!1){if(v(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return fu(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=ci(We(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(e=>{const[n,r]=fu(e,t);a.push(n),s.push(r)});return[We(Ur(a,0),e.shape),We(Ur(s,0),e.shape)]}}});var gu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(gu||(gu={}));const bu=ge({computeWeightedLoss_:function(e,t,n=gu.SUM_BY_NONZERO_WEIGHTS){const r=fe(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=fe(t,"weights","computeWeightedLoss"));const s=null==a?r:we(r,a);if(n===gu.NONE)return s;if(n===gu.SUM)return Je(s);if(n===gu.MEAN){if(null==a)return ro(s);{const e=r.size/a.size,t=Ne(Je(s),Je(a));return e>1?Ne(t,_e(e)):t}}if(n===gu.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Ne(Je(s),_e(r.size));{const e=we(a,Br(r.shape)),t=be(Je(po(e,_e(0))),"float32");return Ne(Je(s),t)}}throw Error("Unknown reduction: "+n)}});const wu=ge({absoluteDifference_:function(e,t,n,r=gu.SUM_BY_NONZERO_WEIGHTS){const a=fe(e,"labels","absoluteDifference"),s=fe(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=fe(n,"weights","absoluteDifference")),N(a.shape,s.shape,"Error in absoluteDifference: ");const i=Ha(De(a,s));return bu(i,o,r)}});const xu=ge({cosineDistance_:function(e,t,n,r,a=gu.SUM_BY_NONZERO_WEIGHTS){const s=fe(e,"labels","cosineDistance"),o=fe(t,"predictions","cosineDistance");let i=null;null!=r&&(i=fe(r,"weights","cosineDistance")),N(s.shape,o.shape,"Error in cosineDistance: ");const u=_e(1),l=De(u,Je(we(s,o),n,!0));return bu(l,i,a)}});const ku=ge({hingeLoss_:function(e,t,n,r=gu.SUM_BY_NONZERO_WEIGHTS){let a=fe(e,"labels","hingeLoss");const s=fe(t,"predictions","hingeLoss");let o=null;null!=n&&(o=fe(n,"weights","hingeLoss")),N(a.shape,s.shape,"Error in hingeLoss: ");const i=_e(1);a=De(we(_e(2),a),i);const u=Lo(De(i,we(a,s)));return bu(u,o,r)}});const vu=ge({huberLoss_:function(e,t,n,r=1,a=gu.SUM_BY_NONZERO_WEIGHTS){const s=fe(e,"labels","huberLoss"),o=fe(t,"predictions","huberLoss");let i=null;null!=n&&(i=fe(n,"weights","huberLoss")),N(s.shape,o.shape,"Error in huberLoss: ");const u=_e(r),l=Ha(De(o,s)),p=so(l,u),c=De(l,p),d=Ve(we(_e(.5),Te(p)),we(u,c));return bu(d,i,a)}});const Nu=ge({logLoss_:function(e,t,n,r=1e-7,a=gu.SUM_BY_NONZERO_WEIGHTS){const s=fe(e,"labels","logLoss"),o=fe(t,"predictions","logLoss");let i=null;null!=n&&(i=fe(n,"weights","logLoss")),N(s.shape,o.shape,"Error in logLoss: ");const u=_e(1),l=_e(r),p=Se(we(s,Hn(Ve(o,l)))),c=we(De(u,s),Hn(Ve(De(u,o),l))),d=De(p,c);return bu(d,i,a)}});const Su=ge({meanSquaredError_:function(e,t,n,r=gu.SUM_BY_NONZERO_WEIGHTS){const a=fe(e,"labels","meanSquaredError"),s=fe(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=fe(n,"weights","meanSquaredError")),N(a.shape,s.shape,"Error in meanSquaredError: ");const i=ai(a,s);return bu(i,o,r)}});const Iu=ge({sigmoidCrossEntropy_:function(e,t,n,r=0,a=gu.SUM_BY_NONZERO_WEIGHTS){let s=fe(e,"multiClassLabels","sigmoidCrossEntropy");const o=fe(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=fe(n,"weights","sigmoidCrossEntropy")),N(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=_e(r),t=_e(1),n=_e(.5);s=Ve(we(s,De(t,e)),we(n,e))}const u=function(e,t){const n=fe(e,"labels","sigmoidCrossEntropyWithLogits"),r=fe(t,"logits","sigmoidCrossEntropyWithLogits");N(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Lo(r),s=we(r,n),o=js(Qt(Se(Ha(r))));return Ve(De(a,s),o)}(s,o);return bu(u,i,a)}});const _u=ge({softmaxCrossEntropy_:function(e,t,n,r=0,a=gu.SUM_BY_NONZERO_WEIGHTS){let s=fe(e,"onehotLabels","softmaxCrossEntropy");const o=fe(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=fe(n,"weights","softmaxCrossEntropy")),N(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=_e(r),t=_e(1),n=_e(s.shape[1]);s=Ve(we(s,De(t,e)),Ne(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return Gs((e,t,r)=>{const a=Js(t,[n],!0),s=De(be(t,"float32"),a);r([e,s]);const o=Se(we(s,e));return{value:Je(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=je(e.shape,[n]);return[we(We(e,s),De(be(r,"float32"),Qt(a))),we(We(e,s),De(Qt(a),be(r,"float32")))]}}})(e,t)}(s,o);return bu(u,i,a)}}),Eu={fft:Os,ifft:Rs,rfft:jo,irfft:Ps},Tu={hammingWindow:ji,hannWindow:Gi,frame:Ki,stft:Yi},Du={resizeNearestNeighbor:du,resizeBilinear:cu,rotateWithOffset:Ji,cropAndResize:Xi,nonMaxSuppression:Qi,nonMaxSuppressionAsync:ou,nonMaxSuppressionWithScore:iu,nonMaxSuppressionWithScoreAsync:uu,nonMaxSuppressionPadded:lu,nonMaxSuppressionPaddedAsync:pu},Mu={bandPart:hu,gramSchmidt:mu,qr:yu},Au={absoluteDifference:wu,computeWeightedLoss:bu,cosineDistance:xu,hingeLoss:ku,huberLoss:vu,logLoss:Nu,meanSquaredError:Su,sigmoidCrossEntropy:Iu,softmaxCrossEntropy:_u};var Fu=Object.freeze({__proto__:null,image:Du,linalg:Mu,losses:Au,spectral:Eu,fused:Ui,signal:Tu,abs:Ha,acos:Ua,acosh:ja,add:Ve,addN:Ga,all:Ka,any:Ya,argMax:Xa,argMin:Ja,asin:Za,asinh:Qa,atan:es,atan2:ts,atanh:ns,avgPool:rs,avgPool3d:as,basicLSTMCell:os,batchToSpaceND:_r,batchNorm:us,batchNorm2d:ls,batchNorm3d:ps,batchNorm4d:cs,broadcastTo:ds,buffer:hs,cast:be,ceil:ms,clipByValue:fs,clone:er,complex:Pn,concat:Mr,concat1d:ys,concat2d:gs,concat3d:bs,concat4d:ws,conv1d:xs,conv2d:Ct,conv2dTranspose:ks,conv3d:vs,conv3dTranspose:Ns,cos:pr,cosh:dr,cumsum:Ut,depthToSpace:Ss,depthwiseConv2d:Is,diag:_s,dilation2d:Es,div:Ne,divNoNan:Ts,dot:Ds,elu:Ms,equal:Nn,erf:As,exp:Qt,expandDims:Hr,expm1:Fs,eye:$s,fft:Os,fill:Cs,floor:Cn,floorDiv:ve,gather:Kr,greater:$n,greaterEqual:St,ifft:Rs,imag:Bs,irfft:Ps,isFinite:Ls,isInf:Vs,isNaN:qs,leakyRelu:Ws,less:_n,lessEqual:It,linspace:Hs,localResponseNormalization:Us,log:Hn,log1p:js,logSigmoid:Ks,logSoftmax:Xs,logSumExp:Js,logicalAnd:_t,logicalNot:sr,logicalOr:Zs,logicalXor:Qs,matMul:gt,max:Ys,maxPool:eo,maxPool3d:to,maxPoolWithArgmax:no,maximum:Yr,mean:ro,min:ao,minimum:so,mod:oo,moments:io,mul:we,multiRNNCell:uo,multinomial:lo,neg:Se,notEqual:po,oneHot:$a,ones:Br,onesLike:co,outerProduct:ho,pad:mr,pad1d:mo,pad2d:fo,pad3d:yo,pad4d:go,pool:bo,pow:Un,prelu:wo,print:function(e,t=!1){console.log(e.toString(t))},prod:xo,rand:ko,randomGamma:Oo,randomNormal:Co,randomUniform:Ro,range:zo,real:zs,reciprocal:Po,relu:Lo,relu6:Vo,reshape:We,reverse:tr,reverse1d:qo,reverse2d:Wo,reverse3d:Ho,reverse4d:Uo,rfft:jo,round:Go,rsqrt:sn,scalar:_e,selu:Ko,separableConv2d:Yo,setdiff1dAsync:Xo,sigmoid:Sr,sign:Jo,sin:Lt,sinh:qt,slice:Vr,slice1d:Zo,slice2d:Qo,slice3d:ei,slice4d:ti,softmax:ni,softplus:ri,spaceToBatchND:wt,split:Mt,sqrt:Ee,square:Te,squaredDifference:ai,squeeze:si,stack:Ur,step:xe,stridedSlice:oi,sub:De,sum:Je,tan:ii,tanh:ss,tensor:Dr,tensor1d:Bo,tensor2d:ui,tensor3d:Oa,tensor4d:function(e,t,n){if(S(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=he(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ie(e,t,r,n)},tensor5d:function(e,t,n){if(S(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=he(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ie(e,t,r,n)},tensor6d:function(e,t,n){if(S(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=he(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ie(e,t=t||r,r,n)},tile:on,topk:li,truncatedNormal:pi,unsortedSegmentSum:ln,unstack:ci,variable:function(e,t=!0,n,r){return ce.makeVariable(e,t,n,r)},where:Et,whereAsync:di,zeros:Ln,zerosLike:Be,op:ge,booleanMaskAsync:hi,equalStrict:mi,greaterEqualStrict:fi,greaterStrict:yi,lessEqualStrict:gi,lessStrict:bi,notEqualStrict:wi,addStrict:xi,divStrict:ki,maximumStrict:vi,minimumStrict:Ni,modStrict:Si,mulStrict:Ii,powStrict:_i,squaredDifferenceStrict:Ei,subStrict:Ti,transpose:Ht,norm:Di,movingAverage:Mi,scatterND:Ai,sparseToDense:Fi,gatherND:$i,dropout:Oi,enclosingPowerOfTwo:Ci,cosineWindow:Ri,inTopKAsync:Bi});class $u extends class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return qa(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){v(C(e),()=>"The f passed in variableGrads(f) must be a function"),v(null==t||Array.isArray(t)&&t.every(e=>e instanceof ee),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ce.registeredVariables)t.push(ce.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,a=t.length;v((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const{value:s,grads:o}=ce.gradients(e,t,null,!0);v(o.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),v(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);const i={};return t.forEach((e,t)=>{null!=o[t]&&(i[e.name]=o[t])}),null!=r&&r.forEach(e=>i[e.name]=null),{value:s,grads:i}}(e,t)}dispose(){null!=this.iterations_&&qa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:_e(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty($u,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ou extends $u{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ce.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ce.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Va(()=>Be(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Va(()=>Be(r).variable(!1))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Va(()=>{const e=s.mul(this.rho).add(a.square().mul(1-this.rho)),t=o.add(this.epsilon).sqrt().div(s.add(this.epsilon).sqrt()).mul(a),n=o.mul(this.rho).add(t.square().mul(1-this.rho));s.assign(e),o.assign(n);const i=t.mul(-this.learningRate).add(r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(qa(this.accumulatedGrads.map(e=>e.variable)),qa(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Ou.className="Adadelta",Pa(Ou);class Cu extends $u{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ce.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Va(()=>Cs(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Va(()=>{const e=s.add(a.square());s.assign(e);const t=a.div(e.add(ce.backend.epsilon()).sqrt()).mul(-this.learningRate).add(r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&qa(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Cu.className="Adagrad",Pa(Cu);class Ru extends $u{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Va(()=>{this.accBeta1=_e(t).variable(),this.accBeta2=_e(n).variable()}),null==r&&(this.epsilon=ce.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Va(()=>{const n=De(1,this.accBeta1),r=De(1,this.accBeta2);t.forEach((t,a)=>{const s=ce.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Va(()=>Be(s).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:Va(()=>Be(s).variable(!1))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=i.mul(this.beta1).add(o.mul(1-this.beta1)),p=u.mul(this.beta2).add(o.square().mul(1-this.beta2)),c=l.div(n),d=p.div(r);i.assign(l),u.assign(p);const h=c.div(d.sqrt().add(this.epsilon)).mul(-this.learningRate).add(s);s.assign(h)}),this.accBeta1.assign(this.accBeta1.mul(this.beta1)),this.accBeta2.assign(this.accBeta2.mul(this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&qa(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&qa(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Va(()=>{this.accBeta1.assign(Un(this.beta1,this.iterations_+1)),this.accBeta2.assign(Un(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Ru.className="Adam",Pa(Ru);class Bu extends $u{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Va(()=>{this.iteration=_e(0).variable(),this.accBeta1=_e(t).variable()}),null==r&&(this.epsilon=ce.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Va(()=>{const n=De(1,this.accBeta1),r=Ne(-this.learningRate,this.iteration.mul(this.decay).add(1));t.forEach((t,a)=>{const s=ce.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Be(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:Be(s).variable(!1)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=i.mul(this.beta1).add(o.mul(1-this.beta1)),p=u.mul(this.beta2),c=o.abs(),d=p.maximum(c);i.assign(l),u.assign(d);const h=r.div(n).mul(l.div(d.add(this.epsilon))).add(s);s.assign(h)}),this.iteration.assign(this.iteration.add(1)),this.accBeta1.assign(this.accBeta1.mul(this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&qa(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&qa(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Bu.className="Adamax",Pa(Bu);class zu extends $u{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=ce.registeredVariables[t];Va(()=>{const e=this.c.mul(r).add(a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Wa(_e(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}zu.className="SGD",Pa(zu);class Pu extends zu{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=_e(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ce.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:Va(()=>Be(r).variable(e))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Va(()=>{let e;const t=this.m.mul(a).add(s);e=this.useNesterov?this.c.mul(s.add(t.mul(this.m))).add(r):this.c.mul(t).add(r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&qa(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Pu.className="Momentum",Pa(Pu);class Lu extends $u{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ce.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ce.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Va(()=>Be(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Va(()=>Be(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Va(()=>Be(r).variable(!1))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Va(()=>{const e=s.mul(this.decay).add(a.square().mul(1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=t.mul(this.decay).add(a.mul(1-this.decay)),u=o.mul(this.momentum).add(a.mul(this.learningRate).div(e.sub(i.square().add(this.epsilon)).sqrt()));s.assign(e),t.assign(i),o.assign(u);const l=r.sub(u);r.assign(l)}else{const e=s.mul(this.decay).add(a.square().mul(1-this.decay)),t=o.mul(this.momentum).add(a.mul(this.learningRate).div(e.add(this.epsilon).sqrt()));s.assign(e),o.assign(t);const n=r.sub(t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&qa(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&qa(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&qa(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Lu.className="RMSProp",Pa(Lu);"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate&&setImmediate;class Vu{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}function qu(e){throw new Error(`'${e}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}var Wu,Hu;Q.prototype.abs=function(){return this.throwIfDisposed(),Ha(this)},Q.prototype.acos=function(){return this.throwIfDisposed(),Ua(this)},Q.prototype.acosh=function(){return this.throwIfDisposed(),ja(this)},Q.prototype.addStrict=function(e){return this.throwIfDisposed(),xi(this,e)},Q.prototype.add=function(e){return this.throwIfDisposed(),Ve(this,e)},Q.prototype.all=function(e,t){return this.throwIfDisposed(),Ka(this,e,t)},Q.prototype.any=function(e,t){return this.throwIfDisposed(),Ya(this,e,t)},Q.prototype.argMax=function(e){return this.throwIfDisposed(),Xa(this,e)},Q.prototype.argMin=function(e){return this.throwIfDisposed(),Ja(this,e)},Q.prototype.asScalar=function(){return this.throwIfDisposed(),v(1===this.size,()=>"The array must have only 1 element."),We(this,[])},Q.prototype.asType=function(e){return this.throwIfDisposed(),be(this,e)},Q.prototype.as1D=function(){return this.throwIfDisposed(),We(this,[this.size])},Q.prototype.as2D=function(e,t){return this.throwIfDisposed(),We(this,[e,t])},Q.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),We(this,[e,t,n])},Q.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),We(this,[e,t,n,r])},Q.prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),We(this,[e,t,n,r,a])},Q.prototype.asin=function(){return this.throwIfDisposed(),Za(this)},Q.prototype.asinh=function(){return this.throwIfDisposed(),Qa(this)},Q.prototype.atan=function(){return this.throwIfDisposed(),es(this)},Q.prototype.atan2=function(e){return this.throwIfDisposed(),ts(this,e)},Q.prototype.atanh=function(){return this.throwIfDisposed(),ns(this)},Q.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),rs(this,e,t,n,r)},Q.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),_r(this,e,t)},Q.prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),us(this,e,t,n,r,a)},Q.prototype.broadcastTo=function(e){return this.throwIfDisposed(),ds(this,e)},Q.prototype.cast=function(e){return this.throwIfDisposed(),be(this,e)},Q.prototype.ceil=function(){return this.throwIfDisposed(),ms(this)},Q.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),fs(this,e,t)},Q.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Q&&(e=[e]),Mr([this,...e],t)},Q.prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),xs(this,e,t,n,r,a,s)},Q.prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),ks(this,e,t,n,r,a)},Q.prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ct(this,e,t,n,r,a,s)},Q.prototype.cos=function(){return this.throwIfDisposed(),pr(this)},Q.prototype.cosh=function(){return this.throwIfDisposed(),dr(this)},Q.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Ut(this,e,t,n)},Q.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ss(this,e,t)},Q.prototype.depthwiseConv2D=function(e,t,n,r,a,s){return La("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Is(this,e,t,n,r,a,s)},Q.prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Is(this,e,t,n,r,a,s)},Q.prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Es(this,e,t,n,r,a)},Q.prototype.divNoNan=function(e){return this.throwIfDisposed(),Ts(this,e)},Q.prototype.divStrict=function(e){return this.throwIfDisposed(),ki(this,e)},Q.prototype.div=function(e){return this.throwIfDisposed(),Ne(this,e)},Q.prototype.dot=function(e){return this.throwIfDisposed(),Ds(this,e)},Q.prototype.elu=function(){return this.throwIfDisposed(),Ms(this)},Q.prototype.equalStrict=function(e){return this.throwIfDisposed(),mi(this,e)},Q.prototype.equal=function(e){return this.throwIfDisposed(),Nn(this,e)},Q.prototype.erf=function(){return this.throwIfDisposed(),As(this)},Q.prototype.exp=function(){return this.throwIfDisposed(),Qt(this)},Q.prototype.expandDims=function(e){return this.throwIfDisposed(),Hr(this,e)},Q.prototype.expm1=function(){return this.throwIfDisposed(),Fs(this)},Q.prototype.fft=function(){return this.throwIfDisposed(),Os(this)},Q.prototype.flatten=function(){return this.throwIfDisposed(),We(this,[this.size])},Q.prototype.floor=function(){return this.throwIfDisposed(),Cn(this)},Q.prototype.floorDiv=function(e){return this.throwIfDisposed(),ve(this,e)},Q.prototype.gather=function(e,t){return this.throwIfDisposed(),Kr(this,e,t)},Q.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),fi(this,e)},Q.prototype.greaterEqual=function(e){return this.throwIfDisposed(),St(this,e)},Q.prototype.greaterStrict=function(e){return this.throwIfDisposed(),yi(this,e)},Q.prototype.greater=function(e){return this.throwIfDisposed(),$n(this,e)},Q.prototype.ifft=function(){return this.throwIfDisposed(),Rs(this)},Q.prototype.irfft=function(){return this.throwIfDisposed(),Ps(this)},Q.prototype.isFinite=function(){return this.throwIfDisposed(),Ls(this)},Q.prototype.isInf=function(){return this.throwIfDisposed(),Vs(this)},Q.prototype.isNaN=function(){return this.throwIfDisposed(),qs(this)},Q.prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ws(this,e)},Q.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),gi(this,e)},Q.prototype.lessEqual=function(e){return this.throwIfDisposed(),It(this,e)},Q.prototype.lessStrict=function(e){return this.throwIfDisposed(),bi(this,e)},Q.prototype.less=function(e){return this.throwIfDisposed(),_n(this,e)},Q.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Us(this,e,t,n,r)},Q.prototype.logSigmoid=function(){return this.throwIfDisposed(),Ks(this)},Q.prototype.logSoftmax=function(e){return this.throwIfDisposed(),Xs(this,e)},Q.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Js(this,e,t)},Q.prototype.log=function(){return this.throwIfDisposed(),Hn(this)},Q.prototype.log1p=function(){return this.throwIfDisposed(),js(this)},Q.prototype.logicalAnd=function(e){return this.throwIfDisposed(),_t(this,e)},Q.prototype.logicalNot=function(){return this.throwIfDisposed(),sr(this)},Q.prototype.logicalOr=function(e){return this.throwIfDisposed(),Zs(this,e)},Q.prototype.logicalXor=function(e){return this.throwIfDisposed(),Qs(this,e)},Q.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),gt(this,e,t,n)},Q.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),eo(this,e,t,n,r)},Q.prototype.max=function(e,t){return this.throwIfDisposed(),Ys(this,e,t)},Q.prototype.maximumStrict=function(e){return this.throwIfDisposed(),vi(this,e)},Q.prototype.maximum=function(e){return this.throwIfDisposed(),Yr(this,e)},Q.prototype.mean=function(e,t){return this.throwIfDisposed(),ro(this,e,t)},Q.prototype.min=function(e,t){return this.throwIfDisposed(),ao(this,e,t)},Q.prototype.minimumStrict=function(e){return this.throwIfDisposed(),Ni(this,e)},Q.prototype.minimum=function(e){return this.throwIfDisposed(),so(this,e)},Q.prototype.modStrict=function(e){return this.throwIfDisposed(),Si(this,e)},Q.prototype.mod=function(e){return this.throwIfDisposed(),oo(this,e)},Q.prototype.mulStrict=function(e){return this.throwIfDisposed(),Ii(this,e)},Q.prototype.mul=function(e){return this.throwIfDisposed(),we(this,e)},Q.prototype.neg=function(){return this.throwIfDisposed(),Se(this)},Q.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Di(this,e,t,n)},Q.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),wi(this,e)},Q.prototype.notEqual=function(e){return this.throwIfDisposed(),po(this,e)},Q.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),$a(this,e,t,n)},Q.prototype.onesLike=function(){return this.throwIfDisposed(),co(this)},Q.prototype.pad=function(e,t){return this.throwIfDisposed(),mr(this,e,t)},Q.prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),bo(this,e,t,n,r,a)},Q.prototype.powStrict=function(e){return this.throwIfDisposed(),_i(this,e)},Q.prototype.pow=function(e){return this.throwIfDisposed(),Un(this,e)},Q.prototype.prelu=function(e){return this.throwIfDisposed(),wo(this,e)},Q.prototype.prod=function(e,t){return this.throwIfDisposed(),xo(this,e,t)},Q.prototype.reciprocal=function(){return this.throwIfDisposed(),Po(this)},Q.prototype.relu=function(){return this.throwIfDisposed(),Lo(this)},Q.prototype.relu6=function(){return this.throwIfDisposed(),Vo(this)},Q.prototype.reshapeAs=function(e){return this.throwIfDisposed(),We(this,e.shape)},Q.prototype.reshape=function(e){return this.throwIfDisposed(),We(this,e)},Q.prototype.resizeBilinear=function(e,t){return this.throwIfDisposed(),cu(this,e,t)},Q.prototype.resizeNearestNeighbor=function(e,t){return this.throwIfDisposed(),du(this,e,t)},Q.prototype.reverse=function(e){return this.throwIfDisposed(),tr(this,e)},Q.prototype.rfft=function(){return this.throwIfDisposed(),jo(this)},Q.prototype.round=function(){return this.throwIfDisposed(),Go(this)},Q.prototype.rsqrt=function(){return this.throwIfDisposed(),sn(this)},Q.prototype.selu=function(){return this.throwIfDisposed(),Ko(this)},Q.prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Yo(this,e,t,n,r,a,s)},Q.prototype.sigmoid=function(){return this.throwIfDisposed(),Sr(this)},Q.prototype.sign=function(){return this.throwIfDisposed(),Jo(this)},Q.prototype.sin=function(){return this.throwIfDisposed(),Lt(this)},Q.prototype.sinh=function(){return this.throwIfDisposed(),qt(this)},Q.prototype.slice=function(e,t){return this.throwIfDisposed(),Vr(this,e,t)},Q.prototype.softmax=function(e){return this.throwIfDisposed(),ni(this,e)},Q.prototype.softplus=function(){return this.throwIfDisposed(),ri(this)},Q.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),wt(this,e,t)},Q.prototype.split=function(e,t){return this.throwIfDisposed(),Mt(this,e,t)},Q.prototype.sqrt=function(){return this.throwIfDisposed(),Ee(this)},Q.prototype.square=function(){return this.throwIfDisposed(),Te(this)},Q.prototype.squaredDifference=function(e){return this.throwIfDisposed(),ai(this,e)},Q.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Ei(this,e)},Q.prototype.squeeze=function(e){return this.throwIfDisposed(),si(this,e)},Q.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Q?[this,e]:[this,...e];return Ur(n,t)},Q.prototype.step=function(e){return this.throwIfDisposed(),xe(this,e)},Q.prototype.stridedSlice=function(e,t,n,r,a,s,o,i){return this.throwIfDisposed(),oi(this,e,t,n,r,a,s,o,i)},Q.prototype.subStrict=function(e){return this.throwIfDisposed(),Ti(this,e)},Q.prototype.sub=function(e){return this.throwIfDisposed(),De(this,e)},Q.prototype.sum=function(e,t){return this.throwIfDisposed(),Je(this,e,t)},Q.prototype.tan=function(){return this.throwIfDisposed(),ii(this)},Q.prototype.tanh=function(){return this.throwIfDisposed(),ss(this)},Q.prototype.tile=function(e){return this.throwIfDisposed(),on(this,e)},Q.prototype.toBool=function(){return this.throwIfDisposed(),be(this,"bool")},Q.prototype.toFloat=function(){return this.throwIfDisposed(),be(this,"float32")},Q.prototype.toInt=function(){return this.throwIfDisposed(),be(this,"int32")},Q.prototype.topk=function(e,t){return this.throwIfDisposed(),li(this,e,t)},Q.prototype.transpose=function(e){return this.throwIfDisposed(),Ht(this,e)},Q.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ln(this,e,t)},Q.prototype.unstack=function(e){return this.throwIfDisposed(),ci(this,e)},Q.prototype.where=function(e,t){return this.throwIfDisposed(),Et(e,this,t)},Q.prototype.zerosLike=function(){return this.throwIfDisposed(),Be(this)},Z=Fu,function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Wu||(Wu={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Hu||(Hu={}));const Uu={};function ju(e){return Uu[e]}function Gu(e,t,n,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,s=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return Ku(t.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type){return t.inputNames.slice(e,s).map(e=>Ku(e,n,r))}const o=Ku(t.inputNames.slice(e)[0],n,r),i=o.dataSync();return"number"===a.type?i[0]:z(o.shape,i)}const s=t.attrParams[e];return s&&s.value}function Ku(e,t,n){const[r,a]=Ju(e),s=n.currentContextIds.find(e=>!!t[Xu(r,e)]);return void 0!==s?t[Xu(r,s)][a]:void 0}function Yu(e,t){const[n,r]=Ju(e);return[Xu(n,t&&t.currentContextId),r]}function Xu(e,t){return t?`${e}-${t}`:e}function Ju(e){const t=e.split(":");if(1===t.length)return[e,0];return[t[0],Number(t[t.length-1])]}function Zu(e,t,n){let r=Gu("pad",e,t,n);if("explicit"===r){r=Gu("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}var Qu=Object.freeze({__proto__:null,json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var el=Object.freeze({__proto__:null,json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var tl=Object.freeze({__proto__:null,json:[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]});var nl=Object.freeze({__proto__:null,json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]});var rl=Object.freeze({__proto__:null,json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]});var al=Object.freeze({__proto__:null,json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var sl=Object.freeze({__proto__:null,json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]});var ol=Object.freeze({__proto__:null,json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]});var il=Object.freeze({__proto__:null,json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]});var ul=Object.freeze({__proto__:null,json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var ll=Object.freeze({__proto__:null,json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var pl=Object.freeze({__proto__:null,json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]});var cl=Object.freeze({__proto__:null,json:[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]});var dl=Object.freeze({__proto__:null,json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]});var hl=Object.freeze({__proto__:null,json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]});var ml=Object.freeze({__proto__:null,json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]});class fl{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[Qu,el,tl,nl,rl,al,sl,ul,il,ol,ll,pl,cl,dl,hl,ml].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")&&r.push(e[t.name]),"Const"===t.op&&a.push(e[t.name]),e),{});let o=[];const i=[];let u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const p=Object.keys(s);p.forEach(e=>{const t=s[e];t.inputNames.forEach(e=>{const[n]=Yu(e);t.inputs.push(s[n]),s[n].children.push(t)})}),0===Object.keys(l).length?p.forEach(e=>{const t=s[e];0===t.children.length&&i.push(t)}):Object.keys(l).forEach(e=>{const[t]=Yu(e),n=s[t];null!=n&&(n.signatureKey=l[e],i.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{const[t]=Yu(e),n=s[t];n&&(n.signatureKey=u[e],o.push(n))}):o=r;let c={};return null!=e.library&&null!=e.library.function&&(c=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{})),{nodes:s,inputs:o,outputs:i,weights:a,placeholders:r,signature:t,functions:c}}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=ju(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=gl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=gl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=El(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=El(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=wl(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=wl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=_l(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_l(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=bl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=bl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Dl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Dl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Il(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Il(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Tl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Tl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=vl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=vl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Nl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Nl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=kl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=kl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=Yu(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:xl(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n});Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach(e=>{const[n]=Yu(e);t.inputs.push(r[n]),r[n].children.push(t)})});const o=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Yu(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function yl(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=u().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function gl(e,t,n,r=!1){const a=e[t];return null!=a?yl(a.s,r):n}function bl(e,t,n){const r=e[t];return r?r.b:n}function wl(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function xl(e){switch("string"==typeof e&&(e=Wu[e]),e){case Wu.DT_FLOAT:return"float32";case Wu.DT_INT32:case Wu.DT_INT64:case Wu.DT_INT8:case Wu.DT_UINT8:return"int32";case Wu.DT_BOOL:return"bool";case Wu.DT_DOUBLE:return"float32";case Wu.DT_STRING:return"string";default:return null}}function kl(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function vl(e,t,n){const r=e[t];return r&&r.type?xl(r.type):n}function Nl(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>xl(e)):n}function Sl(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function Il(e,t,n){const r=e[t];return r&&r.shape?Sl(r.shape):n}function _l(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function El(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>yl(e,r)):n}function Tl(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>Sl(e)):n}function Dl(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Ml{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Ku(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Ku(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return wl(this.node.rawAttrs,e,t);if(null!=n.s)return gl(this.node.rawAttrs,e,t);if(null!=n.b)return bl(this.node.rawAttrs,e,t);if(null!=n.shape)return Il(this.node.rawAttrs,e,t);if(null!=n.type)return vl(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return _l(this.node.rawAttrs,e,t);if(null!=n.list.s)return El(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Tl(this.node.rawAttrs,e,t);if(null!=n.list.b)return Dl(this.node.rawAttrs,e,t);if(null!=n.list.type)return Nl(this.node.rawAttrs,e,t)}return t}}function Al(e,t,n=""){v(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),()=>n+` Shapes ${e} and ${t} must match`)}class Fl{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=_e(0),Wa(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(){this.tensors.forEach(e=>e.tensor.dispose()),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Al(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Wa(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Dr([],[0].concat(this.elementShape));const n=this.readMany(e);return Al(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Ur(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Dr([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Al(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Mr(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ci(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Va(()=>{t=t.reshape([1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=Vr(t,o,i).reshape(this.elementShape)}return s});const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class $l{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Al(t,e.shape,"TensorList shape mismatch: "),Wa(e)}),this.idTensor=_e(0),this.maxNumElements=r,Wa(this.idTensor)}get id(){return this.idTensor.id}copy(){return new $l([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(){this.tensors.forEach(e=>e.dispose()),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return Al(e,this.elementShape,"TensorList shape mismatch: "),Va(()=>{const t=this.tensors.map(t=>t.reshape(e));return Ur(t,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return Al(n.shape,e,"TensorList shape mismatch: "),n.reshape(e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Al(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Wa(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return Al(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Al(this.elementShape,t.shape,"TensorList shape mismatch: "),Wa(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return Al(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?Dr([],[0].concat(this.elementShape)):Va(()=>{const t=e.map(e=>this.tensors[e].reshape(n));return Ur(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return Al(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?Dr([],[0].concat(this.elementShape)):Va(()=>{const e=this.tensors.map(e=>e.reshape(t));return Mr(e,0)})}}const Ol=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Gu("thenBranch",e,t,n),a=Gu("elseBranch",e,t,n),s=Gu("cond",e,t,n),o=Gu("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Gu("body",e,t,n),a=Gu("cond",e,t,n),s=Gu("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map(e=>e.id);let u=await o[0].data();o.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()});let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[Gu("pred",e,t,n).clone()];case"Switch":{const r=Gu("pred",e,t,n),a=Gu("data",e,t,n);return(await r.data())[0]?[void 0,a.clone()]:[a.clone(),void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==Ku(e,t,n));return r?[Ku(r,t,n).clone()]:void 0}case"Enter":{const r=Gu("frameName",e,t,n),a=Gu("tensor",e,t,n);return n.enterFrame(r),[a.clone()]}case"Exit":{const r=Gu("tensor",e,t,n);return n.exitFrame(),[r.clone()]}case"NextIteration":{const r=Gu("tensor",e,t,n);return n.nextIteration(),[r.clone()]}case"TensorArrayV3":{const r=Gu("size",e,t,n),a=Gu("dtype",e,t,n),s=Gu("elementShape",e,t,n),o=Gu("dynamicSize",e,t,n),i=Gu("clearAfterRead",e,t,n),u=Gu("identicalElementShapes",e,t,n),l=Gu("name",e,t,n),p=new Fl(l,a,r,s,u,o,i);return n.addTensorArray(p),[p.idTensor,_e(1)]}case"TensorArrayWriteV3":{const r=Gu("tensorArrayId",e,t,n),a=Gu("index",e,t,n),s=Gu("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=Gu("tensorArrayId",e,t,n),a=Gu("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Gu("tensorArrayId",e,t,n),a=Gu("indices",e,t,n),s=Gu("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Gu("tensorArrayId",e,t,n),a=Gu("indices",e,t,n),s=Gu("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=Gu("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Gu("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Gu("tensorArrayId",e,t,n),a=Gu("tensor",e,t,n),s=Gu("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=Gu("tensorArrayId",e,t,n);return[_e(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Gu("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Gu("tensorListId",e,t,n),a=Gu("index",e,t,n),s=Gu("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=Gu("tensorListId",e,t,n),a=Gu("index",e,t,n),s=Gu("elementShape",e,t,n),o=Gu("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Gu("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new $l([],n,e.dtype,r),o=ci(e,0);return t.forEach((e,t)=>{s.setItem(e,o[t])}),s}(Gu("tensor",e,t,n),r,Gu("elementShape",e,t,n),Gu("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":{const r=function(e,t,n){return new $l([],e,t,n)}(Gu("elementShape",e,t,n),Gu("elementDType",e,t,n),Gu("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListGather":{const r=Gu("tensorListId",e,t,n),a=Gu("indices",e,t,n),s=Gu("elementShape",e,t,n),o=Gu("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=Gu("tensorListId",e,t,n),a=Gu("elementShape",e,t,n),s=Gu("elementDType",e,t,n),o=Gu("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Al(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=e.unstack();return new $l(a,t,r)}(Gu("tensor",e,t,n),Gu("elementShape",e,t,n),Gu("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Gu("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Gu("dtype",e,t,n),o=Gu("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=Gu("tensorListId",e,t,n),a=Gu("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Gu("tensorListId",e,t,n),a=Gu("elementShape",e,t,n),s=Gu("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Gu("tensor",e,t,n),a=Gu("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=0===r?0:e.size/r,o=Va(()=>{const o=[];e=e.reshape([1,r,s]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],s];o[r]=Vr(e,i,u).reshape(n)}return e.dispose(),o}),i=new $l([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)i.setItem(e,o[e]);return i}(r,Gu("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Cl(e,t,n){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return Va(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Ve(Gu("a",e,t,n),Gu("b",e,t,n))];case"AddN":return[Ga(Gu("tensors",e,t,n))];case"FloorMod":case"Mod":return[oo(Gu("a",e,t,n),Gu("b",e,t,n))];case"Mul":return[we(Gu("a",e,t,n),Gu("b",e,t,n))];case"RealDiv":case"Div":return[Ne(Gu("a",e,t,n),Gu("b",e,t,n))];case"DivNoNan":return[Ts(Gu("a",e,t,n),Gu("b",e,t,n))];case"FloorDiv":return[ve(Gu("a",e,t,n),Gu("b",e,t,n))];case"Sub":return[De(Gu("a",e,t,n),Gu("b",e,t,n))];case"Minimum":return[so(Gu("a",e,t,n),Gu("b",e,t,n))];case"Maximum":return[Yr(Gu("a",e,t,n),Gu("b",e,t,n))];case"Pow":return[Un(Gu("a",e,t,n),Gu("b",e,t,n))];case"SquaredDifference":return[ai(Gu("a",e,t,n),Gu("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return Va(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Ha(Gu("x",e,t,n))];case"Acos":return[Ua(Gu("x",e,t,n))];case"Acosh":return[ja(Gu("x",e,t,n))];case"Asin":return[Za(Gu("x",e,t,n))];case"Asinh":return[Qa(Gu("x",e,t,n))];case"Atan":return[es(Gu("x",e,t,n))];case"Atan2":return[ts(Gu("x",e,t,n),Gu("y",e,t,n))];case"Atanh":return[ns(Gu("x",e,t,n))];case"Ceil":return[ms(Gu("x",e,t,n))];case"Complex":return[Pn(Gu("real",e,t,n),Gu("imag",e,t,n))];case"Cos":return[pr(Gu("x",e,t,n))];case"Cosh":return[dr(Gu("x",e,t,n))];case"Elu":return[Ms(Gu("x",e,t,n))];case"Erf":return[As(Gu("x",e,t,n))];case"Exp":return[Qt(Gu("x",e,t,n))];case"Expm1":return[Fs(Gu("x",e,t,n))];case"Floor":return[Cn(Gu("x",e,t,n))];case"Log":return[Hn(Gu("x",e,t,n))];case"Log1p":return[js(Gu("x",e,t,n))];case"Imag":return[Bs(Gu("x",e,t,n))];case"Neg":return[Se(Gu("x",e,t,n))];case"Reciprocal":return[Po(Gu("x",e,t,n))];case"Real":return[zs(Gu("x",e,t,n))];case"Relu":return[Lo(Gu("x",e,t,n))];case"Round":return[Go(Gu("x",e,t,n))];case"Selu":return[Ko(Gu("x",e,t,n))];case"Sigmoid":return[Sr(Gu("x",e,t,n))];case"Sin":return[Lt(Gu("x",e,t,n))];case"Sign":return[Jo(Gu("x",e,t,n))];case"Sinh":return[qt(Gu("x",e,t,n))];case"Softplus":return[ri(Gu("x",e,t,n))];case"Sqrt":return[Ee(Gu("x",e,t,n))];case"Square":return[Te(Gu("x",e,t,n))];case"Tanh":return[ss(Gu("x",e,t,n))];case"Tan":return[ii(Gu("x",e,t,n))];case"Relu6":case"ClipByValue":return[fs(Gu("x",e,t,n),Gu("clipValueMin",e,t,n),Gu("clipValueMax",e,t,n))];case"Rsqrt":return[sn(Ku(e.inputNames[0],t,n))];case"Prod":return[xo(Gu("x",e,t,n),Gu("axes",e,t,n))];case"LeakyRelu":return[Ws(Gu("x",e,t,n),Gu("alpha",e,t,n))];case"Prelu":return[wo(Gu("x",e,t,n),Gu("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return Ol(e,t,n);case"convolution":return Va(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Gu("stride",e,t,n),a=Gu("pad",e,t,n),s=Gu("dataFormat",e,t,n).toUpperCase(),o=Gu("dilation",e,t,n);return[xs(Gu("x",e,t,n),Gu("filter",e,t,n),r,a,s,o)]}case"Conv2D":{const r=Gu("strides",e,t,n),a=Zu(e,t,n),s=Gu("dataFormat",e,t,n).toUpperCase(),o=Gu("dilations",e,t,n);return[Ct(Gu("x",e,t,n),Gu("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":case"FusedDepthwiseConv2dNative":{const[r,a]=Gu("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i="fusedbatchnorm"===r,u=Gu("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Gu("strides",e,t,n),p=Zu(e,t,n),c=Gu("dataFormat",e,t,n).toUpperCase(),d=Gu("dilations",e,t,n),[h,m]=Gu("args",e,t,n);return[("_FusedConv2D"===e.op?qi:Wi)({x:Gu("x",e,t,n),filter:Gu("filter",e,t,n),strides:[l[1],l[2]],pad:p,dataFormat:c,dilations:[d[1],d[2]],bias:h,activation:a,preluActivationWeights:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Gu("outputShape",e,t,n),a=Gu("strides",e,t,n),s=Zu(e,t,n);return[ks(Gu("x",e,t,n),Gu("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Gu("strides",e,t,n),a=Zu(e,t,n),s=Gu("dilations",e,t,n),o=Gu("dataFormat",e,t,n).toUpperCase();return[Is(Gu("input",e,t,n),Gu("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const r=Gu("strides",e,t,n),a=Gu("pad",e,t,n),s=Gu("dataFormat",e,t,n).toUpperCase(),o=Gu("dilations",e,t,n);return[vs(Gu("x",e,t,n),Gu("filter",e,t,n),[r[1],r[2],r[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Gu("strides",e,t,n),a=Gu("pad",e,t,n),s=Gu("kernelSize",e,t,n);return[rs(Gu("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Gu("strides",e,t,n),a=Gu("pad",e,t,n),s=Gu("kernelSize",e,t,n);return[eo(Gu("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Gu("strides",e,t,n),a=Gu("pad",e,t,n),s=Gu("kernelSize",e,t,n),o=Gu("includeBatchInIndex",e,t,n),{result:i,indexes:u}=no(Gu("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,o);return[i,u]}case"AvgPool3D":{const r=Gu("strides",e,t,n),a=Gu("pad",e,t,n),s=Gu("kernelSize",e,t,n);return[as(Gu("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Gu("strides",e,t,n),a=Gu("pad",e,t,n),s=Gu("kernelSize",e,t,n);return[to(Gu("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Gu("strides",e,t,n),a=Gu("pad",e,t,n),s=Gu("dilations",e,t,n),o=r[1],i=r[2],u=s[1],l=s[2];return[Es(Gu("x",e,t,n),Gu("filter",e,t,n),[o,i],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return Va(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Gu("shape",e,t,n),a=Gu("dtype",e,t,n);return[Cs(r,Gu("value",e,t,n),a)]}case"LinSpace":return[Hs(Gu("start",e,t,n),Gu("stop",e,t,n),Gu("num",e,t,n))];case"Multinomial":{const r=Gu("logits",e,t,n),a=Gu("numSamples",e,t,n),s=Gu("seed",e,t,n);return[lo(r,a,s)]}case"OneHot":{const r=Gu("indices",e,t,n),a=Gu("depth",e,t,n),s=Gu("onValue",e,t,n),o=Gu("offValue",e,t,n);return[$a(r,a,s,o)]}case"Ones":return[Br(Gu("shape",e,t,n),Gu("dtype",e,t,n))];case"OnesLike":return[co(Gu("x",e,t,n))];case"RandomUniform":return[Ro(Gu("shape",e,t,n),Gu("minval",e,t,n),Gu("maxval",e,t,n),Gu("dtype",e,t,n))];case"Range":return[zo(Gu("start",e,t,n),Gu("stop",e,t,n),Gu("step",e,t,n),Gu("dtype",e,t,n))];case"TruncatedNormal":{const r=Gu("shape",e,t,n),a=Gu("mean",e,t,n),s=Gu("stdDev",e,t,n),o=Gu("seed",e,t,n);return[pi(r,a,s,Gu("dtype",e,t,n),o)]}case"Zeros":return[Ln(Gu("shape",e,t,n),Gu("dtype",e,t,n))];case"ZerosLike":return[Be(Gu("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":case"NonMaxSuppressionV4":case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const r=Gu("boxes",e,t,n),a=Gu("scores",e,t,n),s=Gu("maxOutputSize",e,t,n),o=Gu("iouThreshold",e,t,n),i=Gu("scoreThreshold",e,t,n);if("NonMaxSuppressionV5"===e.op){const u=Gu("softNmsSigma",e,t,n),l=await Du.nonMaxSuppressionWithScoreAsync(r,a,s,o,i,u);return[l.selectedIndices,l.selectedScores]}if("NonMaxSuppressionV4"===e.op){const u=Gu("padToMaxOutputSize",e,t,n),l=await Du.nonMaxSuppressionPaddedAsync(r,a,s,o,i,u);return[l.selectedIndices,l.validOutputs]}return[await Du.nonMaxSuppressionAsync(r,a,s,o,i)]}case"Where":{const r=Gu("condition",e,t,n).asType("bool"),a=[await di(r)];return r.dispose(),a}case"ListDiff":return Xo(Gu("x",e,t,n),Gu("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Va(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Gu("x",e,t,n),a=Gu("k",e,t,n),s=Gu("sorted",e,t,n),o=li(r,a,s);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return Va(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Gu("images",e,t,n),a=Gu("size",e,t,n),s=Gu("alignCorners",e,t,n);return[Du.resizeBilinear(r,[a[0],a[1]],s)]}case"ResizeNearestNeighbor":{const r=Gu("images",e,t,n),a=Gu("size",e,t,n),s=Gu("alignCorners",e,t,n);return[Du.resizeNearestNeighbor(r,[a[0],a[1]],s)]}case"CropAndResize":{const r=Gu("image",e,t,n),a=Gu("boxes",e,t,n),s=Gu("boxInd",e,t,n),o=Gu("cropSize",e,t,n),i=Gu("method",e,t,n),u=Gu("extrapolationValue",e,t,n);return[Du.cropAndResize(r,a,s,o,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return Va(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Gu("default",e,t,n);return[Ku(e.name,t,n)||r];case"Placeholder":return[Ku(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Gu("x",e,t,n).clone()];case"IdentityN":return Gu("x",e,t,n).map(e=>e.clone());case"Snapshot":return[Gu("x",e,t,n).clone()];case"Shape":return[Bo(Gu("x",e,t,n).shape,"int32")];case"ShapeN":return Gu("x",e,t,n).map(e=>Bo(e.shape));case"Size":return[_e(Gu("x",e,t,n).size,"int32")];case"Rank":return[_e(Gu("x",e,t,n).rank,"int32")];case"NoOp":return[_e(1)];case"Print":const a=Gu("x",e,t,n),s=Gu("data",e,t,n),o=Gu("message",e,t,n),i=Gu("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return Va(()=>((e,t,n)=>{switch(e.op){case"Equal":return[Nn(Gu("a",e,t,n),Gu("b",e,t,n))];case"NotEqual":return[po(Gu("a",e,t,n),Gu("b",e,t,n))];case"Greater":return[$n(Gu("a",e,t,n),Gu("b",e,t,n))];case"GreaterEqual":return[St(Gu("a",e,t,n),Gu("b",e,t,n))];case"Less":return[_n(Gu("a",e,t,n),Gu("b",e,t,n))];case"LessEqual":return[It(Gu("a",e,t,n),Gu("b",e,t,n))];case"LogicalAnd":return[_t(Gu("a",e,t,n),Gu("b",e,t,n))];case"LogicalNot":return[sr(Gu("a",e,t,n))];case"LogicalOr":return[Zs(Gu("a",e,t,n),Gu("b",e,t,n))];case"Select":case"SelectV2":return[Et(Gu("condition",e,t,n),Gu("a",e,t,n),Gu("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return Va(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[gt(Gu("a",e,t,n),Gu("b",e,t,n),Gu("transposeA",e,t,n),Gu("transposeB",e,t,n))];case"Transpose":return[Ht(Gu("x",e,t,n),Gu("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Gu("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i=Gu("numArgs",e,t,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=Gu("args",e,t,n);return[Hi({a:Gu("a",e,t,n),b:Gu("b",e,t,n),transposeA:Gu("transposeA",e,t,n),transposeB:Gu("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return Va(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[us(Gu("x",e,t,n),Gu("mean",e,t,n),Gu("variance",e,t,n),Gu("offset",e,t,n),Gu("scale",e,t,n),Gu("epsilon",e,t,n))];case"LRN":return[Us(Gu("x",e,t,n),Gu("radius",e,t,n),Gu("bias",e,t,n),Gu("alpha",e,t,n),Gu("beta",e,t,n))];case"Softmax":return[ni(Gu("x",e,t,n))];case"LogSoftmax":return[Xs(Gu("x",e,t,n))];case"SparseToDense":return[Fi(Gu("sparseIndices",e,t,n),Gu("outputShape",e,t,n),Gu("sparseValues",e,t,n),Gu("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return Va(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Gu("axis",e,t,n),a=Gu("keepDims",e,t,n);return[Ys(Gu("x",e,t,n),r,a)]}case"Mean":{const r=Gu("axis",e,t,n),a=Gu("keepDims",e,t,n);return[ro(Gu("x",e,t,n),r,a)]}case"Min":{const r=Gu("axis",e,t,n),a=Gu("keepDims",e,t,n);return[ao(Gu("x",e,t,n),r,a)]}case"Sum":{const r=Gu("axis",e,t,n),a=Gu("keepDims",e,t,n);return[Je(Gu("x",e,t,n),r,a)]}case"All":{const r=Gu("axis",e,t,n),a=Gu("keepDims",e,t,n);return[Ka(Gu("x",e,t,n),r,a)]}case"Any":{const r=Gu("axis",e,t,n),a=Gu("keepDims",e,t,n);return[Ya(Gu("x",e,t,n),r,a)]}case"ArgMax":{const r=Gu("axis",e,t,n);return[Xa(Gu("x",e,t,n),r)]}case"ArgMin":{const r=Gu("axis",e,t,n);return[Ja(Gu("x",e,t,n),r)]}case"Prod":{const r=Gu("axis",e,t,n),a=Gu("keepDims",e,t,n);return[xo(Gu("x",e,t,n),r,a)]}case"Cumsum":{const r=Gu("axis",e,t,n),a=Gu("exclusive",e,t,n),s=Gu("reverse",e,t,n);return[Ut(Gu("x",e,t,n),r,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return Va(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Gu("n",e,t,n),a=Gu("axis",e,t,n);let s=Gu("tensors",e,t,n);return s=s.slice(0,r),[Mr(s,a)]}case"GatherV2":case"Gather":{const r=Gu("axis",e,t,n),a=Gu("x",e,t,n),s=Gu("indices",e,t,n);return[Kr(a,s.asType("int32"),r)]}case"ReverseV2":case"Reverse":{const r=Gu("axis",e,t,n),a=Gu("x",e,t,n);return[tr(a,r)]}case"Slice":{const r=Gu("begin",e,t,n),a=Gu("size",e,t,n);return[Vr(Gu("x",e,t,n),r,a)]}case"StridedSlice":{const r=Gu("begin",e,t,n),a=Gu("end",e,t,n),s=Gu("strides",e,t,n),o=Gu("beginMask",e,t,n),i=Gu("endMask",e,t,n),u=Gu("ellipsisMask",e,t,n),l=Gu("newAxisMask",e,t,n),p=Gu("shrinkAxisMask",e,t,n),c=Gu("x",e,t,n);return[oi(c,r,a,s,o,i,u,l,p)]}case"Pack":return Va(()=>{const r=Gu("axis",e,t,n),a=Gu("tensors",e,t,n),s=a[0].shape,o=a[0].squeeze().shape,i=a.map(e=>{const t=E(e.shape,s);if(!t&&!E(e.squeeze().shape,o))throw new Error("the input tensors shape does not match");return t?e:e.reshape(s)});return[Ur(i,r)]});case"Unpack":return Va(()=>{const r=Gu("axis",e,t,n),a=Gu("tensor",e,t,n);return ci(a,r)});case"Tile":{const r=Gu("reps",e,t,n);return[on(Gu("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Gu("axis",e,t,n),a=Gu("numOrSizeSplits",e,t,n),s=Gu("x",e,t,n);return Mt(s,a,r)}case"ScatterNd":{const r=Gu("indices",e,t,n),a=Gu("values",e,t,n),s=Gu("shape",e,t,n);return[Ai(r,a,s)]}case"GatherNd":{const r=Gu("x",e,t,n),a=Gu("indices",e,t,n);return[$i(r,a)]}case"SparseToDense":{const r=Gu("sparseIndices",e,t,n),a=Gu("outputShape",e,t,n),s=Gu("sparseValues",e,t,n),o=Gu("defaultValue",e,t,n);return[Fi(r,s,a,s.dtype===o.dtype?o:o.asType(s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return Va(()=>((e,t,n)=>{switch(e.op){case"FFT":return[Os(Gu("x",e,t,n))];case"IFFT":return[Rs(Gu("x",e,t,n))];case"RFFT":return[jo(Gu("x",e,t,n))];case"IRFFT":return[Ps(Gu("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return Va(()=>((e,t,n)=>{switch(e.op){case"Cast":return[be(Gu("x",e,t,n),Gu("dtype",e,t,n))];case"ExpandDims":{const r=Gu("axis",e,t,n);return[Hr(Gu("x",e,t,n),r)]}case"Squeeze":{const r=Gu("axis",e,t,n);return[si(Gu("x",e,t,n),r)]}case"Reshape":return[We(Gu("x",e,t,n),Gu("shape",e,t,n))];case"PadV2":case"Pad":return[mr(Gu("x",e,t,n),Gu("padding",e,t,n),Gu("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Gu("blockShape",e,t,n),a=Gu("paddings",e,t,n);return[wt(Gu("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Gu("blockShape",e,t,n),a=Gu("crops",e,t,n);return[_r(Gu("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Gu("blockSize",e,t,n),a=Gu("dataFormat",e,t,n).toUpperCase();return[Ss(Gu("x",e,t,n),r,a)]}case"BroadcastTo":return[ds(Gu("x",e,t,n),Gu("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"custom":const r=ju(e.op);if(r&&r.customExecutor)return r.customExecutor(new Ml(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return r instanceof Promise?r.then(e=>[].concat(e)):[].concat(r)}class Rl{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose();for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose()}}function Bl(e,t,n){const r=new Set,a=[];let s=null,o=null;const i=new Set,u=Object.keys(e).map(e=>Ju(e)[0]),l=[...t];for(;l.length>0;){const e=l.pop();(Ll(e)||Vl(e))&&null==s&&(s=e,o=s.children.map(e=>e.name).filter(e=>r.has(e))),r.add(e.name),null==n[e.name]&&(-1===u.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{i.has(e.name)||(i.add(e.name),l.push(e))}):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:s,syncInputs:o}}const zl=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Pl=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function Ll(e){return zl.indexOf(e.op)>=0}function Vl(e){return Pl.indexOf(e.op)>=0}class ql{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new ql(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Bl(e,t,this.weightMap),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[];Object.keys(a).map(e=>Ju(e)[0]).map(t=>e.nodes[t]).forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)});const o=new Set,i=[];for(;s.length>0;){const e=s.pop();o.add(e.name),t[e.name]||i.push(e),e.children.forEach(e=>{!o.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>o.has(e.name))&&s.push(e)})}return i}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[Ju(e)[0]]),a=t.map(e=>this.graph.nodes[Ju(e)[0]]),s=this.getCompilationKey(r,a);let o=this.compiledMap.get(s);null==o&&(o=this.compile(e,a),this.compiledMap.set(s,o));const i={},u={};return Va(()=>{const n=new Rl(this.weightMap,i,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=Ju(t),s=[];s[a]=e[t],r[n]=s});const a=this.getFrozenTensorIds(r),s={};for(let e=0;e<o.length;e++){const i=o[e];if(!r[i.name]){const e=Cl(i,r,n);if(e instanceof Promise)throw new Error(`The execution of the op '${i.op}' returned a promise. Please use model.executeAsync() instead.`);r[i.name]=e,this.checkTensorForDisposal(i.name,i,r,n,a,t,s)}}return null==this.parent&&n.dispose(),t.map(e=>Ku(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=function(e,t,n){return t[Xu(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!a.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new Rl(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(e,s,t,n),i=t.map(e=>Ku(e,o,s)),u=new Set(i.map(e=>e.id)),l=new Set(Object.keys(e).map(t=>e[t].id));return Object.keys(o).forEach(e=>{o[e].forEach(e=>{!e||e.isDisposed||u.has(e.id)||l.has(e.id)||-1!==this.weightIds.indexOf(e.id)||e.dispose()})}),null==this.parent&&s.dispose(),i}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[Ju(e)[0]]),o=n.map(e=>this.graph.nodes[Ju(e)[0]]),{usedNodes:i,missingInputs:u,dynamicNode:l,syncInputs:p}=Bl(e,o,this.weightMap),c=[...s,...this.graph.weights].map(e=>({node:e,contexts:t.currentContext})),d=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Ju(t),a=[];a[r]=e[t],d[n]=a});const h={},m=this.getFrozenTensorIds(d),f={};for(;c.length>0;){const e=this.processStack(s,c,t,d,f,m,n,h,i);await Promise.all(e)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter(e=>!Ll(e)&&!Ku(e.name,d,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=l&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const p=t.pop();n.currentContext=p.contexts;let c="";if("Enter"===p.node.op&&Gu("isConstant",p.node,r,n)&&([c]=Yu(p.node.name,n)),-1===e.indexOf(p.node)){const e=Cl(p.node,r,n);c||([c]=Yu(p.node.name,n));const d=n.currentContext;e instanceof Promise?l.push(e.then(e=>(r[c]=e,n.currentContext=d,this.checkTensorForDisposal(c,p.node,r,n,s,o,i),this.processChildNodes(p.node,t,n,r,a,u),e))):(r[c]=e,this.checkTensorForDisposal(c,p.node,r,n,s,o,i),this.processChildNodes(p.node,t,n,r,a,u))}else this.processChildNodes(p.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[o]=Yu(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!Ku(e,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!Ku(e,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=Ju(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;v(e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t),()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&v(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Ju(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e},{})}checkOutputs(e){e.forEach(e=>{const[t]=Ju(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class Wl{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={})}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Fa(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,ia.getLoadHandlers(t,n));if(0===r.length)r.push(Fa(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,o=s.dtype,i=s.shape,u=_(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=ta[n.dtype],p=e.slice(a,a+u*i),c="uint8"===n.dtype?new Uint8Array(p):new Uint16Array(p);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=oa()),l=r(c)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*i}else if("string"===o){const t=_(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=ta[o],s=e.slice(a,a+u*r);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Dr(e,i,"float32"),o=Dr(r,i,"float32");n[t]=Pn(a,o)}}a+=u*r}"complex64"!==o&&(n[t]=Dr(l,i,o))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);return this.executor=new ql(fl.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),!0}async save(e,t){if("string"==typeof e){const t=(n=e,ia.getSaveHandlers(n));if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Q||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose()}}const Hl=e=>({startEndTensor:e,startPoint:Vr(e,[0,0],[-1,2]),endPoint:Vr(e,[0,2],[-1,2])}),Ul={strides:[8,16],anchors:[2,6]};function jl(e,t){let n,r,a;if(e.topLeft instanceof Q&&e.bottomRight instanceof Q){const[s,o]=Va(()=>[Mr([De(t-1,e.topLeft.slice(0,1)),e.topLeft.slice(1,1)]),Mr([De(t-1,e.bottomRight.slice(0,1)),e.bottomRight.slice(1,1)])]);n=s,r=o,null!=e.landmarks&&(a=Va(()=>{const n=De(Bo([t-1,0]),e.landmarks),r=Bo([1,-1]);return we(n,r)}))}else{const[s,o]=e.topLeft,[i,u]=e.bottomRight;n=[t-1-s,o],r=[t-1-i,u],null!=e.landmarks&&(a=e.landmarks.map(e=>[t-1-e[0],e[1]]))}const s={topLeft:n,bottomRight:r};return null!=a&&(s.landmarks=a),null!=e.probability&&(s.probability=e.probability instanceof Q?e.probability.clone():e.probability),s}function Gl(e,t){return Va(()=>{let n;return n=e.hasOwnProperty("box")?e.box:e,((e,t)=>{const n=we(e.startPoint,t),r=we(e.endPoint,t),a=gs([n,r],1);return Hl(a)})(n,t).startEndTensor.squeeze()})}class Kl{constructor(e,t,n,r,a,s){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){const r=[];for(let a=0;a<n.strides.length;a++){const s=n.strides[a],o=Math.floor((t+s-1)/s),i=Math.floor((e+s-1)/s),u=n.anchors[a];for(let e=0;e<o;e++){const t=s*(e+.5);for(let e=0;e<i;e++){const n=s*(e+.5);for(let e=0;e<u;e++)r.push([n,t])}}}return r}(t,n,Ul),this.anchors=ui(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=Bo([t,n]),this.iouThreshold=a,this.scoreThreshold=s}async getBoundingBoxes(e,t,n=!0){const[r,a,s]=Va(()=>{const t=e.resizeBilinear([this.width,this.height]),n=we(De(t.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),a=function(e,t,n){const r=Vr(e,[0,1],[-1,2]),a=Ve(r,t),s=Vr(e,[0,3],[-1,2]),o=Ne(s,n),i=Ne(a,n),u=Ne(o,2),l=De(i,u),p=Ve(i,u),c=we(l,n),d=we(p,n);return gs([c,d],1)}(r,this.anchors,this.inputSize),s=Vr(r,[0,0],[-1,1]);return[r,a,Sr(s).squeeze()]}),o=console.warn;console.warn=()=>{};const i=Du.nonMaxSuppression(a,s,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=o;const u=await i.array();i.dispose();let l=u.map(e=>Vr(a,[e,0],[1,-1]));t||(l=await Promise.all(l.map(async e=>{const t=await e.array();return e.dispose(),t})));const p=e.shape[1],c=e.shape[2];let d;d=t?Ne([c,p],this.inputSize):[c/this.inputSizeData[0],p/this.inputSizeData[1]];const h=[];for(let e=0;e<l.length;e++){const a=l[e],o=Va(()=>{const o=Hl(a instanceof Q?a:ui(a));if(!n)return o;const i=u[e];let l;return l=t?this.anchors.slice([i,0],[1,2]):this.anchorsData[i],{box:o,landmarks:Vr(r,[i,5],[1,-1]).squeeze().reshape([6,-1]),probability:Vr(s,[i],[1]),anchor:l}});h.push(o)}return a.dispose(),s.dispose(),r.dispose(),{boxes:h,scaleFactor:d}}async estimateFaces(e,t=!1,n=!1,r=!0){const[,a]=function(e){return e instanceof Q?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),s=Va(()=>(e instanceof Q||(e=Ra(e)),e.toFloat().expandDims(0))),{boxes:o,scaleFactor:i}=await this.getBoundingBoxes(s,t,r);return s.dispose(),t?o.map(e=>{const t=Gl(e,i);let s={topLeft:t.slice([0],[2]),bottomRight:t.slice([2],[2])};if(r){const{landmarks:t,probability:n,anchor:r}=e,a=t.add(r).mul(i);s.landmarks=a,s.probability=n}return n&&(s=jl(s,a)),s}):Promise.all(o.map(async e=>{const t=Gl(e,i);let s;if(r){const[n,r,a]=await Promise.all([e.landmarks,t,e.probability].map(async e=>e.array())),o=e.anchor,[u,l]=i,p=n.map(e=>[(e[0]+o[0])*u,(e[1]+o[1])*l]);s={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:p,probability:a},(e=>{e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()})(e.box),e.landmarks.dispose(),e.probability.dispose()}else{const e=await t.array();s={topLeft:e.slice(0,2),bottomRight:e.slice(2)}}return t.dispose(),n&&(s=jl(s,a)),s}))}}async function Yl({maxFaces:e=10,inputWidth:t=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:a=.75}={}){const s=await async function(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new Wl(e,t);return await n.load(),n}("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new Kl(s,t,n,e,r,a)}var Xl,Jl;let Zl;var Ql;(Ql=Xl||(Xl={}))[Ql.float32=0]="float32",Ql[Ql.int32=1]="int32",Ql[Ql.bool=2]="bool",Ql[Ql.string=3]="string",Ql[Ql.complex64=4]="complex64",function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu"}(Jl||(Jl={}));const ep={kernelName:"_FusedMatMul",backendName:"wasm",setupFunc:function(e){Zl=e.wasm.cwrap("_FusedMatMul",null,["number","array","number","number","array","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:p}=r,c=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id;let h=0;if(null!=o){const e=n.dataIdMap.get(o.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);h=e.id}const m=null==i?0:n.dataIdMap.get(i.dataId).id,f=Jl[p];if(null==f)throw new Error(p+" activation not yet supported for FusedConv2D in the wasm backend.");const y=u?a.shape[2]:a.shape[1],g=l?s.shape[1]:s.shape[2],b=a.shape[0],w=n.makeOutput([b,y,g],a.dtype),x=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),v=new Uint8Array(new Int32Array(s.shape).buffer);return Zl(c,k,a.shape.length,d,v,s.shape.length,u,l,f,h,m,x),w}};function tp(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),o=n.dataIdMap.get(s.dataId).id;return 0===_(s.shape)||t(a,o),s}}}const np=tp("Abs");function rp(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:o}=a,{a:i,b:u}=o,l=s.dataIdMap.get(i.dataId).id,p=s.dataIdMap.get(u.dataId).id,c=null!=n?n:i.dtype,d=Oe(i.shape,u.shape),h=s.makeOutput(d,c);if(0===_(d))return h;const m=new Uint8Array(new Int32Array(i.shape).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer),y=s.dataIdMap.get(h.dataId).id,g=()=>r(l,m,i.shape.length,p,f,u.shape.length,Xl[i.dtype],y);if(t&&"float32"===i.dtype)return g(),h;const b=Fe(i.shape,d),w=Fe(u.shape,d),x=b.every((e,t)=>e===t),k=w.every((e,t)=>e===t);if(x&&k)return g(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${i.dtype} ${e}.`)}}}const ap=rp("Add",!0);let sp;const op={kernelName:"AddN",backendName:"wasm",setupFunc:function(e){sp=e.wasm.cwrap("AddN",null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===_(r.shape))return r;const a=t.map(e=>n.dataIdMap.get(e.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),o=n.dataIdMap.get(r.dataId).id;return sp(s,a.length,Xl[r.dtype],o),r}};function ip(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const up={kernelName:"Identity",backendName:"wasm",kernelFunc:ip};let lp;function pp(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let o=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(o=!1);const i=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(o){const e=ip({inputs:t,backend:n});return e.shape=i,e}const l=n.makeOutput(i,u.dtype),p=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(u.shape).buffer);return lp(p,h,u.shape.length,Xl[u.dtype],c,d,s.length),l}const cp={kernelName:"Transpose",backendName:"wasm",kernelFunc:pp,setupFunc:function(e){lp=e.wasm.cwrap("Transpose",null,["number","array","number","number","number","array","number"])}};function dp(e,t,n){const r=e.shape,a=e.shape.length,s=M(t,r);let o=s;const i=Ke(o,a);let u=null,l=!1;if(null!=i){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[i[e]];o=Xe(o.length,a),u=pp({inputs:{x:e},attrs:{perm:i},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:o,inputWasTransposed:l}}let hp;const mp={kernelName:"ArgMax",backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,o=t.dataIdMap.get(s.dataId).id;let i=o,u=s;const{transposed:l,axes:p,inputWasTransposed:c}=dp(s,a,t);if(c){const e=t.dataIdMap.get(l.dataId).id;e!==o&&(u=l,i=e)}const d=u.shape.slice(0,-1),h=t.makeOutput(d,"int32"),m=t.dataIdMap.get(h.dataId).id,f=_(h.shape),y=u.shape[p[0]];return hp(i,Xl[u.dtype],f,y,m),c&&t.disposeData(l.dataId),h},setupFunc:function(e){hp=e.wasm.cwrap("ArgMax",null,["number","number","number","number","number"])}};let fp;const yp={kernelName:"AvgPool",backendName:"wasm",setupFunc:function(e){fp=e.wasm.cwrap("AvgPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=n,p=tt(a.shape,o,i,1,u,l),c=p.filterHeight,d=p.filterWidth,h=p.padInfo.top,m=p.padInfo.right,f=p.padInfo.bottom,y=p.padInfo.left,g=p.strideHeight,b=p.strideWidth,w=p.inChannels;if("channelsLast"!==p.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+p.dataFormat+"'. Please use 'channelsLast'.");if(1!==p.dilationWidth||1!==p.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);const x=r.makeOutput(p.outShape,"float32"),k=r.dataIdMap.get(x.dataId).id;return fp(s,a.shape[0],a.shape[1],a.shape[2],c,d,h,m,f,y,g,b,w,k),x}};let gp;const bp={kernelName:"BatchMatMul",backendName:"wasm",setupFunc:function(e){gp=e.wasm.cwrap("BatchMatMul",null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const{transposeA:o,transposeB:i}=r,u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,p=o?a.shape[2]:a.shape[1],c=i?s.shape[1]:s.shape[2],d=a.shape[0],h=n.makeOutput([d,p,c],a.dtype),m=n.dataIdMap.get(h.dataId).id,f=new Uint8Array(new Int32Array(a.shape).buffer),y=new Uint8Array(new Int32Array(s.shape).buffer);return gp(u,f,a.shape.length,l,y,s.shape.length,o,i,m),h}};function wp(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const xp={kernelName:"Cast",backendName:"wasm",kernelFunc:wp};let kp;const vp={kernelName:"ClipByValue",backendName:"wasm",setupFunc:function(e){kp=e.wasm.cwrap("ClipByValue",null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r,i=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(u.dataId).id;return kp(i,s,o,l),u}},Np={kernelName:"Concat",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=M(e.attrs.axis,t[0].shape)[0],a=Tr(t.map(e=>e.shape),r),s=n.makeOutput(a,t[0].dtype),o=_(t[0].shape.slice(0,r));let i=0;const u=t.map(e=>{const t=_(e.shape.slice(r));return i+=t,t}),l=t.map(e=>n.typedArrayFromHeap(e)),p=n.typedArrayFromHeap(s);for(let e=0;e<o;e++){let t=e*i;for(let n=0;n<l.length;n++){const r=u[n],a=e*r,s=l[n].subarray(a,a+r);p.set(s,t),t+=r}}return s}};let Sp;const Ip={kernelName:"Conv2D",backendName:"wasm",setupFunc:function(e){Sp=e.wasm.cwrap("Conv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,o=r.dataIdMap.get(a.dataId).id,i=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:c,dataFormat:d}=n,h=dt(d),m=rt(a.shape,s.shape,u,l,p,c,!1,h),f=m.filterHeight,y=m.filterWidth,g=m.padInfo.top,b=m.padInfo.right,w=m.padInfo.bottom,x=m.padInfo.left,k=m.dilationHeight,v=m.dilationWidth,N=m.strideHeight,S=m.strideWidth,I=m.inChannels,_=m.outChannels,E="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error("wasm backend Conv2D does not support dataFormat:'"+m.dataFormat+"'. Please use 'channelsLast'.");const T=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(T.dataId).id;return Sp(o,a.shape[0],a.shape[1],a.shape[2],i,f,y,g,b,w,x,E,k,v,N,S,I,_,D),T}};let _p;const Ep={kernelName:"Conv2DBackpropInput",backendName:"wasm",setupFunc:function(e){_p=e.wasm.cwrap("Conv2DBackpropInput",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,inputShape:p}=r,c=dt(u),d=rt(p,s.shape,o,1,i,l,!1,c),{batchSize:h,filterHeight:m,filterWidth:f,inChannels:y,inHeight:g,inWidth:b,outChannels:w,outHeight:x,outWidth:k,strideHeight:v,strideWidth:N}=d,S=m-1-d.padInfo.top,I=f-1-d.padInfo.left,_="channelsLast"===d.dataFormat,E=R(d.inShape),T=R(a.shape),[D,M,A]=R(s.shape),F=E[0],$=_?E[1]:E[2],O=_?E[2]:1,C=_?1:E[1],B=T[0],z=_?T[1]:T[2],P=_?T[2]:1,L=_?1:T[1],V=t.makeOutput(d.inShape,"float32"),q=t.dataIdMap.get(V.dataId).id,W=t.dataIdMap.get(a.dataId).id,H=t.dataIdMap.get(s.dataId).id;return _p(W,H,h,m,f,g,b,y,x,k,w,v,N,S,I,D,M,A,F,$,O,C,B,z,P,L,q),V}},Tp=tp("Cos");var Dp;let Mp,Ap,Fp,$p,Op,Cp,Rp,Bp,zp,Pp,Lp,Vp,qp,Wp,Hp,Up,jp,Gp,Kp,Yp,Xp,Jp,Zp,Qp,ec;function tc(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:o}}function nc(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n;return{dataId:r.dataId,shape:a,dtype:r.dtype}}function rc(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,o]=kr(t,n,r),i=function(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}(t.shape,s,o),u=a.typedArrayFromHeap(t),l=a.makeOutput(o,t.dtype),p=a.typedArrayFromHeap(l),c=R(t.shape);if(i){const e=function(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}(s,c);return p.set(u.subarray(e,e+_(o))),l}const d=t.shape.length;return 2===d?function(e,t,n,r,a){let s=0;const o=r[0],i=r[1],u=o+a[0];for(let r=o;r<u;r++){const o=r*t+i;n.set(e.subarray(o,o+a[1]),s),s+=a[1]}}(u,c[0],p,s,o):3===d?function(e,t,n,r,a,s){let o=0;const i=a[0],u=a[1],l=a[2],p=i+s[0],c=u+s[1];for(let a=i;a<p;a++)for(let i=u;i<c;i++){const u=a*t+i*n+l;r.set(e.subarray(u,u+s[2]),o),o+=s[2]}}(u,c[0],c[1],p,s,o):4===d?function(e,t,n,r,a,s,o){let i=0;const u=s[0],l=s[1],p=s[2],c=u+o[0],d=l+o[1],h=p+o[2],m=s[3];for(let s=u;s<c;s++)for(let u=l;u<d;u++)for(let l=p;l<h;l++){const p=s*t+u*n+l*r+m;a.set(e.subarray(p,p+o[3]),i),i+=o[3]}}(u,c[0],c[1],c[2],p,s,o):function(e,t,n,r,a){const s=hs(a,t.dtype,n),o=hs(t.shape,t.dtype,e);for(let e=0;e<s.size;++e){const t=s.indexToLoc(e).map((e,t)=>e+r[t]);n[e]=o.get(...t)}}(u,t,p,s,o),l}!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Dp||(Dp={}));const ac=[np,ap,op,mp,yp,bp,xp,vp,Np,Ip,Ep,Tp,{kernelName:"CropAndResize",backendName:"wasm",setupFunc:function(e){Mp=e.wasm.cwrap("CropAndResize",null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:o}=r,{image:i,boxes:u,boxInd:l}=n,p=u.shape[0],[c,d]=o,h=[p,c,d,i.shape[3]];let m,f=t.dataIdMap.get(i.dataId);"float32"!==i.dtype&&(m=wp({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));const y=f.id,g=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,w=t.makeOutput(h,"float32"),x=t.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return Mp(y,g,b,p,k,c,d,Dp[a],s,x),null!=m&&t.disposeData(m.dataId),w}},{kernelName:"DepthwiseConv2dNative",backendName:"wasm",setupFunc:function(e){Ap=e.wasm.cwrap("DepthwiseConv2dNative",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,o=r.dataIdMap.get(a.dataId).id,i=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:c}=n,d=null==l?[1,1]:l,h=rt(a.shape,s.shape,u,d,p,c,!0),m=h.filterHeight,f=h.filterWidth,y=h.padInfo.top,g=h.padInfo.right,b=h.padInfo.bottom,w=h.padInfo.left,x=h.dilationHeight,k=h.dilationWidth,v=h.strideHeight,N=h.strideWidth,S=h.inChannels,I=h.outChannels,_="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'"+h.dataFormat+"'. Please use 'channelsLast'.");const E=r.makeOutput(h.outShape,"float32"),T=r.dataIdMap.get(E.dataId).id;return Ap(o,a.shape[0],a.shape[1],a.shape[2],i,m,f,y,g,b,w,_,x,k,v,N,S,I,T),E}},rp("Div",!0),rp("Equal",!1,"bool"),tp("Exp"),{kernelName:"Fill",backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}},rp("FloorDiv",!1),ep,{kernelName:"FusedBatchNorm",backendName:"wasm",setupFunc:function(e){Fp=e.wasm.cwrap("FusedBatchNorm",null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:o,variance:i,offset:u,scale:l}=n,p=t.dataIdMap.get(s.dataId).id,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=null!=u?t.dataIdMap.get(u.dataId).id:0,m=null!=l?t.dataIdMap.get(l.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(0===_(s.shape))return f;const y=t.dataIdMap.get(f.dataId).id;return Fp(p,c,d,h,m,a,y),f}},{kernelName:"FusedConv2D",backendName:"wasm",setupFunc:function(e){$p=e.wasm.cwrap("FusedConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dataFormat:c,dimRoundingMode:d,activation:h}=n,m=rt(a.shape,s.shape,u,p,l,d),f=Jl[h];if(null==f)throw new Error(h+" activation not yet supported for FusedConv2D in the wasm backend.");const y=r.dataIdMap.get(a.dataId).id,g=r.dataIdMap.get(s.dataId).id,b=m.outChannels;let w=0;if(null!=o){const e=r.dataIdMap.get(o.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);w=e.id}const x=m.filterHeight,k=m.filterWidth,v=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,I=m.padInfo.left,_=m.dilationHeight,E=m.dilationWidth,T=m.strideHeight,D=m.strideWidth,M=m.inChannels,A="SAME"===m.padInfo.type?1:0,F=m.batchSize,$=m.inHeight,O=m.inWidth;if("NHWC"!==c)throw new Error("wasm backend FusedConv2D does not support dataFormat:'"+c+"'. Please use 'NHWC'.");const C=r.makeOutput(m.outShape,"float32"),R=r.dataIdMap.get(C.dataId).id,B=null==i?0:r.dataIdMap.get(i.dataId).id;return $p(y,F,$,O,g,x,k,w,v,N,S,I,A,_,E,T,D,M,b,f,B,R),C}},{kernelName:"FusedDepthwiseConv2D",backendName:"wasm",setupFunc:function(e){Op=e.wasm.cwrap("FusedDepthwiseConv2D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dataFormat:c,dimRoundingMode:d,activation:h}=n,m=rt(a.shape,s.shape,u,p,l,d,!0),f=Jl[h];if(null==f)throw new Error(h+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");const y=r.dataIdMap.get(a.dataId).id,g=r.dataIdMap.get(s.dataId).id,b=m.outChannels;let w=0;if(null!=o){const e=r.dataIdMap.get(o.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);w=e.id}const x=m.filterHeight,k=m.filterWidth,v=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,I=m.padInfo.left,_=m.dilationHeight,E=m.dilationWidth,T=m.strideHeight,D=m.strideWidth,M=m.inChannels,A="SAME"===m.padInfo.type?1:0,F=m.batchSize,$=m.inHeight,O=m.inWidth;if("NHWC"!==c)throw new Error("wasm backend FusedDepthwiseConv2D does not support dataFormat:'"+c+"'. Please use 'NHWC'.");const C=r.makeOutput(m.outShape,"float32"),R=r.dataIdMap.get(C.dataId).id,B=null==i?0:r.dataIdMap.get(i.dataId).id;return Op(y,F,$,O,g,x,k,w,v,N,S,I,A,_,E,T,D,M,b,f,B,R),C}},{kernelName:"GatherNd",backendName:"wasm",setupFunc:function(e){Cp=e.wasm.cwrap("GatherNd",null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,o,i,u]=function(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let a=1;for(let e=0;e<n.length-1;++e)a*=n[e];const s=e.shape,o=n.slice();o.pop();let i=1;for(let t=r;t<e.rank;++t)i*=s[t],o.push(s[t]);const u=[...R(e.shape).map(e=>e/i),1].slice(0,r);return[o,a,i,u]}(r,a),l=t.makeOutput(s,r.dtype);if(0===o)return l;const p=a.shape,c=p[p.length-1],d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(u).buffer),f=t.dataIdMap.get(l.dataId).id;return Cp(d,Xl[r.dtype],h,o,c,i,m,f),l}},{kernelName:"GatherV2",backendName:"wasm",setupFunc:function(e){Rp=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:o}=r,i=a.shape.slice();i[o]=_(s.shape);const u=a.shape.length-1,l=t.makeOutput(i,a.dtype);if(0===_(a.shape))return l;const p=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=new Uint8Array(new Int32Array(R(a.shape)).buffer),m=new Uint8Array(new Int32Array(R(i)).buffer);Rp(p,Xl[a.dtype],h,u,c,o,m,d);const f=Gr(a,s,M(o,a.shape)[0]);return l.shape=f.outputShape,l}},rp("Greater",!1,"bool"),rp("GreaterEqual",!1,"bool"),up,rp("Less",!1,"bool"),rp("LessEqual",!1,"bool"),tp("Log"),rp("LogicalAnd",!1,"bool"),{kernelName:"Max",backendName:"wasm",setupFunc:function(e){Bp=e.wasm.cwrap("Max",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:o}=n;let i=t.dataIdMap.get(o.dataId).id,u=o;const{transposed:l,axes:p,originalAxes:c,inputWasTransposed:d}=dp(o,a,t);d&&(u=l,i=t.dataIdMap.get(l.dataId).id);Ge("max",p,u.shape.length);const[h,m]=Ue(u.shape,p),f=_(m),y=t.makeOutput(h,o.dtype);if(0!==_(u.shape)){const e=t.dataIdMap.get(y.dataId).id;Bp(i,f,e)}if(d&&t.disposeData(l.dataId),s){const e=je(y.shape,c);y.shape=e}return y}},rp("Maximum",!1),{kernelName:"MaxPool",backendName:"wasm",setupFunc:function(e){zp=e.wasm.cwrap("MaxPool",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=n,p=tt(a.shape,o,i,1,u,l),c=p.filterHeight,d=p.filterWidth,h=p.padInfo.top,m=p.padInfo.right,f=p.padInfo.bottom,y=p.padInfo.left,g=p.dilationHeight,b=p.dilationWidth,w=p.strideHeight,x=p.strideWidth,k=p.inChannels,v=p.outChannels;if("channelsLast"!==p.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+p.dataFormat+"'. Please use 'channelsLast'.");const N=r.makeOutput(p.outShape,"float32"),S=r.dataIdMap.get(N.dataId).id;return zp(s,a.shape[0],a.shape[1],a.shape[2],c,d,h,m,f,y,g,b,w,x,k,v,S),N}},{kernelName:"Min",backendName:"wasm",setupFunc:function(e){Pp=e.wasm.cwrap("Min",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id;let u=i,l=o;const{transposed:p,axes:c,originalAxes:d,inputWasTransposed:h}=dp(o,a,t);if(h){const e=t.dataIdMap.get(p.dataId).id;e!==i&&(l=p,u=e)}Ge("min",c,l.shape.length);const[m,f]=Ue(l.shape,c),y=_(f),g=t.makeOutput(m,l.dtype);if(0!==_(l.shape)){const e=t.dataIdMap.get(g.dataId).id;Pp(u,y,e)}if(h&&t.disposeData(p.dataId),s){const e=je(g.shape,d);g.shape=e}return g}},rp("Minimum",!1),rp("Multiply",!0),tp("Negate"),{kernelName:"NonMaxSuppressionV3",backendName:"wasm",setupFunc:function(e){Lp=e.wasm.cwrap("NonMaxSuppressionV3","number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o}=r,{boxes:i,scores:u}=n,l=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(u.dataId).id,c=Lp(l,p,s,a,o),{pSelectedIndices:d,selectedSize:h,pSelectedScores:m,pValidOutputs:f}=tc(t,c);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([h],"int32",d)}},{kernelName:"NonMaxSuppressionV4",backendName:"wasm",setupFunc:function(e){Vp=e.wasm.cwrap("NonMaxSuppressionV4","number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o,padToMaxOutputSize:i}=r,{boxes:u,scores:l}=n,p=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(l.dataId).id,d=Vp(p,c,s,a,o,i),{pSelectedIndices:h,selectedSize:m,pSelectedScores:f,pValidOutputs:y}=tc(t,d);return t.wasm._free(f),[t.makeOutput([m],"int32",h),t.makeOutput([],"int32",y)]}},{kernelName:"NonMaxSuppressionV5",backendName:"wasm",setupFunc:function(e){qp=e.wasm.cwrap("NonMaxSuppressionV5","number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:o,softNmsSigma:i}=r,{boxes:u,scores:l}=n,p=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(l.dataId).id,d=qp(p,c,s,a,o,i),{pSelectedIndices:h,selectedSize:m,pSelectedScores:f,pValidOutputs:y}=tc(t,d);return t.wasm._free(y),[t.makeOutput([m],"int32",h),t.makeOutput([m],"float32",f)]}},rp("NotEqual",!1,"bool"),{kernelName:"OneHot",backendName:"wasm",setupFunc:function(e){Wp=e.wasm.cwrap("OneHot",null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:o,offValue:i}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(a.dataId).id;return Wp(p,s,o,i,l),u}},{kernelName:"OnesLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},{kernelName:"PadV2",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(e=>e[0]),c=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(p).buffer),h=new Uint8Array(new Int32Array(c).buffer);return Hp(o,l,t.shape.length,Xl[t.dtype],d,h,a,u),i},setupFunc:function(e){Hp=e.wasm.cwrap("PadV2",null,["number","array","number","number","array","array","number","number"])}},rp("Pow",!1),{kernelName:"Prelu",backendName:"wasm",setupFunc:function(e){Up=e.wasm.cwrap("Prelu",null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,i=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(i.dataId).id;return Up(s,o,u),i}},tp("Relu"),tp("Relu6"),{kernelName:"Reshape",backendName:"wasm",kernelFunc:nc},{kernelName:"ResizeBilinear",backendName:"wasm",setupFunc:function(e){jp=e.wasm.cwrap("ResizeBilinear",null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,size:o}=r,[i,u]=o,[l,p,c,d]=a.shape,h=[l,i,u,d];let m,f=t.dataIdMap.get(a.dataId);"float32"!==f.dtype&&(m=wp({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));const y=f.id,g=t.makeOutput(h,"float32");if(0===_(a.shape))return g;const b=t.dataIdMap.get(g.dataId).id;return jp(y,l,p,c,d,i,u,s?1:0,b),null!=m&&t.disposeData(m.dataId),g}},{kernelName:"Reverse",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,o=M(s,a.shape);if(0===a.shape.length)return ip({inputs:{x:a},backend:n});const i=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(o).buffer),c=new Uint8Array(new Int32Array(a.shape).buffer);return Gp(u,p,o.length,c,a.shape.length,l),nc({inputs:{x:i},attrs:{shape:a.shape},backend:n})},setupFunc:function(e){Gp=e.wasm.cwrap("Reverse",null,["number","array","number","array","number","number"])}},{kernelName:"RotateWithOffset",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:o,center:i}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(u.dataId).id,[c,d,h,m]=a.shape,[f,y]=(x=d,[h*("number"==typeof(w=i)?w:w[0]),x*("number"==typeof w?w:w[1])]),g="number"==typeof o?[o,o,o,0===o?0:255]:[...o,255],b=new Uint8Array(new Int32Array(g).buffer);var w,x;return Kp(l,c,d,h,m,s,f,y,b,g.length,p),u},setupFunc:function(e){Kp=e.wasm.cwrap("RotateWithOffset",null,["number","number","number","number","number","number","number","number","array","number","number"])}},tp("Rsqrt"),{kernelName:"ScatterNd",backendName:"wasm",setupFunc:function(e){Yp=e.wasm.cwrap("ScatterNd",null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:o}=r,i=t.makeOutput(o,s.dtype);if(0===_(o))return i;const{sliceRank:u,numUpdates:l,sliceSize:p,strides:c,outputSize:d}=function(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const i=a<1?1:a;return{sliceRank:a,numUpdates:_(t.shape)/i,sliceSize:o,strides:[...R(n.slice(0,a)),1],outputSize:_(n)}}(0,a,o),h=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(c).buffer),y=t.dataIdMap.get(i.dataId).id;return Yp(h,m,Xl[s.dtype],u,l,p,f,d,y),i}},{kernelName:"SelectV2",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,o=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(l.dataId).id,c=r.shape.length,d=a.shape.length,h=0===c||c>1||1===d?1:_(a.shape.slice(1));return Xp(o,i,u,h,p),l},setupFunc:function(e){Xp=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Jp=e.wasm.cwrap("Sigmoid",null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===_(a.shape)||Jp(r,s),a}},tp("Sin"),{kernelName:"Slice",backendName:"wasm",kernelFunc:rc},{kernelName:"Softmax",backendName:"wasm",setupFunc:function(e){Zp=e.wasm.cwrap("Softmax",null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(s.dataId).id,i=n.shape[r],u=_(n.shape)/i;return 0===_(s.shape)||Zp(a,o,i,u),s}},{kernelName:"SplitV",backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:o}=n,i=M(o,a.shape)[0],u=Dt(a,s,o),l=new Array(a.shape.length).fill(0),p=a.shape.slice();return u.map(e=>{const t=[...p];t[i]=e;const n=rc({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[i]+=e,n})}},tp("Sqrt"),tp("Square"),rp("Sub",!0),{kernelName:"Sum",backendName:"wasm",setupFunc:function(e){Qp=e.wasm.cwrap("Sum",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id;let u=i,l=o;const{transposed:p,axes:c,originalAxes:d,inputWasTransposed:h}=dp(o,a,t);let m=c;if(h){const e=t.dataIdMap.get(p.dataId).id;e!==i&&(l=p,u=e,m=Xe(m.length,l.shape.length))}Ge("sum",m,l.shape.length);const[f,y]=Ue(l.shape,m),g=_(y),b=t.makeOutput(f,l.dtype);if(0!==_(l.shape)){const e=t.dataIdMap.get(b.dataId).id;Qp(u,g,e)}if(h&&t.disposeData(p.dataId),s){const e=je(b.shape,d);b.shape=e}return b}},tp("Tanh"),{kernelName:"Tile",backendName:"wasm",setupFunc:function(e){ec=e.wasm.cwrap("Tile",null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:o}=r,i=new Array(a.shape.length);for(let e=0;e<i.length;e++)i[e]=a.shape[e]*o[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(i).buffer),p=n.makeOutput(i,a.dtype),c=n.dataIdMap.get(p.dataId).id;return ec(s,u,a.shape.length,l,i.length,Xl[p.dtype],c),p}},cp,{kernelName:"Unpack",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r,o=a.shape[s],i=a.shape.length,u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const p=new Array(o),c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<p.length;e++)c[s]=e,p[e]=rc({inputs:{x:a},attrs:{begin:c,size:d},backend:n});return p.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u}))}},{kernelName:"ZerosLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of ac)b(e);function sc(e,t){return e(t={exports:{}},t.exports),t.exports}u().registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));var oc=sc((function(e,t){var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){var t,r=void 0!==(e=e||{})?e:{},a={};for(t in r)r.hasOwnProperty(t)&&(a[t]=r[t]);var i,u,l,p;i="object"==typeof window,u="function"==typeof importScripts,l="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,p=!i&&!l&&!u;var c,d,h,m,f="";l?(f=u?s.default.dirname(f)+"/":__dirname+"/",c=function(e,t){return h||(h=o.default),m||(m=s.default),e=m.normalize(e),h.readFileSync(e,t?null:"utf8")},d=function(e){var t=c(e,!0);return t.buffer||(t=new Uint8Array(t)),v(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ie))throw e})),process.on("unhandledRejection",j),r.inspect=function(){return"[Emscripten Module object]"}):p?("undefined"!=typeof read&&(c=function(e){return read(e)}),d=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(v("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs&&scriptArgs,"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(i||u)&&(u?f=self.location.href:document.currentScript&&(f=document.currentScript.src),n&&(f=n),f=0!==f.indexOf("blob:")?f.substr(0,f.lastIndexOf("/")+1):"",c=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},u&&(d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}));var y,g,b=r.print||console.log.bind(console),w=r.printErr||console.warn.bind(console);for(t in a)a.hasOwnProperty(t)&&(r[t]=a[t]);a=null,r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,r.quit&&r.quit,r.wasmBinary&&(y=r.wasmBinary),r.noExitRuntime&&r.noExitRuntime,"object"!=typeof WebAssembly&&w("no native wasm support detected");var x=new WebAssembly.Table({initial:151,maximum:151,element:"anyfunc"}),k=!1;function v(e,t){e||j("Assertion failed: "+t)}function N(e){var t=r["_"+e];return v(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function S(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){(function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,o=0;o<e.length;++o){var i=e.charCodeAt(o);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),i<=127){if(n>=s)break;t[n++]=i}else if(i<=2047){if(n+1>=s)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=s)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=s)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0})(e,M,t,n)}(e,t=se(n),n)}return t},array:function(e){var t=se(e.length);return function(e,t){D.set(e,t)}(e,t),t}},o=N(e),i=[],u=0;if(r)for(var l=0;l<r.length;l++){var p=s[n[l]];p?(0===u&&(u=ae()),i[l]=p(r[l])):i[l]=r[l]}var c=o.apply(null,i);return c=function(e){return"string"===t?E(e):"boolean"===t?Boolean(e):e}(c),0!==u&&oe(u),c}var I="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function _(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&I)return I.decode(e.subarray(t,a));for(var s="";t<a;){var o=e[t++];if(128&o){var i=63&e[t++];if(192!=(224&o)){var u=63&e[t++];if((o=224==(240&o)?(15&o)<<12|i<<6|u:(7&o)<<18|i<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(o);else{var l=o-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&o)<<6|i)}else s+=String.fromCharCode(o)}return s}function E(e,t){return e?_(M,e,t):""}var T,D,M,A;function F(e,t){return e%t>0&&(e+=t-e%t),e}function $(e){T=e,r.HEAP8=D=new Int8Array(e),r.HEAP16=new Int16Array(e),r.HEAP32=A=new Int32Array(e),r.HEAPU8=M=new Uint8Array(e),r.HEAPU16=new Uint16Array(e),r.HEAPU32=new Uint32Array(e),r.HEAPF32=new Float32Array(e),r.HEAPF64=new Float64Array(e)}var O=r.INITIAL_MEMORY||16777216;function C(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?r.dynCall_v(n):r.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(r)}}(g=r.wasmMemory?r.wasmMemory:new WebAssembly.Memory({initial:O/65536,maximum:32768}))&&(T=g.buffer),O=T.byteLength,$(T),A[2872]=5254528;var R=[],B=[],z=[],P=[];function L(e){R.unshift(e)}function V(e){P.unshift(e)}var q=Math.ceil,W=Math.floor,H=0,U=null;function j(e){throw r.onAbort&&r.onAbort(e),b(e+=""),w(e),k=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function G(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}r.preloadedImages={},r.preloadedAudios={};function K(e){return G(e,"data:application/octet-stream;base64,")}function Y(e){return G(e,"file://")}var X="tfjs-backend-wasm-simd.wasm";function J(){try{if(y)return new Uint8Array(y);if(d)return d(X);throw"both async and sync fetching of the wasm failed"}catch(e){j(e)}}function Z(e){try{return g.grow(e-T.byteLength+65535>>>16),$(g.buffer),1}catch(e){}}K(X)||(X=function(e){return r.locateFile?r.locateFile(e,f):f+e}(X)),B.push({func:function(){re()}});var Q={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Q.buffers[e];0===t||10===t?((1===e?b:w)(_(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Q.varargs+=4,A[Q.varargs-4>>2]},getStr:function(e){return E(e)},get64:function(e,t){return e}};var ee={a:function(){j()},e:function(e,t,n){M.copyWithin(e,t,t+n)},f:function(e){e>>>=0;var t=M.length;if(e>2147483648)return!1;for(var n=1;n<=4;n*=2){var r=t*(1+.2/n);if(r=Math.min(r,e+100663296),Z(Math.min(2147483648,F(Math.max(16777216,e,r),65536))))return!0}return!1},g:function(e){return 0},d:function(e,t,n,r,a){},c:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var o=A[t+8*s>>2],i=A[t+(8*s+4)>>2],u=0;u<i;u++)Q.printChar(e,M[o+u]);a+=i}return A[r>>2]=a,0},memory:g,b:function(e){return(e=+e)>=0?+W(e+.5):+q(e-.5)},table:x},te=function(){var e={a:ee};function t(e,t){var n=e.exports;r.asm=n,function(e){if(H--,r.monitorRunDependencies&&r.monitorRunDependencies(H),0==H&&U){var t=U;U=null,t()}}()}function n(e){t(e.instance)}function a(t){return(y||!i&&!u||"function"!=typeof fetch||Y(X)?new Promise((function(e,t){e(J())})):fetch(X,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+X+"'";return e.arrayBuffer()})).catch((function(){return J()}))).then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){w("failed to asynchronously prepare wasm: "+e),j(e)}))}if(H++,r.monitorRunDependencies&&r.monitorRunDependencies(H),r.instantiateWasm)try{return r.instantiateWasm(e,t)}catch(e){return w("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(y||"function"!=typeof WebAssembly.instantiateStreaming||K(X)||Y(X)||"function"!=typeof fetch)return a(n);fetch(X,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){w("wasm streaming compile failed: "+e),w("falling back to ArrayBuffer instantiation"),a(n)}))}))}(),{}}();r.asm=te;var ne,re=r.___wasm_call_ctors=function(){return(re=r.___wasm_call_ctors=r.asm.h).apply(null,arguments)},ae=(r._init=function(){return(r._init=r.asm.i).apply(null,arguments)},r._register_tensor=function(){return(r._register_tensor=r.asm.j).apply(null,arguments)},r._dispose_data=function(){return(r._dispose_data=r.asm.k).apply(null,arguments)},r._dispose=function(){return(r._dispose=r.asm.l).apply(null,arguments)},r._Abs=function(){return(r._Abs=r.asm.m).apply(null,arguments)},r._Add=function(){return(r._Add=r.asm.n).apply(null,arguments)},r._AddN=function(){return(r._AddN=r.asm.o).apply(null,arguments)},r._ArgMax=function(){return(r._ArgMax=r.asm.p).apply(null,arguments)},r._AvgPool=function(){return(r._AvgPool=r.asm.q).apply(null,arguments)},r._BatchMatMul=function(){return(r._BatchMatMul=r.asm.r).apply(null,arguments)},r._ClipByValue=function(){return(r._ClipByValue=r.asm.s).apply(null,arguments)},r._Conv2D=function(){return(r._Conv2D=r.asm.t).apply(null,arguments)},r._Conv2DBackpropInput=function(){return(r._Conv2DBackpropInput=r.asm.u).apply(null,arguments)},r._Cos=function(){return(r._Cos=r.asm.v).apply(null,arguments)},r._CropAndResize=function(){return(r._CropAndResize=r.asm.w).apply(null,arguments)},r._DepthwiseConv2dNative=function(){return(r._DepthwiseConv2dNative=r.asm.x).apply(null,arguments)},r._Div=function(){return(r._Div=r.asm.y).apply(null,arguments)},r._Equal=function(){return(r._Equal=r.asm.z).apply(null,arguments)},r._Exp=function(){return(r._Exp=r.asm.A).apply(null,arguments)},r._FloorDiv=function(){return(r._FloorDiv=r.asm.B).apply(null,arguments)},r._FusedBatchNorm=function(){return(r._FusedBatchNorm=r.asm.C).apply(null,arguments)},r._FusedConv2D=function(){return(r._FusedConv2D=r.asm.D).apply(null,arguments)},r._FusedDepthwiseConv2D=function(){return(r._FusedDepthwiseConv2D=r.asm.E).apply(null,arguments)},r._Gather=function(){return(r._Gather=r.asm.F).apply(null,arguments)},r._GatherNd=function(){return(r._GatherNd=r.asm.G).apply(null,arguments)},r._Greater=function(){return(r._Greater=r.asm.H).apply(null,arguments)},r._GreaterEqual=function(){return(r._GreaterEqual=r.asm.I).apply(null,arguments)},r._Less=function(){return(r._Less=r.asm.J).apply(null,arguments)},r._LessEqual=function(){return(r._LessEqual=r.asm.K).apply(null,arguments)},r._Log=function(){return(r._Log=r.asm.L).apply(null,arguments)},r._LogicalAnd=function(){return(r._LogicalAnd=r.asm.M).apply(null,arguments)},r._Max=function(){return(r._Max=r.asm.N).apply(null,arguments)},r._MaxPool=function(){return(r._MaxPool=r.asm.O).apply(null,arguments)},r._Maximum=function(){return(r._Maximum=r.asm.P).apply(null,arguments)},r._Min=function(){return(r._Min=r.asm.Q).apply(null,arguments)},r._Minimum=function(){return(r._Minimum=r.asm.R).apply(null,arguments)},r._Multiply=function(){return(r._Multiply=r.asm.S).apply(null,arguments)},r._Negate=function(){return(r._Negate=r.asm.T).apply(null,arguments)},r._NonMaxSuppressionV3=function(){return(r._NonMaxSuppressionV3=r.asm.U).apply(null,arguments)},r._NonMaxSuppressionV4=function(){return(r._NonMaxSuppressionV4=r.asm.V).apply(null,arguments)},r._NonMaxSuppressionV5=function(){return(r._NonMaxSuppressionV5=r.asm.W).apply(null,arguments)},r._NotEqual=function(){return(r._NotEqual=r.asm.X).apply(null,arguments)},r._OneHot=function(){return(r._OneHot=r.asm.Y).apply(null,arguments)},r._PadV2=function(){return(r._PadV2=r.asm.Z).apply(null,arguments)},r._Pow=function(){return(r._Pow=r.asm._).apply(null,arguments)},r._Prelu=function(){return(r._Prelu=r.asm.$).apply(null,arguments)},r._Relu=function(){return(r._Relu=r.asm.aa).apply(null,arguments)},r._Relu6=function(){return(r._Relu6=r.asm.ba).apply(null,arguments)},r._ResizeBilinear=function(){return(r._ResizeBilinear=r.asm.ca).apply(null,arguments)},r._Reverse=function(){return(r._Reverse=r.asm.da).apply(null,arguments)},r._RotateWithOffset=function(){return(r._RotateWithOffset=r.asm.ea).apply(null,arguments)},r._Rsqrt=function(){return(r._Rsqrt=r.asm.fa).apply(null,arguments)},r._ScatterNd=function(){return(r._ScatterNd=r.asm.ga).apply(null,arguments)},r._SelectV2=function(){return(r._SelectV2=r.asm.ha).apply(null,arguments)},r._Sigmoid=function(){return(r._Sigmoid=r.asm.ia).apply(null,arguments)},r._Sin=function(){return(r._Sin=r.asm.ja).apply(null,arguments)},r._Softmax=function(){return(r._Softmax=r.asm.ka).apply(null,arguments)},r._Sqrt=function(){return(r._Sqrt=r.asm.la).apply(null,arguments)},r._Square=function(){return(r._Square=r.asm.ma).apply(null,arguments)},r._Sub=function(){return(r._Sub=r.asm.na).apply(null,arguments)},r._Sum=function(){return(r._Sum=r.asm.oa).apply(null,arguments)},r._Tanh=function(){return(r._Tanh=r.asm.pa).apply(null,arguments)},r._Tile=function(){return(r._Tile=r.asm.qa).apply(null,arguments)},r._Transpose=function(){return(r._Transpose=r.asm.ra).apply(null,arguments)},r.__FusedMatMul=function(){return(r.__FusedMatMul=r.asm.sa).apply(null,arguments)},r._malloc=function(){return(r._malloc=r.asm.ta).apply(null,arguments)},r._free=function(){return(r._free=r.asm.ua).apply(null,arguments)},r.stackSave=function(){return(ae=r.stackSave=r.asm.va).apply(null,arguments)}),se=r.stackAlloc=function(){return(se=r.stackAlloc=r.asm.wa).apply(null,arguments)},oe=r.stackRestore=function(){return(oe=r.stackRestore=r.asm.xa).apply(null,arguments)};function ie(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function t(){ne||(ne=!0,r.calledRun=!0,k||(C(B),C(z),r.onRuntimeInitialized&&r.onRuntimeInitialized(),function(){if(r.postRun)for("function"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)V(r.postRun.shift());C(P)}()))}H>0||(function(){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)L(r.preRun.shift());C(R)}(),H>0||(r.setStatus?(r.setStatus("Running..."),setTimeout((function(){setTimeout((function(){r.setStatus("")}),1),t()}),1)):t()))}if(r.dynCall_vi=function(){return(r.dynCall_vi=r.asm.ya).apply(null,arguments)},r.dynCall_v=function(){return(r.dynCall_v=r.asm.za).apply(null,arguments)},r.asm=te,r.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?N(e):function(){return S(e,t,n,arguments)}},r.then=function(e){if(ne)e(r);else{var t=r.onRuntimeInitialized;r.onRuntimeInitialized=function(){t&&t(),e(r)}}return r},U=function e(){ne||ue(),ne||(U=e)},r.run=ue,r.preInit)for("function"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();return ue(),e});e.exports=r})),ic=sc((function(e,t){var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){var t,r=void 0!==(e=e||{})?e:{},a={};for(t in r)r.hasOwnProperty(t)&&(a[t]=r[t]);var i,u,l,p;i="object"==typeof window,u="function"==typeof importScripts,l="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,p=!i&&!l&&!u;var c,d,h,m,f="";l?(f=u?s.default.dirname(f)+"/":__dirname+"/",c=function(e,t){return h||(h=o.default),m||(m=s.default),e=m.normalize(e),h.readFileSync(e,t?null:"utf8")},d=function(e){var t=c(e,!0);return t.buffer||(t=new Uint8Array(t)),v(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ie))throw e})),process.on("unhandledRejection",j),r.inspect=function(){return"[Emscripten Module object]"}):p?("undefined"!=typeof read&&(c=function(e){return read(e)}),d=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(v("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs&&scriptArgs,"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(i||u)&&(u?f=self.location.href:document.currentScript&&(f=document.currentScript.src),n&&(f=n),f=0!==f.indexOf("blob:")?f.substr(0,f.lastIndexOf("/")+1):"",c=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},u&&(d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}));var y,g,b=r.print||console.log.bind(console),w=r.printErr||console.warn.bind(console);for(t in a)a.hasOwnProperty(t)&&(r[t]=a[t]);a=null,r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,r.quit&&r.quit,r.wasmBinary&&(y=r.wasmBinary),r.noExitRuntime&&r.noExitRuntime,"object"!=typeof WebAssembly&&w("no native wasm support detected");var x=new WebAssembly.Table({initial:146,maximum:146,element:"anyfunc"}),k=!1;function v(e,t){e||j("Assertion failed: "+t)}function N(e){var t=r["_"+e];return v(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function S(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){(function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,o=0;o<e.length;++o){var i=e.charCodeAt(o);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),i<=127){if(n>=s)break;t[n++]=i}else if(i<=2047){if(n+1>=s)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=s)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=s)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0})(e,M,t,n)}(e,t=se(n),n)}return t},array:function(e){var t=se(e.length);return function(e,t){D.set(e,t)}(e,t),t}},o=N(e),i=[],u=0;if(r)for(var l=0;l<r.length;l++){var p=s[n[l]];p?(0===u&&(u=ae()),i[l]=p(r[l])):i[l]=r[l]}var c=o.apply(null,i);return c=function(e){return"string"===t?E(e):"boolean"===t?Boolean(e):e}(c),0!==u&&oe(u),c}var I="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function _(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&I)return I.decode(e.subarray(t,a));for(var s="";t<a;){var o=e[t++];if(128&o){var i=63&e[t++];if(192!=(224&o)){var u=63&e[t++];if((o=224==(240&o)?(15&o)<<12|i<<6|u:(7&o)<<18|i<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(o);else{var l=o-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&o)<<6|i)}else s+=String.fromCharCode(o)}return s}function E(e,t){return e?_(M,e,t):""}var T,D,M,A;function F(e,t){return e%t>0&&(e+=t-e%t),e}function $(e){T=e,r.HEAP8=D=new Int8Array(e),r.HEAP16=new Int16Array(e),r.HEAP32=A=new Int32Array(e),r.HEAPU8=M=new Uint8Array(e),r.HEAPU16=new Uint16Array(e),r.HEAPU32=new Uint32Array(e),r.HEAPF32=new Float32Array(e),r.HEAPF64=new Float64Array(e)}var O=r.INITIAL_MEMORY||16777216;function C(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?r.dynCall_v(n):r.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(r)}}(g=r.wasmMemory?r.wasmMemory:new WebAssembly.Memory({initial:O/65536,maximum:32768}))&&(T=g.buffer),O=T.byteLength,$(T),A[2940]=5254800;var R=[],B=[],z=[],P=[];function L(e){R.unshift(e)}function V(e){P.unshift(e)}var q=Math.ceil,W=Math.floor,H=0,U=null;function j(e){throw r.onAbort&&r.onAbort(e),b(e+=""),w(e),k=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function G(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}r.preloadedImages={},r.preloadedAudios={};function K(e){return G(e,"data:application/octet-stream;base64,")}function Y(e){return G(e,"file://")}var X="tfjs-backend-wasm.wasm";function J(){try{if(y)return new Uint8Array(y);if(d)return d(X);throw"both async and sync fetching of the wasm failed"}catch(e){j(e)}}function Z(e){try{return g.grow(e-T.byteLength+65535>>>16),$(g.buffer),1}catch(e){}}K(X)||(X=function(e){return r.locateFile?r.locateFile(e,f):f+e}(X)),B.push({func:function(){re()}});var Q={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Q.buffers[e];0===t||10===t?((1===e?b:w)(_(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Q.varargs+=4,A[Q.varargs-4>>2]},getStr:function(e){return E(e)},get64:function(e,t){return e}};var ee={a:function(){j()},e:function(e,t,n){M.copyWithin(e,t,t+n)},f:function(e){e>>>=0;var t=M.length;if(e>2147483648)return!1;for(var n=1;n<=4;n*=2){var r=t*(1+.2/n);if(r=Math.min(r,e+100663296),Z(Math.min(2147483648,F(Math.max(16777216,e,r),65536))))return!0}return!1},g:function(e){return 0},d:function(e,t,n,r,a){},c:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var o=A[t+8*s>>2],i=A[t+(8*s+4)>>2],u=0;u<i;u++)Q.printChar(e,M[o+u]);a+=i}return A[r>>2]=a,0},memory:g,b:function(e){return(e=+e)>=0?+W(e+.5):+q(e-.5)},table:x},te=function(){var e={a:ee};function t(e,t){var n=e.exports;r.asm=n,function(e){if(H--,r.monitorRunDependencies&&r.monitorRunDependencies(H),0==H&&U){var t=U;U=null,t()}}()}function n(e){t(e.instance)}function a(t){return(y||!i&&!u||"function"!=typeof fetch||Y(X)?new Promise((function(e,t){e(J())})):fetch(X,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+X+"'";return e.arrayBuffer()})).catch((function(){return J()}))).then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){w("failed to asynchronously prepare wasm: "+e),j(e)}))}if(H++,r.monitorRunDependencies&&r.monitorRunDependencies(H),r.instantiateWasm)try{return r.instantiateWasm(e,t)}catch(e){return w("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(y||"function"!=typeof WebAssembly.instantiateStreaming||K(X)||Y(X)||"function"!=typeof fetch)return a(n);fetch(X,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){w("wasm streaming compile failed: "+e),w("falling back to ArrayBuffer instantiation"),a(n)}))}))}(),{}}();r.asm=te;var ne,re=r.___wasm_call_ctors=function(){return(re=r.___wasm_call_ctors=r.asm.h).apply(null,arguments)},ae=(r._init=function(){return(r._init=r.asm.i).apply(null,arguments)},r._register_tensor=function(){return(r._register_tensor=r.asm.j).apply(null,arguments)},r._dispose_data=function(){return(r._dispose_data=r.asm.k).apply(null,arguments)},r._dispose=function(){return(r._dispose=r.asm.l).apply(null,arguments)},r._Abs=function(){return(r._Abs=r.asm.m).apply(null,arguments)},r._Add=function(){return(r._Add=r.asm.n).apply(null,arguments)},r._AddN=function(){return(r._AddN=r.asm.o).apply(null,arguments)},r._ArgMax=function(){return(r._ArgMax=r.asm.p).apply(null,arguments)},r._AvgPool=function(){return(r._AvgPool=r.asm.q).apply(null,arguments)},r._BatchMatMul=function(){return(r._BatchMatMul=r.asm.r).apply(null,arguments)},r._ClipByValue=function(){return(r._ClipByValue=r.asm.s).apply(null,arguments)},r._Conv2D=function(){return(r._Conv2D=r.asm.t).apply(null,arguments)},r._Conv2DBackpropInput=function(){return(r._Conv2DBackpropInput=r.asm.u).apply(null,arguments)},r._Cos=function(){return(r._Cos=r.asm.v).apply(null,arguments)},r._CropAndResize=function(){return(r._CropAndResize=r.asm.w).apply(null,arguments)},r._DepthwiseConv2dNative=function(){return(r._DepthwiseConv2dNative=r.asm.x).apply(null,arguments)},r._Div=function(){return(r._Div=r.asm.y).apply(null,arguments)},r._Equal=function(){return(r._Equal=r.asm.z).apply(null,arguments)},r._Exp=function(){return(r._Exp=r.asm.A).apply(null,arguments)},r._FloorDiv=function(){return(r._FloorDiv=r.asm.B).apply(null,arguments)},r._FusedBatchNorm=function(){return(r._FusedBatchNorm=r.asm.C).apply(null,arguments)},r._FusedConv2D=function(){return(r._FusedConv2D=r.asm.D).apply(null,arguments)},r._FusedDepthwiseConv2D=function(){return(r._FusedDepthwiseConv2D=r.asm.E).apply(null,arguments)},r._Gather=function(){return(r._Gather=r.asm.F).apply(null,arguments)},r._GatherNd=function(){return(r._GatherNd=r.asm.G).apply(null,arguments)},r._Greater=function(){return(r._Greater=r.asm.H).apply(null,arguments)},r._GreaterEqual=function(){return(r._GreaterEqual=r.asm.I).apply(null,arguments)},r._Less=function(){return(r._Less=r.asm.J).apply(null,arguments)},r._LessEqual=function(){return(r._LessEqual=r.asm.K).apply(null,arguments)},r._Log=function(){return(r._Log=r.asm.L).apply(null,arguments)},r._LogicalAnd=function(){return(r._LogicalAnd=r.asm.M).apply(null,arguments)},r._Max=function(){return(r._Max=r.asm.N).apply(null,arguments)},r._MaxPool=function(){return(r._MaxPool=r.asm.O).apply(null,arguments)},r._Maximum=function(){return(r._Maximum=r.asm.P).apply(null,arguments)},r._Min=function(){return(r._Min=r.asm.Q).apply(null,arguments)},r._Minimum=function(){return(r._Minimum=r.asm.R).apply(null,arguments)},r._Multiply=function(){return(r._Multiply=r.asm.S).apply(null,arguments)},r._Negate=function(){return(r._Negate=r.asm.T).apply(null,arguments)},r._NonMaxSuppressionV3=function(){return(r._NonMaxSuppressionV3=r.asm.U).apply(null,arguments)},r._NonMaxSuppressionV4=function(){return(r._NonMaxSuppressionV4=r.asm.V).apply(null,arguments)},r._NonMaxSuppressionV5=function(){return(r._NonMaxSuppressionV5=r.asm.W).apply(null,arguments)},r._NotEqual=function(){return(r._NotEqual=r.asm.X).apply(null,arguments)},r._OneHot=function(){return(r._OneHot=r.asm.Y).apply(null,arguments)},r._PadV2=function(){return(r._PadV2=r.asm.Z).apply(null,arguments)},r._Pow=function(){return(r._Pow=r.asm._).apply(null,arguments)},r._Prelu=function(){return(r._Prelu=r.asm.$).apply(null,arguments)},r._Relu=function(){return(r._Relu=r.asm.aa).apply(null,arguments)},r._Relu6=function(){return(r._Relu6=r.asm.ba).apply(null,arguments)},r._ResizeBilinear=function(){return(r._ResizeBilinear=r.asm.ca).apply(null,arguments)},r._Reverse=function(){return(r._Reverse=r.asm.da).apply(null,arguments)},r._RotateWithOffset=function(){return(r._RotateWithOffset=r.asm.ea).apply(null,arguments)},r._Rsqrt=function(){return(r._Rsqrt=r.asm.fa).apply(null,arguments)},r._ScatterNd=function(){return(r._ScatterNd=r.asm.ga).apply(null,arguments)},r._SelectV2=function(){return(r._SelectV2=r.asm.ha).apply(null,arguments)},r._Sigmoid=function(){return(r._Sigmoid=r.asm.ia).apply(null,arguments)},r._Sin=function(){return(r._Sin=r.asm.ja).apply(null,arguments)},r._Softmax=function(){return(r._Softmax=r.asm.ka).apply(null,arguments)},r._Sqrt=function(){return(r._Sqrt=r.asm.la).apply(null,arguments)},r._Square=function(){return(r._Square=r.asm.ma).apply(null,arguments)},r._Sub=function(){return(r._Sub=r.asm.na).apply(null,arguments)},r._Sum=function(){return(r._Sum=r.asm.oa).apply(null,arguments)},r._Tanh=function(){return(r._Tanh=r.asm.pa).apply(null,arguments)},r._Tile=function(){return(r._Tile=r.asm.qa).apply(null,arguments)},r._Transpose=function(){return(r._Transpose=r.asm.ra).apply(null,arguments)},r.__FusedMatMul=function(){return(r.__FusedMatMul=r.asm.sa).apply(null,arguments)},r._malloc=function(){return(r._malloc=r.asm.ta).apply(null,arguments)},r._free=function(){return(r._free=r.asm.ua).apply(null,arguments)},r.stackSave=function(){return(ae=r.stackSave=r.asm.va).apply(null,arguments)}),se=r.stackAlloc=function(){return(se=r.stackAlloc=r.asm.wa).apply(null,arguments)},oe=r.stackRestore=function(){return(oe=r.stackRestore=r.asm.xa).apply(null,arguments)};function ie(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function t(){ne||(ne=!0,r.calledRun=!0,k||(C(B),C(z),r.onRuntimeInitialized&&r.onRuntimeInitialized(),function(){if(r.postRun)for("function"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)V(r.postRun.shift());C(P)}()))}H>0||(function(){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)L(r.preRun.shift());C(R)}(),H>0||(r.setStatus?(r.setStatus("Running..."),setTimeout((function(){setTimeout((function(){r.setStatus("")}),1),t()}),1)):t()))}if(r.dynCall_vi=function(){return(r.dynCall_vi=r.asm.ya).apply(null,arguments)},r.dynCall_v=function(){return(r.dynCall_v=r.asm.za).apply(null,arguments)},r.asm=te,r.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?N(e):function(){return S(e,t,n,arguments)}},r.then=function(e){if(ne)e(r);else{var t=r.onRuntimeInitialized;r.onRuntimeInitialized=function(){t&&t(),e(r)}}return r},U=function e(){ne||ue(),ne||(U=e)},r.run=ue,r.preInit)for("function"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();return ue(),e});e.exports=r}));class uc extends class{time(e){return qu("time")}read(e){return qu("read")}readSync(e){return qu("readSync")}numDataIds(){return qu("numDataIds")}disposeData(e){return qu("disposeData")}write(e,t,n){return qu("write")}move(e,t,n,r){return qu("move")}memory(){return qu("memory")}floatPrecision(){return qu("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return qu("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:a,activation:s,preluActivationWeights:o}){return qu("fusedBatchMatMul")}slice(e,t,n){return qu("slice")}stridedSlice(e,t,n,r){return qu("stridedSlice")}unstack(e,t){return qu("unstack")}reverse(e,t){return qu("reverse")}concat(e,t){return qu("concat")}neg(e){return qu("neg")}add(e,t){return qu("add")}addN(e){return qu("addN")}subtract(e,t){return qu("subtract")}multiply(e,t){return qu("multiply")}realDivide(e,t){return qu("realDivide")}floorDiv(e,t){return qu("floorDiv")}sum(e,t){return qu("sum")}prod(e,t){return qu("prod")}unsortedSegmentSum(e,t,n){return qu("unsortedSegmentSum")}argMin(e,t){return qu("argMin")}argMax(e,t){return qu("argMax")}equal(e,t){return qu("equal")}notEqual(e,t){return qu("notEqual")}less(e,t){return qu("less")}lessEqual(e,t){return qu("lessEqual")}greater(e,t){return qu("greater")}greaterEqual(e,t){return qu("greaterEqual")}logicalNot(e){return qu("logicalNot")}logicalAnd(e,t){return qu("logicalAnd")}logicalOr(e,t){return qu("logicalOr")}where(e){return qu("where")}select(e,t,n){return qu("select")}topk(e,t,n){return qu("topk")}min(e,t){return qu("min")}minimum(e,t){return qu("minimum")}mod(e,t){return qu("mod")}max(e,t){return qu("max")}maximum(e,t){return qu("maximum")}all(e,t){return qu("all")}any(e,t){return qu("any")}squaredDifference(e,t){return qu("squaredDifference")}ceil(e){return qu("ceil")}floor(e){return qu("floor")}round(e){return qu("round")}sign(e){return qu("sign")}isNaN(e){return qu("isNaN")}isInf(e){return qu("isInf")}isFinite(e){return qu("isFinite")}pow(e,t){return qu("pow")}exp(e){return qu("exp")}expm1(e){return qu("expm1")}softmax(e,t){return qu("softmax")}log(e){return qu("log")}log1p(e){return qu("log1p")}sqrt(e){return qu("sqrt")}rsqrt(e){return qu("rsqrt")}square(e){return qu("square")}reciprocal(e){return qu("reciprocal")}relu(e){return qu("relu")}relu6(e){return qu("relu6")}prelu(e,t){return qu("prelu")}elu(e){return qu("elu")}eluDer(e,t){return qu("eluDer")}selu(e){return qu("selu")}int(e){return qu("int")}clip(e,t,n){return qu("clip")}abs(e){return qu("abs")}complexAbs(e){return qu("complexAbs")}sigmoid(e){return qu("sigmoid")}softplus(e){return qu("softplus")}sin(e){return qu("sin")}cos(e){return qu("cos")}tan(e){return qu("tan")}asin(e){return qu("asin")}acos(e){return qu("acos")}atan(e){return qu("atan")}atan2(e,t){return qu("atan2")}sinh(e){return qu("sinh")}cosh(e){return qu("cosh")}tanh(e){return qu("tanh")}asinh(e){return qu("asinh")}acosh(e){return qu("acosh")}atanh(e){return qu("atanh")}erf(e){return qu("erf")}step(e,t){return qu("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return qu("fusedConv2d")}conv2d(e,t,n){return qu("conv2d")}conv2dDerInput(e,t,n){return qu("conv2dDerInput")}conv2dDerFilter(e,t,n){return qu("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return qu("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return qu("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return qu("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return qu("depthwiseConv2DDerFilter")}conv3d(e,t,n){return qu("conv3d")}conv3dDerInput(e,t,n){return qu("conv3dDerInput")}conv3dDerFilter(e,t,n){return qu("conv3dDerFilter")}maxPool(e,t){return qu("maxPool")}maxPoolBackprop(e,t,n,r){return qu("maxPoolBackprop")}avgPool(e,t){return qu("avgPool")}avgPoolBackprop(e,t,n){return qu("avgPoolBackprop")}avgPool3d(e,t){return qu("avgPool3d")}avgPool3dBackprop(e,t,n){return qu("avgPool3dBackprop")}maxPool3d(e,t){return qu("maxPool3d")}maxPool3dBackprop(e,t,n,r){return qu("maxPool3dBackprop")}reshape(e,t){return qu("reshape")}cast(e,t){return qu("cast")}tile(e,t){return qu("tile")}pad(e,t,n){return qu("pad")}transpose(e,t){return qu("transpose")}gather(e,t,n){return qu("gather")}gatherND(e,t){return qu("gatherND")}scatterND(e,t,n){return qu("scatterND")}batchToSpaceND(e,t,n){return qu("batchToSpaceND")}spaceToBatchND(e,t,n){return qu("spaceToBatchND")}resizeBilinear(e,t,n,r){return qu("resizeBilinear")}resizeBilinearBackprop(e,t,n){return qu("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r){return qu("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return qu("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,a,s){return qu("batchNorm")}localResponseNormalization4D(e,t,n,r,a){return qu("localResponseNormalization4D")}LRNGrad(e,t,n,r,a,s,o){return qu("LRNGrad")}multinomial(e,t,n,r){return qu("multinomial")}oneHot(e,t,n,r){return qu("oneHot")}cumsum(e,t,n,r){return qu("cumsum")}nonMaxSuppression(e,t,n,r,a){return qu("nonMaxSuppression")}fft(e){return qu("fft")}ifft(e){return qu("ifft")}complex(e,t){return qu("complex")}real(e){return qu("real")}imag(e){return qu("imag")}cropAndResize(e,t,n,r,a,s){return qu("cropAndResize")}depthToSpace(e,t,n){return qu("depthToSpace")}split(e,t,n){return qu("split")}sparseToDense(e,t,n,r){return qu("sparseToDense")}diag(e){return qu("diag")}fill(e,t,n){return qu("fill")}onesLike(e){return qu("onesLike")}zerosLike(e){return qu("zerosLike")}linspace(e,t,n){return qu("linspace")}dispose(){return qu("dispose")}}{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new Vu(this,ce)}write(e,t,n){const r={};return this.move(r,e,t,n),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=V();return e(),{kernelMs:V()-t}}move(e,t,n,r){const a=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:a,stringBytes:s,shape:n,dtype:r,memoryOffset:null})}const s=_(n),o=s*F(r),i=this.wasm._malloc(o);this.dataIdMap.set(e,{id:a,memoryOffset:i,shape:n,dtype:r}),this.wasm.tfjs.registerTensor(a,s,i),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),i)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype "+t)}}(this.wasm.HEAPU8.slice(t,t+_(r)*F(n)).buffer,n)}disposeData(e){const t=this.dataIdMap.get(e);this.wasm._free(t.memoryOffset),this.wasm.tfjs.disposeData(t.id),this.dataIdMap.delete(e)}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{r={};const a=this.dataIdNextNumber++;this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t});const s=_(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=_(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error("Uknown dtype "+t)}}}!function(e,t,n=1){ce.registerBackend(e,t,n)}("wasm",async()=>{const{wasm:e}=await async function(){const e=await u().getAsync("WASM_HAS_SIMD_SUPPORT");return new Promise((t,n)=>{const r={};null!=fc&&(r.locateFile=(e,t)=>e.endsWith(".wasm")?fc:t+e,gc&&(r.instantiateWasm=function(e){return(t,n)=>{return(r=e,a={credentials:"same-origin"},u().platform.fetch(r,a)).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(e=>{WebAssembly.instantiate(e,t).then(e=>{n(e.instance)})})}),{};var r,a}}(fc)));const a=e?oc(r):ic(r);a.tfjs={init:a.cwrap("init",null,[]),registerTensor:a.cwrap("register_tensor",null,["number","number","number"]),disposeData:a.cwrap("dispose_data",null,["number"]),dispose:a.cwrap("dispose",null,[])};let s=!1;a.onRuntimeInitialized=()=>{s=!0,yc=!1,t({wasm:a})},a.onAbort=()=>{s||yc||(yc=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))}})}();return new uc(e)},2);let lc,pc,cc,dc,hc,mc,fc=null,yc=!1,gc=!1;async function bc(e){const t=await Yl(),n=await t.estimateFaces(document.querySelector("img"),!1);if(n.length>0)for(let e=0;e<n.length;e++){const t=n[e].topLeft,r=n[e].bottomRight,a=[r[0]-t[0],r[1]-t[1]];pc.fillRect(t[0],t[1],a[0],a[1])}}!function(e,t=!1){if(yc)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");fc=e,gc=t}("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@2.1.0/dist/tfjs-backend-wasm.wasm"),hc=document.getElementById("input_image");const wc=async()=>{var e;await(e="wasm",ce.setBackend(e)),cc=hc.width,dc=hc.height,mc=document.getElementById("output"),mc.width=cc,mc.height=dc,pc=mc.getContext("2d"),pc.fillStyle="rgba(255, 0, 0, 0.5)",lc=await Yl()};var xc;window.PROFILE_MODE?(console.log("profile mode"),u().set("DEBUG",!0),(xc=async()=>{await wc(),await bc()},ce.profile(xc)).then(e=>{const t=e.kernels.map(e=>e.name),n=Array.from(new Set(t));console.log(n)})):(console.log("go"),wc(),bc())}));
//# sourceMappingURL=demo.js.map
